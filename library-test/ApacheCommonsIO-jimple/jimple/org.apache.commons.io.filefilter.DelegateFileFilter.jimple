public class org.apache.commons.io.filefilter.DelegateFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.io.FilenameFilter filenameFilter;
    private final java.io.FileFilter fileFilter;

    public void <init>(java.io.FilenameFilter)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FilenameFilter r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        r1 := @parameter0: java.io.FilenameFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The FilenameFilter must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter> = r1;

        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter> = null;

        return;
    }

    public void <init>(java.io.FileFilter)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FileFilter r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        r1 := @parameter0: java.io.FileFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The FileFilter must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter> = r1;

        r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter> = null;

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.File r1;
        java.io.FileFilter $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        $z1 = interfaceinvoke $r3.<java.io.FileFilter: boolean accept(java.io.File)>(r1);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File)>(r1);

        return $z0;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.File r1;
        java.lang.String r2;
        java.io.FilenameFilter $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        $z1 = interfaceinvoke $r4.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>(r1, r2);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File,java.lang.String)>(r1, r2);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.filefilter.DelegateFileFilter r0;
        java.io.FileFilter $r2, $r11;
        java.io.FilenameFilter $r3;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;
        java.lang.String $r5, $r6, $r10, $r12;

        r0 := @this: org.apache.commons.io.filefilter.DelegateFileFilter;

        $r2 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        if $r2 == null goto label1;

        $r11 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FileFilter fileFilter>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.io.filefilter.DelegateFileFilter: java.io.FilenameFilter filenameFilter>;

        $r12 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r4 = new java.lang.StringBuilder;

        $r5 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <org.apache.commons.io.filefilter.DelegateFileFilter: long serialVersionUID> = -8723373124984771318L;

        return;
    }
}
