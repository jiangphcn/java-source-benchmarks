public class org.apache.commons.io.monitor.FileAlterationObserver extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.List listeners;
    private final org.apache.commons.io.monitor.FileEntry rootEntry;
    private final java.io.FileFilter fileFilter;
    private final java.util.Comparator comparator;

    public void <init>(java.lang.String)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r2);

        return;
    }

    public void <init>(java.lang.String, java.io.FileFilter)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.lang.String r1;
        java.io.FileFilter r2;
        java.io.File $r3;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileFilter;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r3, r2);

        return;
    }

    public void <init>(java.lang.String, java.io.FileFilter, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.lang.String r1;
        java.io.FileFilter r2;
        org.apache.commons.io.IOCase r3;
        java.io.File $r4;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileFilter;

        r3 := @parameter2: org.apache.commons.io.IOCase;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r4, r2, r3);

        return;
    }

    public void <init>(java.io.File)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null);

        return;
    }

    public void <init>(java.io.File, java.io.FileFilter)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.File r1;
        java.io.FileFilter r2;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.FileFilter;

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null);

        return;
    }

    public void <init>(java.io.File, java.io.FileFilter, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.File r1;
        java.io.FileFilter r2;
        org.apache.commons.io.IOCase r3;
        org.apache.commons.io.monitor.FileEntry $r4;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.FileFilter;

        r3 := @parameter2: org.apache.commons.io.IOCase;

        $r4 = new org.apache.commons.io.monitor.FileEntry;

        specialinvoke $r4.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r1);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r4, r2, r3);

        return;
    }

    protected void <init>(org.apache.commons.io.monitor.FileEntry, java.io.FileFilter, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1;
        java.io.FileFilter r2;
        org.apache.commons.io.IOCase r3, $r7, $r8;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        java.io.File $r5;
        java.util.Comparator $r6, $r9, $r10;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r11, $r12;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        r2 := @parameter1: java.io.FileFilter;

        r3 := @parameter2: org.apache.commons.io.IOCase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners> = $r4;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root entry is missing");

        throw $r12;

     label1:
        $r5 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        if $r5 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root directory is missing");

        throw $r11;

     label2:
        r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry> = r1;

        r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter> = r2;

        if r3 == null goto label3;

        $r7 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = virtualinvoke r3.<org.apache.commons.io.IOCase: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

     label3:
        $r6 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_SYSTEM_COMPARATOR>;

        r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = $r6;

        goto label6;

     label4:
        $r8 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        $z1 = virtualinvoke r3.<org.apache.commons.io.IOCase: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label5;

        $r10 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_INSENSITIVE_COMPARATOR>;

        r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = $r10;

        goto label6;

     label5:
        $r9 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_COMPARATOR>;

        r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = $r9;

     label6:
        return;
    }

    public java.io.File getDirectory()
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry $r1;
        java.io.File $r2;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r1 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r2 = virtualinvoke $r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        return $r2;
    }

    public java.io.FileFilter getFileFilter()
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.FileFilter $r1;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r1 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;

        return $r1;
    }

    public void addListener(org.apache.commons.io.monitor.FileAlterationListener)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileAlterationListener r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileAlterationListener;

        if r1 == null goto label1;

        $r2 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void removeListener(org.apache.commons.io.monitor.FileAlterationListener)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileAlterationListener r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileAlterationListener;

        if r1 == null goto label2;

     label1:
        $r2 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public java.lang.Iterable getListeners()
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r1 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        return $r1;
    }

    public void initialize() throws java.lang.Exception
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry[] r1;
        org.apache.commons.io.monitor.FileEntry $r2, $r3, $r5, $r7, $r8;
        java.io.File $r4, $r6;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r3 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r2 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r4 = virtualinvoke $r2.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        virtualinvoke $r3.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>($r4);

        $r5 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r6 = virtualinvoke $r5.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        $r7 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        r1 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry)>($r6, $r7);

        $r8 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        virtualinvoke $r8.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(r1);

        return;
    }

    public void destroy() throws java.lang.Exception
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        return;
    }

    public void checkAndNotify()
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.util.Iterator r1, r15;
        java.util.List $r2, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3, $r6;
        org.apache.commons.io.monitor.FileEntry $r4, $r5, $r7, $r8, $r11, $r12;
        org.apache.commons.io.monitor.FileEntry[] $r9, $r13;
        java.io.File[] $r10, $r14;
        org.apache.commons.io.monitor.FileAlterationListener r16, r19;
        java.io.File r17;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r2 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        r15 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.commons.io.monitor.FileAlterationListener) $r3;

        interfaceinvoke r16.<org.apache.commons.io.monitor.FileAlterationListener: void onStart(org.apache.commons.io.monitor.FileAlterationObserver)>(r0);

     label2:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        r17 = virtualinvoke $r4.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        $z1 = virtualinvoke r17.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r11 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r13 = virtualinvoke $r11.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();

        $r14 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>(r17);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r12, $r13, $r14);

        goto label4;

     label3:
        $r5 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $z2 = virtualinvoke $r5.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>();

        if $z2 == 0 goto label4;

        $r8 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r7 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;

        $r9 = virtualinvoke $r7.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();

        $r10 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r8, $r9, $r10);

     label4:
        $r18 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        r1 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.commons.io.monitor.FileAlterationListener) $r6;

        interfaceinvoke r19.<org.apache.commons.io.monitor.FileAlterationListener: void onStop(org.apache.commons.io.monitor.FileAlterationObserver)>(r0);

     label6:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label5;

        return;
    }

    private void checkAndNotify(org.apache.commons.io.monitor.FileEntry, org.apache.commons.io.monitor.FileEntry[], java.io.File[])
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1, r5, $r20, $r21, $r23, $r24;
        org.apache.commons.io.monitor.FileEntry[] r2, r4, $r7, $r13, $r26;
        java.io.File[] r3, $r8, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.util.Comparator $r9, $r16;
        java.io.File $r10, $r11, $r12, $r14, $r17, $r18, $r19, $r22;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        r2 := @parameter1: org.apache.commons.io.monitor.FileEntry[];

        r3 := @parameter2: java.io.File[];

        i8 = 0;

        $i1 = lengthof r3;

        if $i1 <= 0 goto label01;

        $i7 = lengthof r3;

        $r26 = newarray (org.apache.commons.io.monitor.FileEntry)[$i7];

        goto label02;

     label01:
        $r26 = <org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] EMPTY_ENTRIES>;

     label02:
        r4 = $r26;

        i0 = lengthof r2;

        i9 = 0;

        goto label09;

     label03:
        r5 = r2[i9];

        goto label05;

     label04:
        $r19 = r3[i8];

        $r20 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, $r19);

        r4[i8] = $r20;

        $r21 = r4[i8];

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>($r21);

        i8 = i8 + 1;

     label05:
        $i2 = lengthof r3;

        if i8 >= $i2 goto label06;

        $r16 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;

        $r17 = virtualinvoke r5.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        $r18 = r3[i8];

        $i5 = interfaceinvoke $r16.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $i5 > 0 goto label04;

     label06:
        $i3 = lengthof r3;

        if i8 >= $i3 goto label07;

        $r9 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;

        $r10 = virtualinvoke r5.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        $r11 = r3[i8];

        $i4 = interfaceinvoke $r9.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $i4 != 0 goto label07;

        $r12 = r3[i8];

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r5, $r12);

        $r13 = virtualinvoke r5.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();

        $r14 = r3[i8];

        $r15 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>($r14);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(r5, $r13, $r15);

        r4[i8] = r5;

        i8 = i8 + 1;

        goto label08;

     label07:
        $r7 = virtualinvoke r5.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();

        $r8 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(r5, $r7, $r8);

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void doDelete(org.apache.commons.io.monitor.FileEntry)>(r5);

     label08:
        i9 = i9 + 1;

     label09:
        if i9 < i0 goto label03;

        goto label11;

     label10:
        $r22 = r3[i8];

        $r23 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, $r22);

        r4[i8] = $r23;

        $r24 = r4[i8];

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>($r24);

        i8 = i8 + 1;

     label11:
        $i6 = lengthof r3;

        if i8 < $i6 goto label10;

        virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(r4);

        return;
    }

    private org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1, r3;
        java.io.File r2;
        org.apache.commons.io.monitor.FileEntry[] r4;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        r2 := @parameter1: java.io.File;

        r3 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r2);

        virtualinvoke r3.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>(r2);

        r4 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry)>(r2, r3);

        virtualinvoke r3.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(r4);

        return r3;
    }

    private org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File, org.apache.commons.io.monitor.FileEntry)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.File r1, $r5;
        org.apache.commons.io.monitor.FileEntry r2, $r6;
        java.io.File[] r3;
        org.apache.commons.io.monitor.FileEntry[] r4, $r7;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.commons.io.monitor.FileEntry;

        r3 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>(r1);

        $i0 = lengthof r3;

        if $i0 <= 0 goto label1;

        $i2 = lengthof r3;

        $r7 = newarray (org.apache.commons.io.monitor.FileEntry)[$i2];

        goto label2;

     label1:
        $r7 = <org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] EMPTY_ENTRIES>;

     label2:
        r4 = $r7;

        i3 = 0;

        goto label4;

     label3:
        $r5 = r3[i3];

        $r6 = specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r2, $r5);

        r4[i3] = $r6;

        i3 = i3 + 1;

     label4:
        $i1 = lengthof r3;

        if i3 < $i1 goto label3;

        return r4;
    }

    private void doCreate(org.apache.commons.io.monitor.FileEntry)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1, r10;
        int i0, i1;
        java.util.List $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;
        java.io.File $r5, $r6;
        java.util.Iterator r7;
        org.apache.commons.io.monitor.FileAlterationListener r8;
        org.apache.commons.io.monitor.FileEntry[] r9;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        $r3 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.io.monitor.FileAlterationListener) $r4;

        $z0 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        interfaceinvoke r8.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryCreate(java.io.File)>($r6);

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        interfaceinvoke r8.<org.apache.commons.io.monitor.FileAlterationListener: void onFileCreate(java.io.File)>($r5);

     label3:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        r9 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();

        i0 = lengthof r9;

        i1 = 0;

        goto label5;

     label4:
        r10 = r9[i1];

        specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>(r10);

        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label4;

        return;
    }

    private void doMatch(org.apache.commons.io.monitor.FileEntry, java.io.File)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1;
        java.io.File r2;
        org.apache.commons.io.monitor.FileAlterationListener r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        r2 := @parameter1: java.io.File;

        $z0 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>(r2);

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        r4 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.io.monitor.FileAlterationListener) $r6;

        $z1 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r3.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryChange(java.io.File)>(r2);

        goto label3;

     label2:
        interfaceinvoke r3.<org.apache.commons.io.monitor.FileAlterationListener: void onFileChange(java.io.File)>(r2);

     label3:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

     label4:
        return;
    }

    private void doDelete(org.apache.commons.io.monitor.FileEntry)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        org.apache.commons.io.monitor.FileEntry r1;
        org.apache.commons.io.monitor.FileAlterationListener r2;
        java.util.Iterator r3;
        java.util.List $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        java.io.File $r6, $r7;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: org.apache.commons.io.monitor.FileEntry;

        $r4 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        r3 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.io.monitor.FileAlterationListener) $r5;

        $z0 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        interfaceinvoke r2.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryDelete(java.io.File)>($r7);

        goto label3;

     label2:
        $r6 = virtualinvoke r1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();

        interfaceinvoke r2.<org.apache.commons.io.monitor.FileAlterationListener: void onFileDelete(java.io.File)>($r6);

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    private java.io.File[] listFiles(java.io.File)
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.io.File r1;
        boolean $z0;
        java.util.Comparator $r2, $r3;
        int $i0;
        java.io.FileFilter $r4, $r5;
        java.io.File[] r6, $r7;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        r1 := @parameter0: java.io.File;

        r6 = null;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;

        if $r4 != null goto label1;

        $r7 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        goto label2;

     label1:
        $r5 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;

        $r7 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r5);

     label2:
        r6 = $r7;

     label3:
        if r6 != null goto label4;

        r6 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;

     label4:
        $r2 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;

        if $r2 == null goto label5;

        $i0 = lengthof r6;

        if $i0 <= 1 goto label5;

        $r3 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r6, $r3);

     label5:
        return r6;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.monitor.FileAlterationObserver r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r8, $r16, $r19;
        java.io.File $r7;
        java.io.FileFilter $r11, $r18;
        java.util.List $r13;
        int $i0;

        r0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[file=\'");

        $r7 = virtualinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File getDirectory()>();

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r11 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;

        if $r11 == null goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", listeners=");

        $r13 = r0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public static void <clinit>()
    {
        <org.apache.commons.io.monitor.FileAlterationObserver: long serialVersionUID> = 1185122225658782848L;

        return;
    }
}
