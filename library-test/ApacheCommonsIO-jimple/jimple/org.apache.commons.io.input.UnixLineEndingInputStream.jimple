public class org.apache.commons.io.input.UnixLineEndingInputStream extends java.io.InputStream
{
    private boolean slashNSeen;
    private boolean slashRSeen;
    private boolean eofSeen;
    private final java.io.InputStream target;
    private final boolean ensureLineFeedAtEndOfFile;

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen> = 0;

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen> = 0;

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen> = 0;

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target> = r1;

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean ensureLineFeedAtEndOfFile> = z0;

        return;
    }

    private int readWithUpdate() throws java.io.IOException
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        int i0;
        java.io.InputStream $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        $r1 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen> = $z1;

        $z0 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;

        if $z0 == 0 goto label3;

        return i0;

     label3:
        if i0 != 10 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen> = $z2;

        if i0 != 13 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen> = $z3;

        return i0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        z0 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen>;

        $z1 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;

        if $z1 == 0 goto label1;

        $i3 = specialinvoke r0.<org.apache.commons.io.input.UnixLineEndingInputStream: int eofGame(boolean)>(z0);

        return $i3;

     label1:
        i0 = specialinvoke r0.<org.apache.commons.io.input.UnixLineEndingInputStream: int readWithUpdate()>();

        $z2 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean eofSeen>;

        if $z2 == 0 goto label2;

        $i2 = specialinvoke r0.<org.apache.commons.io.input.UnixLineEndingInputStream: int eofGame(boolean)>(z0);

        return $i2;

     label2:
        $z3 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashRSeen>;

        if $z3 == 0 goto label3;

        return 10;

     label3:
        if z0 == 0 goto label4;

        $z4 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen>;

        if $z4 == 0 goto label4;

        $i1 = virtualinvoke r0.<org.apache.commons.io.input.UnixLineEndingInputStream: int read()>();

        return $i1;

     label4:
        return i0;
    }

    private int eofGame(boolean)
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean ensureLineFeedAtEndOfFile>;

        if $z1 != 0 goto label2;

     label1:
        return -1;

     label2:
        $z2 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen>;

        if $z2 != 0 goto label3;

        r0.<org.apache.commons.io.input.UnixLineEndingInputStream: boolean slashNSeen> = 1;

        return 10;

     label3:
        return -1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        specialinvoke r0.<java.io.InputStream: void close()>();

        $r1 = r0.<org.apache.commons.io.input.UnixLineEndingInputStream: java.io.InputStream target>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public synchronized void mark(int)
    {
        org.apache.commons.io.input.UnixLineEndingInputStream r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.io.input.UnixLineEndingInputStream;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Mark notsupported");

        throw $r1;
    }
}
