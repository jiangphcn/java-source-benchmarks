public class org.apache.commons.io.comparator.CompositeFileComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.util.Comparator[] NO_COMPARATORS;
    private final java.util.Comparator[] delegates;

    static void <clinit>()
    {
        java.util.Comparator[] $r0;

        <org.apache.commons.io.comparator.CompositeFileComparator: long serialVersionUID> = -2224170307287243428L;

        $r0 = newarray (java.util.Comparator)[0];

        <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS> = $r0;

        return;
    }

    public transient void <init>(java.util.Comparator[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.Comparator[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.util.Comparator[];

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r4 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r4;

        goto label2;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (java.util.Comparator)[$i0];

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r2;

        $r3 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

     label2:
        return;
    }

    public void <init>(java.lang.Iterable)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.Iterable r1;
        java.util.Comparator r3;
        java.util.Iterator r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0;
        java.util.Comparator[] $r7, $r9, $r10;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r10 = <org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] NO_COMPARATORS>;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r10;

        goto label4;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r4 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Comparator) $r6;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = newarray (java.util.Comparator)[$i0];

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.util.Comparator[]) $r8;

        r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates> = $r9;

     label4:
        return;
    }

    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File r1, r2;
        java.util.Comparator r3;
        int i0, i1, i2;
        java.util.Comparator[] $r5;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        i1 = 0;

        $r5 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        i0 = lengthof $r5;

        i2 = 0;

        goto label3;

     label1:
        r3 = $r5[i2];

        i1 = interfaceinvoke r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if i1 == 0 goto label2;

        goto label4;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

     label4:
        return i1;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r11;
        java.util.Comparator[] $r6, $r12;
        java.util.Comparator $r7;
        int i0, $i1;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i0 = 0;

        goto label3;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r6 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $r7 = $r6[i0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        i0 = i0 + 1;

     label3:
        $r12 = r0.<org.apache.commons.io.comparator.CompositeFileComparator: java.util.Comparator[] delegates>;

        $i1 = lengthof $r12;

        if i0 < $i1 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.lang.Object r1, r2;
        java.io.File $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) r1;

        $r3 = (java.io.File) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.CompositeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3);

        return $i0;
    }

    public volatile java.util.List sort(java.util.List)
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.util.List r1, $r2;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.util.List;

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.util.List sort(java.util.List)>(r1);

        return $r2;
    }

    public transient volatile java.io.File[] sort(java.io.File[])
    {
        org.apache.commons.io.comparator.CompositeFileComparator r0;
        java.io.File[] r1, $r2;

        r0 := @this: org.apache.commons.io.comparator.CompositeFileComparator;

        r1 := @parameter0: java.io.File[];

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.io.File[] sort(java.io.File[])>(r1);

        return $r2;
    }
}
