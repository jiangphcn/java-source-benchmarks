public class org.apache.commons.io.FilenameUtilsTestCase extends org.apache.commons.io.testtools.FileBasedTestCase
{
    private static final java.lang.String SEP;
    private static final boolean WINDOWS;
    private final java.io.File testFile1;
    private final java.io.File testFile2;
    private final int testFile1Size;
    private final int testFile2Size;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1;
        char $c0, $c1;
        java.lang.String $r2;
        boolean $z0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $c0 = <java.io.File: char separatorChar>;

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP> = $r2;

        $c1 = <java.io.File: char separatorChar>;

        if $c1 != 92 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <org.apache.commons.io.FilenameUtilsTestCase: boolean WINDOWS> = $z0;

        return;
    }

    public void <init>()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.io.File $r1, $r2, $r3, $r4, $r5, $r6;
        long $l0, $l2;
        int $i1, $i3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        specialinvoke r0.<org.apache.commons.io.testtools.FileBasedTestCase: void <init>()>();

        $r1 = new java.io.File;

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "file1-test.txt");

        r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1> = $r1;

        $r3 = new java.io.File;

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "file1a-test.txt");

        r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2> = $r3;

        $r5 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        $l0 = virtualinvoke $r5.<java.io.File: long length()>();

        $i1 = (int) $l0;

        r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile1Size> = $i1;

        $r6 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        $l2 = virtualinvoke $r6.<java.io.File: long length()>();

        $i3 = (int) $l2;

        r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile2Size> = $i3;

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.io.File $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21, $r22, $r25, $r28, $r34, $r40, $r46;
        boolean $z0, $z1, $z2, $z3;
        java.io.BufferedOutputStream $r6, $r11, $r18, $r23;
        java.io.FileOutputStream $r7, $r12, $r19, $r24;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;
        java.io.IOException $r26, $r32, $r38, $r44;
        java.lang.StringBuilder $r27, $r29, $r30, $r33, $r35, $r36, $r39, $r41, $r42, $r45, $r47, $r48;
        java.lang.String $r31, $r37, $r43, $r49;
        java.lang.Throwable $r50, $r51, $r52, $r53;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        $r4 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        $r5 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $r44 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r46 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>($r49);

        throw $r44;

     label01:
        $r6 = new java.io.BufferedOutputStream;

        $r7 = new java.io.FileOutputStream;

        $r8 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r8);

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);

     label02:
        $i0 = r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile1Size>;

        $l1 = (long) $i0;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r6, $l1);

        goto label04;

     label03:
        $r52 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r6);

        throw $r52;

     label04:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r6);

        $r9 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        $r10 = virtualinvoke $r9.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        $r38 = new java.io.IOException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r40 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>($r43);

        throw $r38;

     label05:
        $r11 = new java.io.BufferedOutputStream;

        $r12 = new java.io.FileOutputStream;

        $r13 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>($r13);

        specialinvoke $r11.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r12);

     label06:
        $i2 = r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile2Size>;

        $l3 = (long) $i2;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r11, $l3);

        goto label08;

     label07:
        $r53 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r11);

        throw $r53;

     label08:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r11);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r14);

        staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        $r16 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        $r17 = virtualinvoke $r16.<java.io.File: java.io.File getParentFile()>();

        $z2 = virtualinvoke $r17.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label09;

        $r32 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r34 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label09:
        $r18 = new java.io.BufferedOutputStream;

        $r19 = new java.io.FileOutputStream;

        $r20 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile1>;

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>($r20);

        specialinvoke $r18.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r19);

     label10:
        $i4 = r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile1Size>;

        $l5 = (long) $i4;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r18, $l5);

        goto label12;

     label11:
        $r51 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r18);

        throw $r51;

     label12:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r18);

        $r21 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        $r22 = virtualinvoke $r21.<java.io.File: java.io.File getParentFile()>();

        $z3 = virtualinvoke $r22.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label13;

        $r26 = new java.io.IOException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r28 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label13:
        $r23 = new java.io.BufferedOutputStream;

        $r24 = new java.io.FileOutputStream;

        $r25 = r0.<org.apache.commons.io.FilenameUtilsTestCase: java.io.File testFile2>;

        specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.io.File)>($r25);

        specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r24);

     label14:
        $i6 = r0.<org.apache.commons.io.FilenameUtilsTestCase: int testFile2Size>;

        $l7 = (long) $i6;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r23, $l7);

        goto label16;

     label15:
        $r50 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r23);

        throw $r50;

     label16:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r23);

        return;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

    public void tearDown() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.io.File $r1;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtilsTestCase: java.io.File getTestDirectory()>();

        staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r1);

        return;
    }

    public void testNormalize() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12, $r15, $r16, $r18, $r21, $r24, $r27, $r28, $r30, $r33, $r36, $r39, $r40, $r42, $r44, $r47, $r50, $r53, $r56, $r57, $r59, $r62, $r65, $r68, $r69, $r71, $r74, $r77, $r80, $r81, $r83, $r86, $r87, $r88, $r90, $r92, $r93, $r94, $r96, $r98, $r99, $r101, $r103, $r104, $r105, $r106, $r107, $r109, $r112, $r113, $r115, $r118, $r120, $r121, $r123, $r126, $r129, $r130, $r132, $r135, $r137, $r138, $r140, $r143, $r145, $r146, $r148, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r159, $r160, $r162, $r163, $r165, $r166, $r168, $r170, $r171, $r173, $r174, $r176, $r179, $r180, $r182, $r183, $r185, $r186, $r187, $r189, $r190, $r192, $r194, $r195, $r197, $r198, $r199, $r200, $r201, $r203, $r204, $r206, $r209, $r210, $r212, $r213, $r215, $r218, $r221, $r222, $r224, $r225, $r227, $r230, $r232, $r233, $r235, $r236, $r238, $r239, $r241, $r242, $r243, $r244, $r246, $r247, $r248, $r249, $r250, $r251, $r253, $r254, $r255, $r256, $r258, $r261, $r262, $r264, $r267, $r269, $r270, $r272, $r275, $r278, $r279, $r281, $r284, $r285, $r286, $r288, $r291, $r293, $r294, $r296, $r298, $r299, $r300, $r302, $r305, $r308, $r309, $r311, $r314, $r317, $r320, $r321, $r323, $r326, $r329, $r331, $r332, $r334, $r337, $r338, $r340, $r342, $r343, $r345, $r347, $r348, $r349, $r350, $r352, $r354, $r355, $r357, $r359, $r360, $r362, $r365, $r366, $r368, $r371, $r373, $r374, $r376, $r379, $r382, $r383, $r385, $r388, $r389, $r390, $r392, $r395, $r397, $r398, $r400, $r402, $r403, $r404, $r406, $r409, $r412, $r413, $r415, $r418, $r421, $r424, $r425, $r427, $r430, $r433, $r435, $r436, $r438, $r441, $r442, $r444, $r446, $r447, $r449, $r451, $r452, $r453, $r454, $r456, $r458, $r459, $r461, $r463, $r464, $r466, $r469, $r470, $r472, $r475, $r477, $r478, $r480, $r483, $r486, $r487, $r489, $r492, $r493, $r494, $r496, $r499, $r501, $r502, $r504, $r506, $r507, $r508, $r510, $r513, $r516, $r517, $r519, $r522, $r525, $r528, $r529, $r531, $r534, $r537, $r539, $r540, $r542, $r545, $r546, $r548, $r550, $r551, $r553, $r555, $r556, $r557, $r558, $r560, $r562, $r563, $r564, $r566, $r568, $r569, $r571, $r574, $r575, $r576, $r577, $r579, $r581, $r582, $r583, $r584, $r586, $r589, $r590, $r592, $r595, $r598, $r599, $r601, $r604, $r606, $r607, $r608, $r609, $r610, $r611, $r612, $r613, $r615, $r616, $r617, $r620, $r623, $r624, $r626, $r627, $r628, $r631, $r634, $r636, $r637, $r639, $r640, $r641, $r644, $r647, $r650, $r651, $r653, $r654, $r655, $r658, $r661, $r662, $r663, $r665, $r666, $r667, $r670, $r673, $r675, $r676, $r678, $r679, $r680, $r683, $r685, $r686, $r687, $r689, $r690, $r691, $r694, $r697, $r700, $r701, $r703, $r704, $r705, $r708, $r711, $r714, $r717, $r718, $r720, $r721, $r722, $r725, $r728, $r731, $r733, $r734, $r736, $r737, $r738, $r741, $r744, $r745, $r747, $r748, $r749, $r752, $r754, $r755, $r757, $r758, $r759, $r762, $r764, $r765, $r766, $r767, $r769, $r770, $r771, $r774, $r776, $r777;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r41, $r43, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r58, $r60, $r61, $r63, $r64, $r66, $r67, $r70, $r72, $r73, $r75, $r76, $r78, $r79, $r82, $r84, $r85, $r89, $r91, $r95, $r97, $r100, $r102, $r108, $r110, $r111, $r114, $r116, $r117, $r119, $r122, $r124, $r125, $r127, $r128, $r131, $r133, $r134, $r136, $r139, $r141, $r142, $r144, $r147, $r149, $r158, $r161, $r164, $r167, $r169, $r172, $r175, $r177, $r178, $r181, $r184, $r188, $r191, $r193, $r196, $r202, $r205, $r207, $r208, $r211, $r214, $r216, $r217, $r219, $r220, $r223, $r226, $r228, $r229, $r231, $r234, $r237, $r240, $r245, $r252, $r257, $r259, $r260, $r263, $r265, $r266, $r268, $r271, $r273, $r274, $r276, $r277, $r280, $r282, $r283, $r287, $r289, $r290, $r292, $r295, $r297, $r301, $r303, $r304, $r306, $r307, $r310, $r312, $r313, $r315, $r316, $r318, $r319, $r322, $r324, $r325, $r327, $r328, $r330, $r333, $r335, $r336, $r339, $r341, $r344, $r346, $r351, $r353, $r356, $r358, $r361, $r363, $r364, $r367, $r369, $r370, $r372, $r375, $r377, $r378, $r380, $r381, $r384, $r386, $r387, $r391, $r393, $r394, $r396, $r399, $r401, $r405, $r407, $r408, $r410, $r411, $r414, $r416, $r417, $r419, $r420, $r422, $r423, $r426, $r428, $r429, $r431, $r432, $r434, $r437, $r439, $r440, $r443, $r445, $r448, $r450, $r455, $r457, $r460, $r462, $r465, $r467, $r468, $r471, $r473, $r474, $r476, $r479, $r481, $r482, $r484, $r485, $r488, $r490, $r491, $r495, $r497, $r498, $r500, $r503, $r505, $r509, $r511, $r512, $r514, $r515, $r518, $r520, $r521, $r523, $r524, $r526, $r527, $r530, $r532, $r533, $r535, $r536, $r538, $r541, $r543, $r544, $r547, $r549, $r552, $r554, $r559, $r561, $r565, $r567, $r570, $r572, $r573, $r578, $r580, $r585, $r587, $r588, $r591, $r593, $r594, $r596, $r597, $r600, $r602, $r603, $r605, $r614, $r618, $r619, $r621, $r622, $r625, $r629, $r630, $r632, $r633, $r635, $r638, $r642, $r643, $r645, $r646, $r648, $r649, $r652, $r656, $r657, $r659, $r660, $r664, $r668, $r669, $r671, $r672, $r674, $r677, $r681, $r682, $r684, $r688, $r692, $r693, $r695, $r696, $r698, $r699, $r702, $r706, $r707, $r709, $r710, $r712, $r713, $r715, $r716, $r719, $r723, $r724, $r726, $r727, $r729, $r730, $r732, $r735, $r739, $r740, $r742, $r743, $r746, $r750, $r751, $r753, $r756, $r760, $r761, $r763, $r768, $r772, $r773, $r775;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("1:\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("\\\\\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("\\\\a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r9 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r12 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r21 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r24 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r30 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r33 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r36 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r39, $r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r47 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r50 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r53 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r57 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("\\\\server\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r56, $r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r59 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r62 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r65 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r68, $r69);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r71 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r74 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r77 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        $r81 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, $r81);

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r83 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        $r87 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r86, $r87);

        $r88 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r88);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>(java.lang.String)>("c");

        $r90 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        $r93 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../../c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r92, $r93);

        $r94 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r94);

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r96 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        $r99 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r98, $r99);

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r101 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        $r104 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r103, $r104);

        $r105 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r105);

        $r106 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../../");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r106);

        $r107 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r107);

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r109 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        $r113 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r112, $r113);

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r115 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r118 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        $r121 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/../c/../d/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r120, $r121);

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r123 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r126 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        $r130 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r129, $r130);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r132 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r135 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r136 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        $r138 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r137, $r138);

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r140 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r143 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        $r146 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a/b/./././");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r145, $r146);

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r148 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        $r151 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("./a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r150, $r151);

        $r152 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r152);

        $r153 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r153);

        $r154 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(".");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r154);

        $r155 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r155);

        $r156 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r156);

        $r157 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r157);

        $r158 = new java.lang.StringBuilder;

        $r159 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r160 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r159);

        specialinvoke $r158.<java.lang.StringBuilder: void <init>(java.lang.String)>($r160);

        $r161 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        $r163 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r162, $r163);

        $r164 = new java.lang.StringBuilder;

        $r165 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r166 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r165);

        specialinvoke $r164.<java.lang.StringBuilder: void <init>(java.lang.String)>($r166);

        $r167 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r168 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r169 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r168);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        $r171 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r170, $r171);

        $r172 = new java.lang.StringBuilder;

        $r173 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r174 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r173);

        specialinvoke $r172.<java.lang.StringBuilder: void <init>(java.lang.String)>($r174);

        $r175 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r176 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r177 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r176);

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.String toString()>();

        $r180 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r179, $r180);

        $r181 = new java.lang.StringBuilder;

        $r182 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r183 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r182);

        specialinvoke $r181.<java.lang.StringBuilder: void <init>(java.lang.String)>($r183);

        $r184 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        $r186 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r185, $r186);

        $r187 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r187);

        $r188 = new java.lang.StringBuilder;

        $r189 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r190 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r189);

        specialinvoke $r188.<java.lang.StringBuilder: void <init>(java.lang.String)>($r190);

        $r191 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r192 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r193 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.String toString()>();

        $r195 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r194, $r195);

        $r196 = new java.lang.StringBuilder;

        $r197 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r198 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r197);

        specialinvoke $r196.<java.lang.StringBuilder: void <init>(java.lang.String)>($r198);

        $r199 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.String toString()>();

        $r200 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r199, $r200);

        $r201 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r201);

        $r202 = new java.lang.StringBuilder;

        $r203 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r204 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r203);

        specialinvoke $r202.<java.lang.StringBuilder: void <init>(java.lang.String)>($r204);

        $r205 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r206 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r207 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r206);

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.String toString()>();

        $r210 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r209, $r210);

        $r211 = new java.lang.StringBuilder;

        $r212 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r213 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r212);

        specialinvoke $r211.<java.lang.StringBuilder: void <init>(java.lang.String)>($r213);

        $r214 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r215 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r216 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r215);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r218 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r219 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r218);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.String toString()>();

        $r222 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r221, $r222);

        $r223 = new java.lang.StringBuilder;

        $r224 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r225 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r224);

        specialinvoke $r223.<java.lang.StringBuilder: void <init>(java.lang.String)>($r225);

        $r226 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r227 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r228 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r227);

        $r229 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r230 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r231 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r230);

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.String toString()>();

        $r233 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r232, $r233);

        $r234 = new java.lang.StringBuilder;

        $r235 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r236 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r235);

        specialinvoke $r234.<java.lang.StringBuilder: void <init>(java.lang.String)>($r236);

        $r237 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.String toString()>();

        $r239 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r238, $r239);

        $r240 = new java.lang.StringBuilder;

        $r241 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r242 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r241);

        specialinvoke $r240.<java.lang.StringBuilder: void <init>(java.lang.String)>($r242);

        $r243 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.String toString()>();

        $r244 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r243, $r244);

        $r245 = new java.lang.StringBuilder;

        $r246 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r247 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r246);

        specialinvoke $r245.<java.lang.StringBuilder: void <init>(java.lang.String)>($r247);

        $r248 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.String toString()>();

        $r249 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r248, $r249);

        $r250 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r250);

        $r251 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r251);

        $r252 = new java.lang.StringBuilder;

        $r253 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r254 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r253);

        specialinvoke $r252.<java.lang.StringBuilder: void <init>(java.lang.String)>($r254);

        $r255 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.String toString()>();

        $r256 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r255, $r256);

        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r258 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r259 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r258);

        $r260 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.String toString()>();

        $r262 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r261, $r262);

        $r263 = new java.lang.StringBuilder;

        specialinvoke $r263.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r264 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r265 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r264);

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r267 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r268 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r267);

        $r269 = virtualinvoke $r268.<java.lang.StringBuilder: java.lang.String toString()>();

        $r270 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r269, $r270);

        $r271 = new java.lang.StringBuilder;

        specialinvoke $r271.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r272 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r273 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r272);

        $r274 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r275 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r276 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r275);

        $r277 = virtualinvoke $r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r278 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.String toString()>();

        $r279 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r278, $r279);

        $r280 = new java.lang.StringBuilder;

        specialinvoke $r280.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r281 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r282 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r281);

        $r283 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.String toString()>();

        $r285 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r284, $r285);

        $r286 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r286);

        $r287 = new java.lang.StringBuilder;

        specialinvoke $r287.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r288 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r289 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r288);

        $r290 = virtualinvoke $r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r291 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r292 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r291);

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.String toString()>();

        $r294 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r293, $r294);

        $r295 = new java.lang.StringBuilder;

        specialinvoke $r295.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r296 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r297 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r296);

        $r298 = virtualinvoke $r297.<java.lang.StringBuilder: java.lang.String toString()>();

        $r299 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r298, $r299);

        $r300 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r300);

        $r301 = new java.lang.StringBuilder;

        specialinvoke $r301.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r302 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r303 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r302);

        $r304 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r305 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r306 = virtualinvoke $r304.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r305);

        $r307 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r308 = virtualinvoke $r307.<java.lang.StringBuilder: java.lang.String toString()>();

        $r309 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r308, $r309);

        $r310 = new java.lang.StringBuilder;

        specialinvoke $r310.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r311 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r312 = virtualinvoke $r310.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r311);

        $r313 = virtualinvoke $r312.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r314 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r315 = virtualinvoke $r313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r314);

        $r316 = virtualinvoke $r315.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r317 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r318 = virtualinvoke $r316.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r317);

        $r319 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r320 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.String toString()>();

        $r321 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r320, $r321);

        $r322 = new java.lang.StringBuilder;

        specialinvoke $r322.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r323 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r324 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r323);

        $r325 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r326 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r327 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r326);

        $r328 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r329 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r330 = virtualinvoke $r328.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r329);

        $r331 = virtualinvoke $r330.<java.lang.StringBuilder: java.lang.String toString()>();

        $r332 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r331, $r332);

        $r333 = new java.lang.StringBuilder;

        specialinvoke $r333.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r334 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r335 = virtualinvoke $r333.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r334);

        $r336 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r337 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.String toString()>();

        $r338 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r337, $r338);

        $r339 = new java.lang.StringBuilder;

        specialinvoke $r339.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r340 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r341 = virtualinvoke $r339.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r340);

        $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.String toString()>();

        $r343 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r342, $r343);

        $r344 = new java.lang.StringBuilder;

        specialinvoke $r344.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r345 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r346 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r345);

        $r347 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.String toString()>();

        $r348 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r347, $r348);

        $r349 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r349);

        $r350 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r350);

        $r351 = new java.lang.StringBuilder;

        specialinvoke $r351.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r352 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r353 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r352);

        $r354 = virtualinvoke $r353.<java.lang.StringBuilder: java.lang.String toString()>();

        $r355 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r354, $r355);

        $r356 = new java.lang.StringBuilder;

        specialinvoke $r356.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r357 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r358 = virtualinvoke $r356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r357);

        $r359 = virtualinvoke $r358.<java.lang.StringBuilder: java.lang.String toString()>();

        $r360 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r359, $r360);

        $r361 = new java.lang.StringBuilder;

        specialinvoke $r361.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r362 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r363 = virtualinvoke $r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r362);

        $r364 = virtualinvoke $r363.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r365 = virtualinvoke $r364.<java.lang.StringBuilder: java.lang.String toString()>();

        $r366 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r365, $r366);

        $r367 = new java.lang.StringBuilder;

        specialinvoke $r367.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r368 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r369 = virtualinvoke $r367.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r368);

        $r370 = virtualinvoke $r369.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r371 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r372 = virtualinvoke $r370.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r371);

        $r373 = virtualinvoke $r372.<java.lang.StringBuilder: java.lang.String toString()>();

        $r374 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r373, $r374);

        $r375 = new java.lang.StringBuilder;

        specialinvoke $r375.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r376 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r377 = virtualinvoke $r375.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r376);

        $r378 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r379 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r380 = virtualinvoke $r378.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r379);

        $r381 = virtualinvoke $r380.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r382 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.String toString()>();

        $r383 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r382, $r383);

        $r384 = new java.lang.StringBuilder;

        specialinvoke $r384.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r385 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r386 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r385);

        $r387 = virtualinvoke $r386.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r388 = virtualinvoke $r387.<java.lang.StringBuilder: java.lang.String toString()>();

        $r389 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r388, $r389);

        $r390 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r390);

        $r391 = new java.lang.StringBuilder;

        specialinvoke $r391.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r392 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r393 = virtualinvoke $r391.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r392);

        $r394 = virtualinvoke $r393.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r395 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r396 = virtualinvoke $r394.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r395);

        $r397 = virtualinvoke $r396.<java.lang.StringBuilder: java.lang.String toString()>();

        $r398 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r397, $r398);

        $r399 = new java.lang.StringBuilder;

        specialinvoke $r399.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r400 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r401 = virtualinvoke $r399.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r400);

        $r402 = virtualinvoke $r401.<java.lang.StringBuilder: java.lang.String toString()>();

        $r403 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r402, $r403);

        $r404 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r404);

        $r405 = new java.lang.StringBuilder;

        specialinvoke $r405.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r406 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r407 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r406);

        $r408 = virtualinvoke $r407.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r409 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r410 = virtualinvoke $r408.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r409);

        $r411 = virtualinvoke $r410.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r412 = virtualinvoke $r411.<java.lang.StringBuilder: java.lang.String toString()>();

        $r413 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r412, $r413);

        $r414 = new java.lang.StringBuilder;

        specialinvoke $r414.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r415 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r416 = virtualinvoke $r414.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r415);

        $r417 = virtualinvoke $r416.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r418 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r419 = virtualinvoke $r417.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r418);

        $r420 = virtualinvoke $r419.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r421 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r422 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r421);

        $r423 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r424 = virtualinvoke $r423.<java.lang.StringBuilder: java.lang.String toString()>();

        $r425 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r424, $r425);

        $r426 = new java.lang.StringBuilder;

        specialinvoke $r426.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r427 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r428 = virtualinvoke $r426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r427);

        $r429 = virtualinvoke $r428.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r430 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r431 = virtualinvoke $r429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r430);

        $r432 = virtualinvoke $r431.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r433 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r434 = virtualinvoke $r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r433);

        $r435 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.String toString()>();

        $r436 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r435, $r436);

        $r437 = new java.lang.StringBuilder;

        specialinvoke $r437.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r438 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r439 = virtualinvoke $r437.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r438);

        $r440 = virtualinvoke $r439.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r441 = virtualinvoke $r440.<java.lang.StringBuilder: java.lang.String toString()>();

        $r442 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r441, $r442);

        $r443 = new java.lang.StringBuilder;

        specialinvoke $r443.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r444 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r445 = virtualinvoke $r443.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r444);

        $r446 = virtualinvoke $r445.<java.lang.StringBuilder: java.lang.String toString()>();

        $r447 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r446, $r447);

        $r448 = new java.lang.StringBuilder;

        specialinvoke $r448.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r449 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r450 = virtualinvoke $r448.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r449);

        $r451 = virtualinvoke $r450.<java.lang.StringBuilder: java.lang.String toString()>();

        $r452 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r451, $r452);

        $r453 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r453);

        $r454 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r454);

        $r455 = new java.lang.StringBuilder;

        specialinvoke $r455.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r456 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r457 = virtualinvoke $r455.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r456);

        $r458 = virtualinvoke $r457.<java.lang.StringBuilder: java.lang.String toString()>();

        $r459 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r458, $r459);

        $r460 = new java.lang.StringBuilder;

        specialinvoke $r460.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r461 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r462 = virtualinvoke $r460.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r461);

        $r463 = virtualinvoke $r462.<java.lang.StringBuilder: java.lang.String toString()>();

        $r464 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r463, $r464);

        $r465 = new java.lang.StringBuilder;

        specialinvoke $r465.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r466 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r467 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r466);

        $r468 = virtualinvoke $r467.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r469 = virtualinvoke $r468.<java.lang.StringBuilder: java.lang.String toString()>();

        $r470 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r469, $r470);

        $r471 = new java.lang.StringBuilder;

        specialinvoke $r471.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r472 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r473 = virtualinvoke $r471.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r472);

        $r474 = virtualinvoke $r473.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r475 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r476 = virtualinvoke $r474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r475);

        $r477 = virtualinvoke $r476.<java.lang.StringBuilder: java.lang.String toString()>();

        $r478 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r477, $r478);

        $r479 = new java.lang.StringBuilder;

        specialinvoke $r479.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r480 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r481 = virtualinvoke $r479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r480);

        $r482 = virtualinvoke $r481.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r483 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r484 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r483);

        $r485 = virtualinvoke $r484.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r486 = virtualinvoke $r485.<java.lang.StringBuilder: java.lang.String toString()>();

        $r487 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r486, $r487);

        $r488 = new java.lang.StringBuilder;

        specialinvoke $r488.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r489 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r490 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r489);

        $r491 = virtualinvoke $r490.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r492 = virtualinvoke $r491.<java.lang.StringBuilder: java.lang.String toString()>();

        $r493 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r492, $r493);

        $r494 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r494);

        $r495 = new java.lang.StringBuilder;

        specialinvoke $r495.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r496 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r497 = virtualinvoke $r495.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r496);

        $r498 = virtualinvoke $r497.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r499 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r500 = virtualinvoke $r498.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r499);

        $r501 = virtualinvoke $r500.<java.lang.StringBuilder: java.lang.String toString()>();

        $r502 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r501, $r502);

        $r503 = new java.lang.StringBuilder;

        specialinvoke $r503.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r504 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r505 = virtualinvoke $r503.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r504);

        $r506 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.String toString()>();

        $r507 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r506, $r507);

        $r508 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r508);

        $r509 = new java.lang.StringBuilder;

        specialinvoke $r509.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r510 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r511 = virtualinvoke $r509.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r510);

        $r512 = virtualinvoke $r511.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r513 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r514 = virtualinvoke $r512.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r513);

        $r515 = virtualinvoke $r514.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r516 = virtualinvoke $r515.<java.lang.StringBuilder: java.lang.String toString()>();

        $r517 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r516, $r517);

        $r518 = new java.lang.StringBuilder;

        specialinvoke $r518.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r519 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r520 = virtualinvoke $r518.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r519);

        $r521 = virtualinvoke $r520.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r522 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r523 = virtualinvoke $r521.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r522);

        $r524 = virtualinvoke $r523.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r525 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r526 = virtualinvoke $r524.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r525);

        $r527 = virtualinvoke $r526.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r528 = virtualinvoke $r527.<java.lang.StringBuilder: java.lang.String toString()>();

        $r529 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r528, $r529);

        $r530 = new java.lang.StringBuilder;

        specialinvoke $r530.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r531 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r532 = virtualinvoke $r530.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r531);

        $r533 = virtualinvoke $r532.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r534 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r535 = virtualinvoke $r533.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r534);

        $r536 = virtualinvoke $r535.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r537 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r538 = virtualinvoke $r536.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r537);

        $r539 = virtualinvoke $r538.<java.lang.StringBuilder: java.lang.String toString()>();

        $r540 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r539, $r540);

        $r541 = new java.lang.StringBuilder;

        specialinvoke $r541.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r542 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r543 = virtualinvoke $r541.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r542);

        $r544 = virtualinvoke $r543.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r545 = virtualinvoke $r544.<java.lang.StringBuilder: java.lang.String toString()>();

        $r546 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r545, $r546);

        $r547 = new java.lang.StringBuilder;

        specialinvoke $r547.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r548 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r549 = virtualinvoke $r547.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r548);

        $r550 = virtualinvoke $r549.<java.lang.StringBuilder: java.lang.String toString()>();

        $r551 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r550, $r551);

        $r552 = new java.lang.StringBuilder;

        specialinvoke $r552.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r553 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r554 = virtualinvoke $r552.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r553);

        $r555 = virtualinvoke $r554.<java.lang.StringBuilder: java.lang.String toString()>();

        $r556 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r555, $r556);

        $r557 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r557);

        $r558 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r558);

        $r559 = new java.lang.StringBuilder;

        specialinvoke $r559.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r560 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r561 = virtualinvoke $r559.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r560);

        $r562 = virtualinvoke $r561.<java.lang.StringBuilder: java.lang.String toString()>();

        $r563 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r562, $r563);

        $r564 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r564);

        $r565 = new java.lang.StringBuilder;

        specialinvoke $r565.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r566 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r567 = virtualinvoke $r565.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r566);

        $r568 = virtualinvoke $r567.<java.lang.StringBuilder: java.lang.String toString()>();

        $r569 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r568, $r569);

        $r570 = new java.lang.StringBuilder;

        specialinvoke $r570.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r571 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r572 = virtualinvoke $r570.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r571);

        $r573 = virtualinvoke $r572.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r574 = virtualinvoke $r573.<java.lang.StringBuilder: java.lang.String toString()>();

        $r575 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r574, $r575);

        $r576 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:c", $r576);

        $r577 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r577);

        $r578 = new java.lang.StringBuilder;

        specialinvoke $r578.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r579 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r580 = virtualinvoke $r578.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r579);

        $r581 = virtualinvoke $r580.<java.lang.StringBuilder: java.lang.String toString()>();

        $r582 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r581, $r582);

        $r583 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r583);

        $r584 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r584);

        $r585 = new java.lang.StringBuilder;

        specialinvoke $r585.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r586 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r587 = virtualinvoke $r585.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r586);

        $r588 = virtualinvoke $r587.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r589 = virtualinvoke $r588.<java.lang.StringBuilder: java.lang.String toString()>();

        $r590 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r589, $r590);

        $r591 = new java.lang.StringBuilder;

        specialinvoke $r591.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r592 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r593 = virtualinvoke $r591.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r592);

        $r594 = virtualinvoke $r593.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r595 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r596 = virtualinvoke $r594.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r595);

        $r597 = virtualinvoke $r596.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r598 = virtualinvoke $r597.<java.lang.StringBuilder: java.lang.String toString()>();

        $r599 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r598, $r599);

        $r600 = new java.lang.StringBuilder;

        specialinvoke $r600.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r601 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r602 = virtualinvoke $r600.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r601);

        $r603 = virtualinvoke $r602.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r604 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r605 = virtualinvoke $r603.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r604);

        $r606 = virtualinvoke $r605.<java.lang.StringBuilder: java.lang.String toString()>();

        $r607 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r606, $r607);

        $r608 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r608);

        $r609 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r609);

        $r610 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r610);

        $r611 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r611);

        $r612 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r612);

        $r613 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r613);

        $r614 = new java.lang.StringBuilder;

        $r615 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r616 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r615);

        specialinvoke $r614.<java.lang.StringBuilder: void <init>(java.lang.String)>($r616);

        $r617 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r618 = virtualinvoke $r614.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r617);

        $r619 = virtualinvoke $r618.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r620 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r621 = virtualinvoke $r619.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r620);

        $r622 = virtualinvoke $r621.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r623 = virtualinvoke $r622.<java.lang.StringBuilder: java.lang.String toString()>();

        $r624 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r623, $r624);

        $r625 = new java.lang.StringBuilder;

        $r626 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r627 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r626);

        specialinvoke $r625.<java.lang.StringBuilder: void <init>(java.lang.String)>($r627);

        $r628 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r629 = virtualinvoke $r625.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r628);

        $r630 = virtualinvoke $r629.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r631 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r632 = virtualinvoke $r630.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r631);

        $r633 = virtualinvoke $r632.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r634 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r635 = virtualinvoke $r633.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r634);

        $r636 = virtualinvoke $r635.<java.lang.StringBuilder: java.lang.String toString()>();

        $r637 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r636, $r637);

        $r638 = new java.lang.StringBuilder;

        $r639 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r640 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r639);

        specialinvoke $r638.<java.lang.StringBuilder: void <init>(java.lang.String)>($r640);

        $r641 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r642 = virtualinvoke $r638.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r641);

        $r643 = virtualinvoke $r642.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r644 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r645 = virtualinvoke $r643.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r644);

        $r646 = virtualinvoke $r645.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r647 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r648 = virtualinvoke $r646.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r647);

        $r649 = virtualinvoke $r648.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r650 = virtualinvoke $r649.<java.lang.StringBuilder: java.lang.String toString()>();

        $r651 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r650, $r651);

        $r652 = new java.lang.StringBuilder;

        $r653 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r654 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r653);

        specialinvoke $r652.<java.lang.StringBuilder: void <init>(java.lang.String)>($r654);

        $r655 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r656 = virtualinvoke $r652.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r655);

        $r657 = virtualinvoke $r656.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r658 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r659 = virtualinvoke $r657.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r658);

        $r660 = virtualinvoke $r659.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r661 = virtualinvoke $r660.<java.lang.StringBuilder: java.lang.String toString()>();

        $r662 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r661, $r662);

        $r663 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r663);

        $r664 = new java.lang.StringBuilder;

        $r665 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r666 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r665);

        specialinvoke $r664.<java.lang.StringBuilder: void <init>(java.lang.String)>($r666);

        $r667 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r668 = virtualinvoke $r664.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r667);

        $r669 = virtualinvoke $r668.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r670 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r671 = virtualinvoke $r669.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r670);

        $r672 = virtualinvoke $r671.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r673 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r674 = virtualinvoke $r672.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r673);

        $r675 = virtualinvoke $r674.<java.lang.StringBuilder: java.lang.String toString()>();

        $r676 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r675, $r676);

        $r677 = new java.lang.StringBuilder;

        $r678 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r679 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r678);

        specialinvoke $r677.<java.lang.StringBuilder: void <init>(java.lang.String)>($r679);

        $r680 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r681 = virtualinvoke $r677.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r680);

        $r682 = virtualinvoke $r681.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r683 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r684 = virtualinvoke $r682.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r683);

        $r685 = virtualinvoke $r684.<java.lang.StringBuilder: java.lang.String toString()>();

        $r686 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r685, $r686);

        $r687 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r687);

        $r688 = new java.lang.StringBuilder;

        $r689 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r690 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r689);

        specialinvoke $r688.<java.lang.StringBuilder: void <init>(java.lang.String)>($r690);

        $r691 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r692 = virtualinvoke $r688.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r691);

        $r693 = virtualinvoke $r692.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r694 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r695 = virtualinvoke $r693.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r694);

        $r696 = virtualinvoke $r695.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r697 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r698 = virtualinvoke $r696.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r697);

        $r699 = virtualinvoke $r698.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r700 = virtualinvoke $r699.<java.lang.StringBuilder: java.lang.String toString()>();

        $r701 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r700, $r701);

        $r702 = new java.lang.StringBuilder;

        $r703 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r704 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r703);

        specialinvoke $r702.<java.lang.StringBuilder: void <init>(java.lang.String)>($r704);

        $r705 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r706 = virtualinvoke $r702.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r705);

        $r707 = virtualinvoke $r706.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r708 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r709 = virtualinvoke $r707.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r708);

        $r710 = virtualinvoke $r709.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r711 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r712 = virtualinvoke $r710.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r711);

        $r713 = virtualinvoke $r712.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r714 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r715 = virtualinvoke $r713.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r714);

        $r716 = virtualinvoke $r715.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r717 = virtualinvoke $r716.<java.lang.StringBuilder: java.lang.String toString()>();

        $r718 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r717, $r718);

        $r719 = new java.lang.StringBuilder;

        $r720 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r721 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r720);

        specialinvoke $r719.<java.lang.StringBuilder: void <init>(java.lang.String)>($r721);

        $r722 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r723 = virtualinvoke $r719.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r722);

        $r724 = virtualinvoke $r723.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r725 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r726 = virtualinvoke $r724.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r725);

        $r727 = virtualinvoke $r726.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r728 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r729 = virtualinvoke $r727.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r728);

        $r730 = virtualinvoke $r729.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r731 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r732 = virtualinvoke $r730.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r731);

        $r733 = virtualinvoke $r732.<java.lang.StringBuilder: java.lang.String toString()>();

        $r734 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r733, $r734);

        $r735 = new java.lang.StringBuilder;

        $r736 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r737 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r736);

        specialinvoke $r735.<java.lang.StringBuilder: void <init>(java.lang.String)>($r737);

        $r738 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r739 = virtualinvoke $r735.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r738);

        $r740 = virtualinvoke $r739.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r741 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r742 = virtualinvoke $r740.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r741);

        $r743 = virtualinvoke $r742.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r744 = virtualinvoke $r743.<java.lang.StringBuilder: java.lang.String toString()>();

        $r745 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r744, $r745);

        $r746 = new java.lang.StringBuilder;

        $r747 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r748 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r747);

        specialinvoke $r746.<java.lang.StringBuilder: void <init>(java.lang.String)>($r748);

        $r749 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r750 = virtualinvoke $r746.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r749);

        $r751 = virtualinvoke $r750.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r752 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r753 = virtualinvoke $r751.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r752);

        $r754 = virtualinvoke $r753.<java.lang.StringBuilder: java.lang.String toString()>();

        $r755 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r754, $r755);

        $r756 = new java.lang.StringBuilder;

        $r757 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r758 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r757);

        specialinvoke $r756.<java.lang.StringBuilder: void <init>(java.lang.String)>($r758);

        $r759 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r760 = virtualinvoke $r756.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r759);

        $r761 = virtualinvoke $r760.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r762 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r763 = virtualinvoke $r761.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r762);

        $r764 = virtualinvoke $r763.<java.lang.StringBuilder: java.lang.String toString()>();

        $r765 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r764, $r765);

        $r766 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r766);

        $r767 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r767);

        $r768 = new java.lang.StringBuilder;

        $r769 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r770 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r769);

        specialinvoke $r768.<java.lang.StringBuilder: void <init>(java.lang.String)>($r770);

        $r771 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r772 = virtualinvoke $r768.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r771);

        $r773 = virtualinvoke $r772.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r774 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r775 = virtualinvoke $r773.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r774);

        $r776 = virtualinvoke $r775.<java.lang.StringBuilder: java.lang.String toString()>();

        $r777 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r776, $r777);

        return;
    }

    public void testNormalize_with_nullbytes() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7, $r10, $r12, $r13, $r15, $r16;
        java.lang.String $r2, $r5, $r8, $r9, $r11, $r14, $r17, $r18;
        java.lang.IllegalArgumentException $r19, $r20;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r2 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r5 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("a\\b/c\u0000.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r11 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r14 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>("\u0000a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

     label7:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }

    public void testNormalizeUnixWin() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>("/a/b/../c/", 1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/c/", $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>("\\a\\b\\..\\c\\", 1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/c/", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>("/a/b/../c/", 0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\c\\", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>("\\a\\b\\..\\c\\", 0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\c\\", $r4);

        return;
    }

    public void testNormalizeNoEndSeparator() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12, $r15, $r16, $r18, $r21, $r24, $r27, $r28, $r30, $r33, $r36, $r39, $r40, $r42, $r44, $r47, $r50, $r53, $r56, $r57, $r59, $r62, $r65, $r68, $r69, $r71, $r74, $r77, $r80, $r81, $r83, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r97, $r100, $r101, $r103, $r106, $r107, $r109, $r112, $r115, $r116, $r118, $r121, $r122, $r124, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r137, $r138, $r140, $r141, $r143, $r144, $r146, $r147, $r149, $r150, $r152, $r155, $r156, $r158, $r159, $r161, $r162, $r163, $r165, $r166, $r168, $r169, $r171, $r172, $r173, $r174, $r175, $r177, $r178, $r180, $r183, $r184, $r186, $r187, $r189, $r192, $r195, $r196, $r198, $r199, $r201, $r204, $r205, $r207, $r208, $r210, $r211, $r213, $r214, $r215, $r216, $r218, $r219, $r220, $r221, $r222, $r223, $r225, $r226, $r227, $r228, $r230, $r233, $r234, $r236, $r239, $r240, $r242, $r245, $r248, $r249, $r251, $r254, $r255, $r256, $r258, $r261, $r262, $r264, $r266, $r267, $r268, $r270, $r273, $r276, $r277, $r279, $r282, $r285, $r288, $r289, $r291, $r294, $r297, $r298, $r300, $r303, $r304, $r306, $r308, $r309, $r311, $r313, $r314, $r315, $r316, $r318, $r320, $r321, $r323, $r325, $r326, $r328, $r331, $r332, $r334, $r337, $r338, $r340, $r343, $r346, $r347, $r349, $r352, $r353, $r354, $r356, $r359, $r360, $r362, $r364, $r365, $r366, $r368, $r371, $r374, $r375, $r377, $r380, $r383, $r386, $r387, $r389, $r392, $r395, $r396, $r398, $r401, $r402, $r404, $r406, $r407, $r409, $r411, $r412, $r413, $r414, $r416, $r418, $r419, $r421, $r423, $r424, $r426, $r429, $r430, $r432, $r435, $r436, $r438, $r441, $r444, $r445, $r447, $r450, $r451, $r452, $r454, $r457, $r458, $r460, $r462, $r463, $r464, $r466, $r469, $r472, $r473, $r475, $r478, $r481, $r484, $r485, $r487, $r490, $r493, $r494, $r496, $r499, $r500, $r502, $r504, $r505, $r507, $r509, $r510, $r511, $r512, $r514, $r516, $r517, $r518, $r519, $r521, $r524, $r525, $r526, $r527, $r528, $r529, $r530, $r532, $r535, $r536, $r538, $r541, $r544, $r545, $r547, $r550, $r551, $r552, $r553, $r554, $r555, $r556, $r557, $r559, $r560, $r561, $r564, $r567, $r568, $r570, $r571, $r572, $r575, $r578, $r579, $r581, $r582, $r583, $r586, $r589, $r592, $r593, $r595, $r596, $r597, $r600, $r603, $r604, $r605, $r607, $r608, $r609, $r612, $r615, $r616, $r618, $r619, $r620, $r623, $r625, $r626, $r627, $r629, $r630, $r631, $r634, $r637, $r640, $r641, $r643, $r644, $r645, $r648, $r651, $r654, $r657, $r658, $r660, $r661, $r662, $r665, $r668, $r671, $r672, $r674, $r675, $r676, $r679, $r682, $r683, $r685, $r686, $r687, $r690, $r692, $r693, $r695, $r696, $r697, $r700, $r702, $r703, $r704, $r705, $r707, $r708, $r709, $r712, $r714, $r715;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r41, $r43, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r58, $r60, $r61, $r63, $r64, $r66, $r67, $r70, $r72, $r73, $r75, $r76, $r78, $r79, $r82, $r84, $r85, $r96, $r98, $r99, $r102, $r104, $r105, $r108, $r110, $r111, $r113, $r114, $r117, $r119, $r120, $r123, $r125, $r126, $r136, $r139, $r142, $r145, $r148, $r151, $r153, $r154, $r157, $r160, $r164, $r167, $r170, $r176, $r179, $r181, $r182, $r185, $r188, $r190, $r191, $r193, $r194, $r197, $r200, $r202, $r203, $r206, $r209, $r212, $r217, $r224, $r229, $r231, $r232, $r235, $r237, $r238, $r241, $r243, $r244, $r246, $r247, $r250, $r252, $r253, $r257, $r259, $r260, $r263, $r265, $r269, $r271, $r272, $r274, $r275, $r278, $r280, $r281, $r283, $r284, $r286, $r287, $r290, $r292, $r293, $r295, $r296, $r299, $r301, $r302, $r305, $r307, $r310, $r312, $r317, $r319, $r322, $r324, $r327, $r329, $r330, $r333, $r335, $r336, $r339, $r341, $r342, $r344, $r345, $r348, $r350, $r351, $r355, $r357, $r358, $r361, $r363, $r367, $r369, $r370, $r372, $r373, $r376, $r378, $r379, $r381, $r382, $r384, $r385, $r388, $r390, $r391, $r393, $r394, $r397, $r399, $r400, $r403, $r405, $r408, $r410, $r415, $r417, $r420, $r422, $r425, $r427, $r428, $r431, $r433, $r434, $r437, $r439, $r440, $r442, $r443, $r446, $r448, $r449, $r453, $r455, $r456, $r459, $r461, $r465, $r467, $r468, $r470, $r471, $r474, $r476, $r477, $r479, $r480, $r482, $r483, $r486, $r488, $r489, $r491, $r492, $r495, $r497, $r498, $r501, $r503, $r506, $r508, $r513, $r515, $r520, $r522, $r523, $r531, $r533, $r534, $r537, $r539, $r540, $r542, $r543, $r546, $r548, $r549, $r558, $r562, $r563, $r565, $r566, $r569, $r573, $r574, $r576, $r577, $r580, $r584, $r585, $r587, $r588, $r590, $r591, $r594, $r598, $r599, $r601, $r602, $r606, $r610, $r611, $r613, $r614, $r617, $r621, $r622, $r624, $r628, $r632, $r633, $r635, $r636, $r638, $r639, $r642, $r646, $r647, $r649, $r650, $r652, $r653, $r655, $r656, $r659, $r663, $r664, $r666, $r667, $r669, $r670, $r673, $r677, $r678, $r680, $r681, $r684, $r688, $r689, $r691, $r694, $r698, $r699, $r701, $r706, $r710, $r711, $r713;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("1:\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("\\\\\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("\\\\a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r9 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r12 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r21 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r24 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r30 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r33 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r36 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r39, $r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r47 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r50 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r53 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r57 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("\\\\server\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r56, $r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r59 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r62 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r65 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r68, $r69);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r71 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r74 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r77 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        $r81 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user\\a\\b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, $r81);

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r83 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        $r87 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r86, $r87);

        $r88 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r88);

        $r89 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../../c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r89);

        $r90 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r90);

        $r91 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r91);

        $r92 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r92);

        $r93 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r93);

        $r94 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../../");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r94);

        $r95 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r95);

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r97 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        $r101 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r100, $r101);

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r103 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        $r107 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/../c/../d/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r106, $r107);

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r109 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r112 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        $r116 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r115, $r116);

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r118 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        $r122 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r121, $r122);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r124 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        $r128 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("a/b/./././");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r127, $r128);

        $r129 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("./a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r129);

        $r130 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r130);

        $r131 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r131);

        $r132 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>(".");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r132);

        $r133 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r133);

        $r134 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r134);

        $r135 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r135);

        $r136 = new java.lang.StringBuilder;

        $r137 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r138 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r137);

        specialinvoke $r136.<java.lang.StringBuilder: void <init>(java.lang.String)>($r138);

        $r139 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        $r141 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r140, $r141);

        $r142 = new java.lang.StringBuilder;

        $r143 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r144 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r143);

        specialinvoke $r142.<java.lang.StringBuilder: void <init>(java.lang.String)>($r144);

        $r145 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        $r147 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r146, $r147);

        $r148 = new java.lang.StringBuilder;

        $r149 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r150 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r149);

        specialinvoke $r148.<java.lang.StringBuilder: void <init>(java.lang.String)>($r150);

        $r151 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r152 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();

        $r156 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r155, $r156);

        $r157 = new java.lang.StringBuilder;

        $r158 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r159 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r158);

        specialinvoke $r157.<java.lang.StringBuilder: void <init>(java.lang.String)>($r159);

        $r160 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();

        $r162 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r161, $r162);

        $r163 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r163);

        $r164 = new java.lang.StringBuilder;

        $r165 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r166 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r165);

        specialinvoke $r164.<java.lang.StringBuilder: void <init>(java.lang.String)>($r166);

        $r167 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        $r169 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r168, $r169);

        $r170 = new java.lang.StringBuilder;

        $r171 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r172 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r171);

        specialinvoke $r170.<java.lang.StringBuilder: void <init>(java.lang.String)>($r172);

        $r173 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        $r174 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r173, $r174);

        $r175 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r175);

        $r176 = new java.lang.StringBuilder;

        $r177 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r178 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r177);

        specialinvoke $r176.<java.lang.StringBuilder: void <init>(java.lang.String)>($r178);

        $r179 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r180 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r181 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r180);

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>();

        $r184 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r183, $r184);

        $r185 = new java.lang.StringBuilder;

        $r186 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r187 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r186);

        specialinvoke $r185.<java.lang.StringBuilder: void <init>(java.lang.String)>($r187);

        $r188 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r189 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r190 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r189);

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r192 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r193 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.String toString()>();

        $r196 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r195, $r196);

        $r197 = new java.lang.StringBuilder;

        $r198 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r199 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r198);

        specialinvoke $r197.<java.lang.StringBuilder: void <init>(java.lang.String)>($r199);

        $r200 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r201 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r202 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r201);

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.String toString()>();

        $r205 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r204, $r205);

        $r206 = new java.lang.StringBuilder;

        $r207 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r208 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r207);

        specialinvoke $r206.<java.lang.StringBuilder: void <init>(java.lang.String)>($r208);

        $r209 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.String toString()>();

        $r211 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r210, $r211);

        $r212 = new java.lang.StringBuilder;

        $r213 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r214 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r213);

        specialinvoke $r212.<java.lang.StringBuilder: void <init>(java.lang.String)>($r214);

        $r215 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.String toString()>();

        $r216 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r215, $r216);

        $r217 = new java.lang.StringBuilder;

        $r218 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r219 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r218);

        specialinvoke $r217.<java.lang.StringBuilder: void <init>(java.lang.String)>($r219);

        $r220 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        $r221 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r220, $r221);

        $r222 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r222);

        $r223 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r223);

        $r224 = new java.lang.StringBuilder;

        $r225 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r226 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r225);

        specialinvoke $r224.<java.lang.StringBuilder: void <init>(java.lang.String)>($r226);

        $r227 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.String toString()>();

        $r228 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r227, $r228);

        $r229 = new java.lang.StringBuilder;

        specialinvoke $r229.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r230 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r231 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r230);

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.String toString()>();

        $r234 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r233, $r234);

        $r235 = new java.lang.StringBuilder;

        specialinvoke $r235.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r236 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r237 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r236);

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r239 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.String toString()>();

        $r240 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r239, $r240);

        $r241 = new java.lang.StringBuilder;

        specialinvoke $r241.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r242 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r243 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r242);

        $r244 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r245 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r246 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r245);

        $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.String toString()>();

        $r249 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r248, $r249);

        $r250 = new java.lang.StringBuilder;

        specialinvoke $r250.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r251 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r252 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r251);

        $r253 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r254 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.String toString()>();

        $r255 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r254, $r255);

        $r256 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r256);

        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r258 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r259 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r258);

        $r260 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.String toString()>();

        $r262 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r261, $r262);

        $r263 = new java.lang.StringBuilder;

        specialinvoke $r263.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r264 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r265 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r264);

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.String toString()>();

        $r267 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r266, $r267);

        $r268 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r268);

        $r269 = new java.lang.StringBuilder;

        specialinvoke $r269.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r270 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r271 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r270);

        $r272 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r273 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r274 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r273);

        $r275 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r276 = virtualinvoke $r275.<java.lang.StringBuilder: java.lang.String toString()>();

        $r277 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r276, $r277);

        $r278 = new java.lang.StringBuilder;

        specialinvoke $r278.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r279 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r280 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r279);

        $r281 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r282 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r283 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r282);

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r285 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r286 = virtualinvoke $r284.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r285);

        $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r288 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.String toString()>();

        $r289 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r288, $r289);

        $r290 = new java.lang.StringBuilder;

        specialinvoke $r290.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r291 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r292 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r291);

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r294 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r295 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r294);

        $r296 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r297 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.String toString()>();

        $r298 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r297, $r298);

        $r299 = new java.lang.StringBuilder;

        specialinvoke $r299.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r300 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r301 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r300);

        $r302 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r303 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.String toString()>();

        $r304 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r303, $r304);

        $r305 = new java.lang.StringBuilder;

        specialinvoke $r305.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r306 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r307 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r306);

        $r308 = virtualinvoke $r307.<java.lang.StringBuilder: java.lang.String toString()>();

        $r309 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r308, $r309);

        $r310 = new java.lang.StringBuilder;

        specialinvoke $r310.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r311 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r312 = virtualinvoke $r310.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r311);

        $r313 = virtualinvoke $r312.<java.lang.StringBuilder: java.lang.String toString()>();

        $r314 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r313, $r314);

        $r315 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r315);

        $r316 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r316);

        $r317 = new java.lang.StringBuilder;

        specialinvoke $r317.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r318 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r319 = virtualinvoke $r317.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r318);

        $r320 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.String toString()>();

        $r321 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r320, $r321);

        $r322 = new java.lang.StringBuilder;

        specialinvoke $r322.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r323 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r324 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r323);

        $r325 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.String toString()>();

        $r326 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r325, $r326);

        $r327 = new java.lang.StringBuilder;

        specialinvoke $r327.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r328 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r329 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r328);

        $r330 = virtualinvoke $r329.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r331 = virtualinvoke $r330.<java.lang.StringBuilder: java.lang.String toString()>();

        $r332 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r331, $r332);

        $r333 = new java.lang.StringBuilder;

        specialinvoke $r333.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r334 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r335 = virtualinvoke $r333.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r334);

        $r336 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r337 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.String toString()>();

        $r338 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r337, $r338);

        $r339 = new java.lang.StringBuilder;

        specialinvoke $r339.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r340 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r341 = virtualinvoke $r339.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r340);

        $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r343 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r344 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r343);

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.String toString()>();

        $r347 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r346, $r347);

        $r348 = new java.lang.StringBuilder;

        specialinvoke $r348.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r349 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r350 = virtualinvoke $r348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r349);

        $r351 = virtualinvoke $r350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r352 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.String toString()>();

        $r353 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r352, $r353);

        $r354 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r354);

        $r355 = new java.lang.StringBuilder;

        specialinvoke $r355.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r356 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r357 = virtualinvoke $r355.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r356);

        $r358 = virtualinvoke $r357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r359 = virtualinvoke $r358.<java.lang.StringBuilder: java.lang.String toString()>();

        $r360 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r359, $r360);

        $r361 = new java.lang.StringBuilder;

        specialinvoke $r361.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r362 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r363 = virtualinvoke $r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r362);

        $r364 = virtualinvoke $r363.<java.lang.StringBuilder: java.lang.String toString()>();

        $r365 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r364, $r365);

        $r366 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r366);

        $r367 = new java.lang.StringBuilder;

        specialinvoke $r367.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r368 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r369 = virtualinvoke $r367.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r368);

        $r370 = virtualinvoke $r369.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r371 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r372 = virtualinvoke $r370.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r371);

        $r373 = virtualinvoke $r372.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r374 = virtualinvoke $r373.<java.lang.StringBuilder: java.lang.String toString()>();

        $r375 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r374, $r375);

        $r376 = new java.lang.StringBuilder;

        specialinvoke $r376.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r377 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r378 = virtualinvoke $r376.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r377);

        $r379 = virtualinvoke $r378.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r380 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r381 = virtualinvoke $r379.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r380);

        $r382 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r383 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r384 = virtualinvoke $r382.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r383);

        $r385 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r386 = virtualinvoke $r385.<java.lang.StringBuilder: java.lang.String toString()>();

        $r387 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r386, $r387);

        $r388 = new java.lang.StringBuilder;

        specialinvoke $r388.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r389 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r390 = virtualinvoke $r388.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r389);

        $r391 = virtualinvoke $r390.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r392 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r393 = virtualinvoke $r391.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r392);

        $r394 = virtualinvoke $r393.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r395 = virtualinvoke $r394.<java.lang.StringBuilder: java.lang.String toString()>();

        $r396 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r395, $r396);

        $r397 = new java.lang.StringBuilder;

        specialinvoke $r397.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r398 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r399 = virtualinvoke $r397.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r398);

        $r400 = virtualinvoke $r399.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.String toString()>();

        $r402 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r401, $r402);

        $r403 = new java.lang.StringBuilder;

        specialinvoke $r403.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r404 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r405 = virtualinvoke $r403.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r404);

        $r406 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.String toString()>();

        $r407 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r406, $r407);

        $r408 = new java.lang.StringBuilder;

        specialinvoke $r408.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r409 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r410 = virtualinvoke $r408.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r409);

        $r411 = virtualinvoke $r410.<java.lang.StringBuilder: java.lang.String toString()>();

        $r412 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r411, $r412);

        $r413 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r413);

        $r414 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r414);

        $r415 = new java.lang.StringBuilder;

        specialinvoke $r415.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r416 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r417 = virtualinvoke $r415.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r416);

        $r418 = virtualinvoke $r417.<java.lang.StringBuilder: java.lang.String toString()>();

        $r419 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r418, $r419);

        $r420 = new java.lang.StringBuilder;

        specialinvoke $r420.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r421 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r422 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r421);

        $r423 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.String toString()>();

        $r424 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r423, $r424);

        $r425 = new java.lang.StringBuilder;

        specialinvoke $r425.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r426 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r427 = virtualinvoke $r425.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r426);

        $r428 = virtualinvoke $r427.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r429 = virtualinvoke $r428.<java.lang.StringBuilder: java.lang.String toString()>();

        $r430 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r429, $r430);

        $r431 = new java.lang.StringBuilder;

        specialinvoke $r431.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r432 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r433 = virtualinvoke $r431.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r432);

        $r434 = virtualinvoke $r433.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r435 = virtualinvoke $r434.<java.lang.StringBuilder: java.lang.String toString()>();

        $r436 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r435, $r436);

        $r437 = new java.lang.StringBuilder;

        specialinvoke $r437.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r438 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r439 = virtualinvoke $r437.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r438);

        $r440 = virtualinvoke $r439.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r441 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r442 = virtualinvoke $r440.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r441);

        $r443 = virtualinvoke $r442.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r444 = virtualinvoke $r443.<java.lang.StringBuilder: java.lang.String toString()>();

        $r445 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r444, $r445);

        $r446 = new java.lang.StringBuilder;

        specialinvoke $r446.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r447 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r448 = virtualinvoke $r446.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r447);

        $r449 = virtualinvoke $r448.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r450 = virtualinvoke $r449.<java.lang.StringBuilder: java.lang.String toString()>();

        $r451 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r450, $r451);

        $r452 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r452);

        $r453 = new java.lang.StringBuilder;

        specialinvoke $r453.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r454 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r455 = virtualinvoke $r453.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r454);

        $r456 = virtualinvoke $r455.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r457 = virtualinvoke $r456.<java.lang.StringBuilder: java.lang.String toString()>();

        $r458 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r457, $r458);

        $r459 = new java.lang.StringBuilder;

        specialinvoke $r459.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r460 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r461 = virtualinvoke $r459.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r460);

        $r462 = virtualinvoke $r461.<java.lang.StringBuilder: java.lang.String toString()>();

        $r463 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r462, $r463);

        $r464 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r464);

        $r465 = new java.lang.StringBuilder;

        specialinvoke $r465.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r466 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r467 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r466);

        $r468 = virtualinvoke $r467.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r469 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r470 = virtualinvoke $r468.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r469);

        $r471 = virtualinvoke $r470.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r472 = virtualinvoke $r471.<java.lang.StringBuilder: java.lang.String toString()>();

        $r473 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r472, $r473);

        $r474 = new java.lang.StringBuilder;

        specialinvoke $r474.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r475 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r476 = virtualinvoke $r474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r475);

        $r477 = virtualinvoke $r476.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r478 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r479 = virtualinvoke $r477.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r478);

        $r480 = virtualinvoke $r479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r481 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r482 = virtualinvoke $r480.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r481);

        $r483 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r484 = virtualinvoke $r483.<java.lang.StringBuilder: java.lang.String toString()>();

        $r485 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r484, $r485);

        $r486 = new java.lang.StringBuilder;

        specialinvoke $r486.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r487 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r488 = virtualinvoke $r486.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r487);

        $r489 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r490 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r491 = virtualinvoke $r489.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r490);

        $r492 = virtualinvoke $r491.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r493 = virtualinvoke $r492.<java.lang.StringBuilder: java.lang.String toString()>();

        $r494 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r493, $r494);

        $r495 = new java.lang.StringBuilder;

        specialinvoke $r495.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r496 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r497 = virtualinvoke $r495.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r496);

        $r498 = virtualinvoke $r497.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r499 = virtualinvoke $r498.<java.lang.StringBuilder: java.lang.String toString()>();

        $r500 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r499, $r500);

        $r501 = new java.lang.StringBuilder;

        specialinvoke $r501.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r502 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r503 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r502);

        $r504 = virtualinvoke $r503.<java.lang.StringBuilder: java.lang.String toString()>();

        $r505 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r504, $r505);

        $r506 = new java.lang.StringBuilder;

        specialinvoke $r506.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r507 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r508 = virtualinvoke $r506.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r507);

        $r509 = virtualinvoke $r508.<java.lang.StringBuilder: java.lang.String toString()>();

        $r510 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r509, $r510);

        $r511 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r511);

        $r512 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r512);

        $r513 = new java.lang.StringBuilder;

        specialinvoke $r513.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r514 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r515 = virtualinvoke $r513.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r514);

        $r516 = virtualinvoke $r515.<java.lang.StringBuilder: java.lang.String toString()>();

        $r517 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r516, $r517);

        $r518 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r518);

        $r519 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r519);

        $r520 = new java.lang.StringBuilder;

        specialinvoke $r520.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r521 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r522 = virtualinvoke $r520.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r521);

        $r523 = virtualinvoke $r522.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r524 = virtualinvoke $r523.<java.lang.StringBuilder: java.lang.String toString()>();

        $r525 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r524, $r525);

        $r526 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:c", $r526);

        $r527 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r527);

        $r528 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r528);

        $r529 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r529);

        $r530 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r530);

        $r531 = new java.lang.StringBuilder;

        specialinvoke $r531.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r532 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r533 = virtualinvoke $r531.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r532);

        $r534 = virtualinvoke $r533.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r535 = virtualinvoke $r534.<java.lang.StringBuilder: java.lang.String toString()>();

        $r536 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r535, $r536);

        $r537 = new java.lang.StringBuilder;

        specialinvoke $r537.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r538 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r539 = virtualinvoke $r537.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r538);

        $r540 = virtualinvoke $r539.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r541 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r542 = virtualinvoke $r540.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r541);

        $r543 = virtualinvoke $r542.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r544 = virtualinvoke $r543.<java.lang.StringBuilder: java.lang.String toString()>();

        $r545 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r544, $r545);

        $r546 = new java.lang.StringBuilder;

        specialinvoke $r546.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:a");

        $r547 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r548 = virtualinvoke $r546.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r547);

        $r549 = virtualinvoke $r548.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r550 = virtualinvoke $r549.<java.lang.StringBuilder: java.lang.String toString()>();

        $r551 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r550, $r551);

        $r552 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a", $r552);

        $r553 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r553);

        $r554 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r554);

        $r555 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r555);

        $r556 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r556);

        $r557 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r557);

        $r558 = new java.lang.StringBuilder;

        $r559 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r560 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r559);

        specialinvoke $r558.<java.lang.StringBuilder: void <init>(java.lang.String)>($r560);

        $r561 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r562 = virtualinvoke $r558.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r561);

        $r563 = virtualinvoke $r562.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r564 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r565 = virtualinvoke $r563.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r564);

        $r566 = virtualinvoke $r565.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r567 = virtualinvoke $r566.<java.lang.StringBuilder: java.lang.String toString()>();

        $r568 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r567, $r568);

        $r569 = new java.lang.StringBuilder;

        $r570 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r571 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r570);

        specialinvoke $r569.<java.lang.StringBuilder: void <init>(java.lang.String)>($r571);

        $r572 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r573 = virtualinvoke $r569.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r572);

        $r574 = virtualinvoke $r573.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r575 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r576 = virtualinvoke $r574.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r575);

        $r577 = virtualinvoke $r576.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r578 = virtualinvoke $r577.<java.lang.StringBuilder: java.lang.String toString()>();

        $r579 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r578, $r579);

        $r580 = new java.lang.StringBuilder;

        $r581 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r582 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r581);

        specialinvoke $r580.<java.lang.StringBuilder: void <init>(java.lang.String)>($r582);

        $r583 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r584 = virtualinvoke $r580.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r583);

        $r585 = virtualinvoke $r584.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r586 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r587 = virtualinvoke $r585.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r586);

        $r588 = virtualinvoke $r587.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r589 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r590 = virtualinvoke $r588.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r589);

        $r591 = virtualinvoke $r590.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r592 = virtualinvoke $r591.<java.lang.StringBuilder: java.lang.String toString()>();

        $r593 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r592, $r593);

        $r594 = new java.lang.StringBuilder;

        $r595 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r596 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r595);

        specialinvoke $r594.<java.lang.StringBuilder: void <init>(java.lang.String)>($r596);

        $r597 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r598 = virtualinvoke $r594.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r597);

        $r599 = virtualinvoke $r598.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r600 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r601 = virtualinvoke $r599.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r600);

        $r602 = virtualinvoke $r601.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r603 = virtualinvoke $r602.<java.lang.StringBuilder: java.lang.String toString()>();

        $r604 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r603, $r604);

        $r605 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../../../c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r605);

        $r606 = new java.lang.StringBuilder;

        $r607 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r608 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r607);

        specialinvoke $r606.<java.lang.StringBuilder: void <init>(java.lang.String)>($r608);

        $r609 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r610 = virtualinvoke $r606.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r609);

        $r611 = virtualinvoke $r610.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r612 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r613 = virtualinvoke $r611.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r612);

        $r614 = virtualinvoke $r613.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r615 = virtualinvoke $r614.<java.lang.StringBuilder: java.lang.String toString()>();

        $r616 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r615, $r616);

        $r617 = new java.lang.StringBuilder;

        $r618 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r619 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r618);

        specialinvoke $r617.<java.lang.StringBuilder: void <init>(java.lang.String)>($r619);

        $r620 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r621 = virtualinvoke $r617.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r620);

        $r622 = virtualinvoke $r621.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r623 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r624 = virtualinvoke $r622.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r623);

        $r625 = virtualinvoke $r624.<java.lang.StringBuilder: java.lang.String toString()>();

        $r626 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r625, $r626);

        $r627 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../../..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r627);

        $r628 = new java.lang.StringBuilder;

        $r629 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r630 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r629);

        specialinvoke $r628.<java.lang.StringBuilder: void <init>(java.lang.String)>($r630);

        $r631 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r632 = virtualinvoke $r628.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r631);

        $r633 = virtualinvoke $r632.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r634 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r635 = virtualinvoke $r633.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r634);

        $r636 = virtualinvoke $r635.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r637 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r638 = virtualinvoke $r636.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r637);

        $r639 = virtualinvoke $r638.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r640 = virtualinvoke $r639.<java.lang.StringBuilder: java.lang.String toString()>();

        $r641 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/../c/../d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r640, $r641);

        $r642 = new java.lang.StringBuilder;

        $r643 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r644 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r643);

        specialinvoke $r642.<java.lang.StringBuilder: void <init>(java.lang.String)>($r644);

        $r645 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r646 = virtualinvoke $r642.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r645);

        $r647 = virtualinvoke $r646.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r648 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r649 = virtualinvoke $r647.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r648);

        $r650 = virtualinvoke $r649.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r651 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r652 = virtualinvoke $r650.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r651);

        $r653 = virtualinvoke $r652.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r654 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r655 = virtualinvoke $r653.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r654);

        $r656 = virtualinvoke $r655.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r657 = virtualinvoke $r656.<java.lang.StringBuilder: java.lang.String toString()>();

        $r658 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b//d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r657, $r658);

        $r659 = new java.lang.StringBuilder;

        $r660 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r661 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r660);

        specialinvoke $r659.<java.lang.StringBuilder: void <init>(java.lang.String)>($r661);

        $r662 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r663 = virtualinvoke $r659.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r662);

        $r664 = virtualinvoke $r663.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r665 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r666 = virtualinvoke $r664.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r665);

        $r667 = virtualinvoke $r666.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r668 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r669 = virtualinvoke $r667.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r668);

        $r670 = virtualinvoke $r669.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r671 = virtualinvoke $r670.<java.lang.StringBuilder: java.lang.String toString()>();

        $r672 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/a/b/././.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r671, $r672);

        $r673 = new java.lang.StringBuilder;

        $r674 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r675 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r674);

        specialinvoke $r673.<java.lang.StringBuilder: void <init>(java.lang.String)>($r675);

        $r676 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r677 = virtualinvoke $r673.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r676);

        $r678 = virtualinvoke $r677.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r679 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r680 = virtualinvoke $r678.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r679);

        $r681 = virtualinvoke $r680.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r682 = virtualinvoke $r681.<java.lang.StringBuilder: java.lang.String toString()>();

        $r683 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/./a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r682, $r683);

        $r684 = new java.lang.StringBuilder;

        $r685 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r686 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r685);

        specialinvoke $r684.<java.lang.StringBuilder: void <init>(java.lang.String)>($r686);

        $r687 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r688 = virtualinvoke $r684.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r687);

        $r689 = virtualinvoke $r688.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r690 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r691 = virtualinvoke $r689.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r690);

        $r692 = virtualinvoke $r691.<java.lang.StringBuilder: java.lang.String toString()>();

        $r693 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r692, $r693);

        $r694 = new java.lang.StringBuilder;

        $r695 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r696 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r695);

        specialinvoke $r694.<java.lang.StringBuilder: void <init>(java.lang.String)>($r696);

        $r697 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r698 = virtualinvoke $r694.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r697);

        $r699 = virtualinvoke $r698.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r700 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r701 = virtualinvoke $r699.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r700);

        $r702 = virtualinvoke $r701.<java.lang.StringBuilder: java.lang.String toString()>();

        $r703 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/.");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r702, $r703);

        $r704 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/../a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r704);

        $r705 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/..");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r705);

        $r706 = new java.lang.StringBuilder;

        $r707 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r708 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r707);

        specialinvoke $r706.<java.lang.StringBuilder: void <init>(java.lang.String)>($r708);

        $r709 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r710 = virtualinvoke $r706.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r709);

        $r711 = virtualinvoke $r710.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server");

        $r712 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r713 = virtualinvoke $r711.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r712);

        $r714 = virtualinvoke $r713.<java.lang.StringBuilder: java.lang.String toString()>();

        $r715 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r714, $r715);

        return;
    }

    public void testNormalizeNoEndSeparatorUnixWin() throws java.lang.Exception
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>("/a/b/../c/", 1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/c", $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>("\\a\\b\\..\\c\\", 1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/c", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>("/a/b/../c/", 0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\c", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>("\\a\\b\\..\\c\\", 0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\c", $r4);

        return;
    }

    public void testConcat()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r20, $r23, $r25, $r26, $r28, $r31, $r32, $r34, $r37, $r40, $r42, $r43, $r45, $r48, $r51, $r52, $r54, $r57, $r59, $r60, $r62, $r65, $r66, $r68, $r71, $r74, $r76, $r77, $r79, $r82, $r85, $r86, $r88, $r91, $r94, $r95, $r97, $r98, $r100, $r102, $r103, $r105, $r106, $r108, $r109, $r111, $r112, $r114, $r116, $r117, $r119, $r120, $r122, $r123, $r125, $r126, $r128, $r131, $r132, $r134, $r137, $r138, $r140, $r143, $r146, $r147, $r149, $r152, $r155, $r156, $r158, $r161, $r164, $r165, $r167, $r169, $r170, $r172, $r174, $r175;
        java.lang.StringBuilder $r5, $r8, $r13, $r15, $r19, $r21, $r22, $r24, $r27, $r29, $r30, $r33, $r35, $r36, $r38, $r39, $r41, $r44, $r46, $r47, $r49, $r50, $r53, $r55, $r56, $r58, $r61, $r63, $r64, $r67, $r69, $r70, $r72, $r73, $r75, $r78, $r80, $r81, $r83, $r84, $r87, $r89, $r90, $r92, $r93, $r96, $r99, $r101, $r104, $r107, $r110, $r113, $r115, $r118, $r121, $r124, $r127, $r129, $r130, $r133, $r135, $r136, $r139, $r141, $r142, $r144, $r145, $r148, $r150, $r151, $r153, $r154, $r157, $r159, $r160, $r162, $r163, $r166, $r168, $r171, $r173;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>(null, "a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = new java.lang.StringBuilder;

        $r6 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>(null, "/a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", ":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>(":", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("f");

        $r14 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", "f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", "f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r20 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r23 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/", "f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r28 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a", "f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r34 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r37 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r40 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r45 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r48 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r52 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b", "f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r51, $r52);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r54 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r57 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "../f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r59, $r60);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r62 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r66 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b", "../f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r65, $r66);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r68 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r71 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g");

        $r74 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/../c/", "f/../g/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r77);

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r79 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r82 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        $r86 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/../c", "f/../g");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r85, $r86);

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>(java.lang.String)>("a");

        $r88 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.txt");

        $r91 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        $r95 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/c.txt", "f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r94, $r95);

        $r96 = new java.lang.StringBuilder;

        $r97 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r98 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r97);

        specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>($r98);

        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r100 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        $r103 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", "/f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r102, $r103);

        $r104 = new java.lang.StringBuilder;

        $r105 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r106 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r105);

        specialinvoke $r104.<java.lang.StringBuilder: void <init>(java.lang.String)>($r106);

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        $r109 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("", "/f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r108, $r109);

        $r110 = new java.lang.StringBuilder;

        $r111 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r112 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r111);

        specialinvoke $r110.<java.lang.StringBuilder: void <init>(java.lang.String)>($r112);

        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r114 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        $r117 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/", "/f/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r116, $r117);

        $r118 = new java.lang.StringBuilder;

        $r119 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r120 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r119);

        specialinvoke $r118.<java.lang.StringBuilder: void <init>(java.lang.String)>($r120);

        $r121 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        $r123 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a", "/f");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r122, $r123);

        $r124 = new java.lang.StringBuilder;

        $r125 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r126 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r125);

        specialinvoke $r124.<java.lang.StringBuilder: void <init>(java.lang.String)>($r126);

        $r127 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r128 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r129 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        $r132 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "/c/d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r131, $r132);

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:c");

        $r134 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r135 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r134);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        $r138 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "C:c/d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r137, $r138);

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>(java.lang.String)>("C:");

        $r140 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r143 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        $r147 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "C:/c/d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r146, $r147);

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r149 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r150 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r152 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();

        $r156 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "~/c/d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r155, $r156);

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r158 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");

        $r161 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r162 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        $r165 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "~user/c/d");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r164, $r165);

        $r166 = new java.lang.StringBuilder;

        specialinvoke $r166.<java.lang.StringBuilder: void <init>(java.lang.String)>("~");

        $r167 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

        $r170 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r169, $r170);

        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>(java.lang.String)>("~user");

        $r172 = <org.apache.commons.io.FilenameUtilsTestCase: java.lang.String SEP>;

        $r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172);

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.String toString()>();

        $r175 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>("a/b/", "~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r174, $r175);

        return;
    }

    public void testSeparatorsToUnix()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>("/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c.txt", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>("/a/b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>("\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>("D:\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("D:/a/b/c", $r6);

        return;
    }

    public void testSeparatorsToWindows()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>("\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>("\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c.txt", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>("\\a\\b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>("/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>("D:/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("D:\\a\\b\\c", $r6);

        return;
    }

    public void testSeparatorsToSystem()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = <org.apache.commons.io.FilenameUtilsTestCase: boolean WINDOWS>;

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c.txt", $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("\\a\\b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\a\\b\\c", $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("D:/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("D:\\a\\b\\c", $r12);

        goto label2;

     label1:
        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("/a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c.txt", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("/a/b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/c", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToSystem(java.lang.String)>("D:\\a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("D:/a/b/c", $r6);

     label2:
        return;
    }

    public void testGetPrefixLength()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44, $i46, $i48, $i50, $i52, $i54, $i56, $i58, $i60, $i62, $i64, $i66;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23, $l25, $l27, $l29, $l31, $l33, $l35, $l37, $l39, $l41, $l43, $l45, $l47, $l49, $l51, $l53, $l55, $l57, $l59, $l61, $l63, $l65, $l67;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(null);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1);

        $i2 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(":");

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3);

        $i4 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("1:\\a\\b\\c.txt");

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l5);

        $i6 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("1:");

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l7);

        $i8 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("1:a");

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l9);

        $i10 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\\\\\a\\b\\c.txt");

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l11);

        $i12 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\\\a");

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l13);

        $i14 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("");

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l15);

        $i16 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\");

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l17);

        $i18 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("C:");

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l19);

        $i20 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("C:\\");

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l21);

        $i22 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("//server/");

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l23);

        $i24 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~");

        $l25 = (long) $i24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l25);

        $i26 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~/");

        $l27 = (long) $i26;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l27);

        $i28 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~user");

        $l29 = (long) $i28;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l29);

        $i30 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~user/");

        $l31 = (long) $i30;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l31);

        $i32 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("a\\b\\c.txt");

        $l33 = (long) $i32;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l33);

        $i34 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\a\\b\\c.txt");

        $l35 = (long) $i34;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l35);

        $i36 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("C:a\\b\\c.txt");

        $l37 = (long) $i36;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l37);

        $i38 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("C:\\a\\b\\c.txt");

        $l39 = (long) $i38;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l39);

        $i40 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\\\server\\a\\b\\c.txt");

        $l41 = (long) $i40;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l41);

        $i42 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("a/b/c.txt");

        $l43 = (long) $i42;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l43);

        $i44 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("/a/b/c.txt");

        $l45 = (long) $i44;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l45);

        $i46 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("C:/a/b/c.txt");

        $l47 = (long) $i46;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l47);

        $i48 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("//server/a/b/c.txt");

        $l49 = (long) $i48;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l49);

        $i50 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~/a/b/c.txt");

        $l51 = (long) $i50;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l51);

        $i52 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~user/a/b/c.txt");

        $l53 = (long) $i52;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l53);

        $i54 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("a\\b\\c.txt");

        $l55 = (long) $i54;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l55);

        $i56 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\a\\b\\c.txt");

        $l57 = (long) $i56;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l57);

        $i58 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~\\a\\b\\c.txt");

        $l59 = (long) $i58;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l59);

        $i60 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("~user\\a\\b\\c.txt");

        $l61 = (long) $i60;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l61);

        $i62 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("//server/a/b/c.txt");

        $l63 = (long) $i62;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l63);

        $i64 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("\\\\\\a\\b\\c.txt");

        $l65 = (long) $i64;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l65);

        $i66 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>("///a/b/c.txt");

        $l67 = (long) $i66;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l67);

        return;
    }

    public void testIndexOfLastSeparator()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(null);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1);

        $i2 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>("noseperator.inthispath");

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3);

        $i4 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>("a/b/c");

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5);

        $i6 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>("a\\b\\c");

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7);

        return;
    }

    public void testIndexOfExtension()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(null);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1);

        $i2 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("file");

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3);

        $i4 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("file.txt");

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l5);

        $i6 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("a.txt/b.txt/c.txt");

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(13L, $l7);

        $i8 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("a/b/c");

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l9);

        $i10 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("a\\b\\c");

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l11);

        $i12 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("a/b.notextension/c");

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l13);

        $i14 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>("a\\b.notextension\\c");

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l15);

        return;
    }

    public void testGetPrefix()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("1:\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\\\\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\\\a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\", $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("C:\\");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:\\", $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/", $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r13);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r14);

        $r15 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r15);

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r16);

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\", $r18);

        $r19 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("C:\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:\\", $r19);

        $r20 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\\\server\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\\\server\\", $r20);

        $r21 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r21);

        $r22 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/", $r22);

        $r23 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("C:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:/", $r23);

        $r24 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("//server/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/", $r24);

        $r25 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r25);

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~user/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r26);

        $r27 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r27);

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\", $r28);

        $r29 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~\\", $r29);

        $r30 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~user\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user\\", $r30);

        return;
    }

    public void testGetPrefix_with_nullbyte()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>("~u\u0000ser\\a\\b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user\\", $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testGetPath()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("/noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("\\noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/c/", $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a\\b\\", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("1:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("///a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r13);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("//a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14);

        $r15 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r15);

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r16);

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r18);

        $r19 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r19);

        $r20 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r20);

        $r21 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r21);

        $r22 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r22);

        $r23 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r23);

        $r24 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r24);

        $r25 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r25);

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("C:a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r26);

        $r27 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("C:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r27);

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("//server/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r28);

        $r29 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r29);

        $r30 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~user/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r30);

        return;
    }

    public void testGetPath_with_nullbyte()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("~user/a/\u0000b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r1);

        return;
    }

    public void testGetPathNoEndSeparator()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("/noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("\\noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/c", $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a\\b", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("1:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("///a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r13);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("//a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14);

        $r15 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r15);

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r16);

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r18);

        $r19 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r19);

        $r20 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r20);

        $r21 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r21);

        $r22 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r22);

        $r23 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r23);

        $r24 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r24);

        $r25 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r25);

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("C:a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r26);

        $r27 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("C:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r27);

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("//server/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r28);

        $r29 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r29);

        $r30 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~user/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r30);

        return;
    }

    public void testGetPathNoEndSeparator_with_null_byte()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>("~user/a\u0000/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testGetFullPath()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/c/", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a\\b\\", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("1:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("///a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("//a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r13);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r14);

        $r15 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:/", $r15);

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/", $r16);

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r18);

        $r19 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r19);

        $r20 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r20);

        $r21 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/", $r21);

        $r22 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b/", $r22);

        $r23 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r23);

        $r24 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("C:a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a/b/", $r24);

        $r25 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("C:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:/a/b/", $r25);

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("//server/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/a/b/", $r26);

        $r27 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/a/b/", $r27);

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>("~user/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/a/b/", $r28);

        return;
    }

    public void testGetFullPathNoEndSeparator()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/c", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a\\b", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>(":");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("1:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("1:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("1:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("///a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("//a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r13);

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("C:");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r14);

        $r15 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("C:/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:/", $r15);

        $r16 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("//server/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/", $r16);

        $r17 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~", $r17);

        $r18 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/", $r18);

        $r19 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~user");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user", $r19);

        $r20 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~user/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/", $r20);

        $r21 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b", $r21);

        $r22 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/a/b", $r22);

        $r23 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("C:a");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:", $r23);

        $r24 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("C:a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:a/b", $r24);

        $r25 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("C:/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:/a/b", $r25);

        $r26 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("//server/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("//server/a/b", $r26);

        $r27 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~/a/b", $r27);

        $r28 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("~user/a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("~user/a/b", $r28);

        return;
    }

    public void testGetFullPathNoEndSeparator_IO_248()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/", $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("\\");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("/abc");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("\\abc");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("/abc/xyz");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("/abc", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>("\\abc\\xyz");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\abc", $r6);

        return;
    }

    public void testGetName()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("noseperator.inthispath", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c.txt", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r6);

        return;
    }

    public void testInjectionFailure()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>("a\\b\\\u0000c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testGetBaseName()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("noseperator.inthispath");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("noseperator", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("a/b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("a/b/c/");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("file.txt.bak");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("file.txt", $r7);

        return;
    }

    public void testGetBaseName_with_nullByte()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>("fil\u0000e.txt.bak");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("file.txt", $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testGetExtension()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("file.ext");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("ext", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("README");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("domain.dot.com");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("com", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("image.jpeg");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("jpeg", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a.b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a.b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("txt", $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a.b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a.b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("txt", $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("C:\\temp\\foo.bar\\README");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>("../filename.ext");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("ext", $r13);

        return;
    }

    public void testRemoveExtension()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("file.ext");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("file", $r2);

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("README");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("README", $r3);

        $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("domain.dot.com");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("domain.dot", $r4);

        $r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("image.jpeg");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("image", $r5);

        $r6 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a.b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a.b/c", $r6);

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a.b/c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a.b/c", $r7);

        $r8 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a/b/c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a/b/c", $r8);

        $r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a.b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a.b\\c", $r9);

        $r10 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a.b\\c.txt");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a.b\\c", $r10);

        $r11 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("a\\b\\c");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a\\b\\c", $r11);

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("C:\\temp\\foo.bar\\README");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C:\\temp\\foo.bar\\README", $r12);

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>("../filename.ext");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("../filename", $r13);

        return;
    }

    public void testEquals()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>("file.txt", "file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>("file.txt", "FILE.TXT");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>("a\\b\\file.txt", "a/b/file.txt");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6);

        return;
    }

    public void testEqualsOnSystem()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Boolean $r1, $r2;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>("file.txt", "file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = <org.apache.commons.io.FilenameUtilsTestCase: boolean WINDOWS>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>("file.txt", "FILE.TXT");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2);

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>("a\\b\\file.txt", "a/b/file.txt");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7);

        return;
    }

    public void testEqualsNormalized()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("file.txt", "file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("file.txt", "FILE.TXT");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("a\\b\\file.txt", "a/b/file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>("a/b/", "a/b");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7);

        return;
    }

    public void testEqualsNormalizedOnSystem()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Boolean $r1, $r2;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("file.txt", "file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = <org.apache.commons.io.FilenameUtilsTestCase: boolean WINDOWS>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("file.txt", "FILE.TXT");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2);

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("a\\b\\file.txt", "a/b/file.txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

        $z8 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("a/b/", "a/b");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8);

        return;
    }

    public void testEqualsNormalizedError_IO_128()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.NullPointerException $r1, $r2, $r3;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label01:
        staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("//file.txt", "file.txt");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Invalid normalized first file");

     label02:
        goto label04;

     label03:
        $r2 := @caughtexception;

     label04:
        staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("file.txt", "//file.txt");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Invalid normalized second file");

     label05:
        goto label07;

     label06:
        $r3 := @caughtexception;

     label07:
        staticinvoke <org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>("//file.txt", "//file.txt");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Invalid normalized both filse");

     label08:
        goto label10;

     label09:
        $r1 := @caughtexception;

     label10:
        return;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label07 to label08 with label09;
    }

    public void testEquals_fullControl()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        org.apache.commons.io.IOCase $r1, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean $r3, $r5;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $r1 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>("file.txt", "FILE.TXT", 1, $r1);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>("file.txt", "FILE.TXT", 1, $r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z2 = <org.apache.commons.io.FilenameUtilsTestCase: boolean WINDOWS>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r4 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>("file.txt", "FILE.TXT", 1, $r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>("file.txt", "FILE.TXT", 1, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4);

        return;
    }

    public void testIsExtension()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file", null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file.txt", "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file", "");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $z5 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file.txt", "txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("file.txt", "rtf");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6);

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a/b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7);

        $z8 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a/b/file.txt", "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8);

        $z9 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a/b/file.txt", "txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9);

        $z10 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a/b/file.txt", "rtf");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z10);

        $z11 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z11);

        $z12 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b/file.txt", "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z12);

        $z13 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b/file.txt", "txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13);

        $z14 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b/file.txt", "rtf");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z14);

        $z15 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a\\b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z15);

        $z16 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a\\b\\file.txt", "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z16);

        $z17 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a\\b\\file.txt", "txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17);

        $z18 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a\\b\\file.txt", "rtf");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z18);

        $z19 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z19);

        $z20 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\file.txt", "");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z20);

        $z21 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\file.txt", "txt");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21);

        $z22 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\file.txt", "rtf");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z22);

        $z23 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\file.txt", "TXT");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z23);

        return;
    }

    public void testIsExtension_injection()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

     label1:
        staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>("a.b\\fi\u0000le.txt", "TXT");

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw IAE");

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testIsExtensionArray()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        java.lang.String[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>(null, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file", null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r1 = newarray (java.lang.String)[0];

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file.txt", $r1);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "txt";

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file.txt", $r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "rtf";

        $z5 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file.txt", $r3);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "rtf";

        $r4[1] = "";

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file", $r4);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "rtf";

        $r5[1] = "txt";

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("file.txt", $r5);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

        $z8 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a/b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8);

        $r6 = newarray (java.lang.String)[0];

        $z9 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a/b/file.txt", $r6);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z9);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "txt";

        $z10 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a/b/file.txt", $r7);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10);

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "rtf";

        $z11 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a/b/file.txt", $r8);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z11);

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "rtf";

        $r9[1] = "txt";

        $z12 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a/b/file.txt", $r9);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12);

        $z13 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z13);

        $r10 = newarray (java.lang.String)[0];

        $z14 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b/file.txt", $r10);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z14);

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = "txt";

        $z15 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b/file.txt", $r11);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15);

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = "rtf";

        $z16 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b/file.txt", $r12);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z16);

        $r13 = newarray (java.lang.String)[2];

        $r13[0] = "rtf";

        $r13[1] = "txt";

        $z17 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b/file.txt", $r13);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17);

        $z18 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a\\b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z18);

        $r14 = newarray (java.lang.String)[0];

        $z19 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a\\b\\file.txt", $r14);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z19);

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "txt";

        $z20 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a\\b\\file.txt", $r15);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20);

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = "rtf";

        $z21 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a\\b\\file.txt", $r16);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z21);

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "rtf";

        $r17[1] = "txt";

        $z22 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a\\b\\file.txt", $r17);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22);

        $z23 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z23);

        $r18 = newarray (java.lang.String)[0];

        $z24 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r18);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z24);

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = "txt";

        $z25 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r19);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25);

        $r20 = newarray (java.lang.String)[1];

        $r20[0] = "rtf";

        $z26 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r20);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z26);

        $r21 = newarray (java.lang.String)[2];

        $r21[0] = "rtf";

        $r21[1] = "txt";

        $z27 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r21);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27);

        $r22 = newarray (java.lang.String)[1];

        $r22[0] = "TXT";

        $z28 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r22);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z28);

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "TXT";

        $r23[1] = "RTF";

        $z29 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>("a.b\\file.txt", $r23);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z29);

        return;
    }

    public void testIsExtensionCollection()
    {
        org.apache.commons.io.FilenameUtilsTestCase r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        java.util.ArrayList $r1, $r2, $r5, $r8, $r11, $r14, $r15, $r18, $r21, $r24, $r25, $r28, $r31, $r34, $r35, $r38, $r41, $r44, $r45, $r48, $r51, $r54, $r57;
        java.lang.String[] $r3, $r6, $r9, $r12, $r16, $r19, $r22, $r26, $r29, $r32, $r36, $r39, $r42, $r46, $r49, $r52, $r55, $r58;
        java.util.List $r4, $r7, $r10, $r13, $r17, $r20, $r23, $r27, $r30, $r33, $r37, $r40, $r43, $r47, $r50, $r53, $r56, $r59;

        r0 := @this: org.apache.commons.io.FilenameUtilsTestCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>(null, null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file", null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file.txt", $r1);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $r2 = new java.util.ArrayList;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "txt";

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file.txt", $r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r5 = new java.util.ArrayList;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "rtf";

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $z5 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file.txt", $r5);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        $r8 = new java.util.ArrayList;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "rtf";

        $r9[1] = "";

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        $z6 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file", $r8);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        $r11 = new java.util.ArrayList;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "rtf";

        $r12[1] = "txt";

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        $z7 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("file.txt", $r11);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

        $z8 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a/b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $z9 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a/b/file.txt", $r14);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z9);

        $r15 = new java.util.ArrayList;

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = "txt";

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r17);

        $z10 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a/b/file.txt", $r15);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10);

        $r18 = new java.util.ArrayList;

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = "rtf";

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r20);

        $z11 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a/b/file.txt", $r18);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z11);

        $r21 = new java.util.ArrayList;

        $r22 = newarray (java.lang.String)[2];

        $r22[0] = "rtf";

        $r22[1] = "txt";

        $r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);

        specialinvoke $r21.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);

        $z12 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a/b/file.txt", $r21);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12);

        $z13 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b/file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z13);

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $z14 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b/file.txt", $r24);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z14);

        $r25 = new java.util.ArrayList;

        $r26 = newarray (java.lang.String)[1];

        $r26[0] = "txt";

        $r27 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26);

        specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r27);

        $z15 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b/file.txt", $r25);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15);

        $r28 = new java.util.ArrayList;

        $r29 = newarray (java.lang.String)[1];

        $r29[0] = "rtf";

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r30);

        $z16 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b/file.txt", $r28);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z16);

        $r31 = new java.util.ArrayList;

        $r32 = newarray (java.lang.String)[2];

        $r32[0] = "rtf";

        $r32[1] = "txt";

        $r33 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32);

        specialinvoke $r31.<java.util.ArrayList: void <init>(java.util.Collection)>($r33);

        $z17 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b/file.txt", $r31);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17);

        $z18 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a\\b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z18);

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        $z19 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a\\b\\file.txt", $r34);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z19);

        $r35 = new java.util.ArrayList;

        $r36 = newarray (java.lang.String)[1];

        $r36[0] = "txt";

        $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r36);

        specialinvoke $r35.<java.util.ArrayList: void <init>(java.util.Collection)>($r37);

        $z20 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a\\b\\file.txt", $r35);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20);

        $r38 = new java.util.ArrayList;

        $r39 = newarray (java.lang.String)[1];

        $r39[0] = "rtf";

        $r40 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r39);

        specialinvoke $r38.<java.util.ArrayList: void <init>(java.util.Collection)>($r40);

        $z21 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a\\b\\file.txt", $r38);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z21);

        $r41 = new java.util.ArrayList;

        $r42 = newarray (java.lang.String)[2];

        $r42[0] = "rtf";

        $r42[1] = "txt";

        $r43 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r42);

        specialinvoke $r41.<java.util.ArrayList: void <init>(java.util.Collection)>($r43);

        $z22 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a\\b\\file.txt", $r41);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22);

        $z23 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z23);

        $r44 = new java.util.ArrayList;

        specialinvoke $r44.<java.util.ArrayList: void <init>()>();

        $z24 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r44);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z24);

        $r45 = new java.util.ArrayList;

        $r46 = newarray (java.lang.String)[1];

        $r46[0] = "txt";

        $r47 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r46);

        specialinvoke $r45.<java.util.ArrayList: void <init>(java.util.Collection)>($r47);

        $z25 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r45);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25);

        $r48 = new java.util.ArrayList;

        $r49 = newarray (java.lang.String)[1];

        $r49[0] = "rtf";

        $r50 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r49);

        specialinvoke $r48.<java.util.ArrayList: void <init>(java.util.Collection)>($r50);

        $z26 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r48);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z26);

        $r51 = new java.util.ArrayList;

        $r52 = newarray (java.lang.String)[2];

        $r52[0] = "rtf";

        $r52[1] = "txt";

        $r53 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r52);

        specialinvoke $r51.<java.util.ArrayList: void <init>(java.util.Collection)>($r53);

        $z27 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r51);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27);

        $r54 = new java.util.ArrayList;

        $r55 = newarray (java.lang.String)[1];

        $r55[0] = "TXT";

        $r56 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r55);

        specialinvoke $r54.<java.util.ArrayList: void <init>(java.util.Collection)>($r56);

        $z28 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r54);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z28);

        $r57 = new java.util.ArrayList;

        $r58 = newarray (java.lang.String)[2];

        $r58[0] = "TXT";

        $r58[1] = "RTF";

        $r59 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r58);

        specialinvoke $r57.<java.util.ArrayList: void <init>(java.util.Collection)>($r59);

        $z29 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>("a.b\\file.txt", $r57);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z29);

        return;
    }
}
