public class org.apache.commons.io.filefilter.AndFileFilterTestCase extends org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase
{
    private static final java.lang.String DEFAULT_WORKING_PATH;
    private static final java.lang.String WORKING_PATH_NAME_PROPERTY_KEY;
    private java.util.List testFilters;
    private java.util.List testTrueResults;
    private java.util.List testFalseResults;
    private java.util.List testFileResults;
    private java.util.List testFilenameResults;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r3, $r5;

        <org.apache.commons.io.filefilter.AndFileFilterTestCase: java.lang.String DEFAULT_WORKING_PATH> = "./AndFileFilterTestCase/";

        $r0 = new java.lang.StringBuilder;

        $r1 = class "org/apache/commons/io/filefilter/AndFileFilterTestCase";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".workingDirectory");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.commons.io.filefilter.AndFileFilterTestCase: java.lang.String WORKING_PATH_NAME_PROPERTY_KEY> = $r5;

        return;
    }

    public void <init>()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase: void <init>()>();

        return;
    }

    protected org.apache.commons.io.filefilter.IOFileFilter buildFilterUsingAdd(java.util.List)
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List r1;
        org.apache.commons.io.filefilter.IOFileFilter r3;
        java.util.Iterator r4;
        org.apache.commons.io.filefilter.AndFileFilter $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        r1 := @parameter0: java.util.List;

        $r5 = new org.apache.commons.io.filefilter.AndFileFilter;

        specialinvoke $r5.<org.apache.commons.io.filefilter.AndFileFilter: void <init>()>();

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.io.filefilter.IOFileFilter) $r6;

        virtualinvoke $r5.<org.apache.commons.io.filefilter.AndFileFilter: void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3);

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r5;
    }

    protected org.apache.commons.io.filefilter.IOFileFilter buildFilterUsingConstructor(java.util.List)
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List r1;
        org.apache.commons.io.filefilter.AndFileFilter $r2;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        r1 := @parameter0: java.util.List;

        $r2 = new org.apache.commons.io.filefilter.AndFileFilter;

        specialinvoke $r2.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(java.util.List)>(r1);

        return $r2;
    }

    protected org.apache.commons.io.filefilter.ConditionalFileFilter getConditionalFileFilter()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        org.apache.commons.io.filefilter.AndFileFilter $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = new org.apache.commons.io.filefilter.AndFileFilter;

        specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>()>();

        return $r1;
    }

    protected java.lang.String getDefaultWorkingPath()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        return "./AndFileFilterTestCase/";
    }

    protected java.util.List getFalseResults()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        return $r1;
    }

    protected java.util.List getFileResults()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        return $r1;
    }

    protected java.util.List getFilenameResults()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        return $r1;
    }

    protected java.util.List getTestFilters()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        return $r1;
    }

    protected java.util.List getTrueResults()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        return $r1;
    }

    protected java.lang.String getWorkingPathNamePropertyKey()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = <org.apache.commons.io.filefilter.AndFileFilterTestCase: java.lang.String WORKING_PATH_NAME_PROPERTY_KEY>;

        return $r1;
    }

    public void setUpTestFilters()
    {
        org.apache.commons.io.filefilter.AndFileFilterTestCase r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r11, $r26, $r47, $r69, $r91, $r112, $r134, $r155, $r173;
        java.util.List $r6, $r7, $r8, $r9, $r10, $r19, $r20, $r21, $r23, $r25, $r40, $r41, $r42, $r44, $r46, $r62, $r63, $r64, $r66, $r68, $r84, $r85, $r86, $r88, $r90, $r105, $r106, $r107, $r109, $r111, $r127, $r128, $r129, $r131, $r133, $r148, $r149, $r150, $r152, $r154, $r166, $r167, $r168, $r170, $r172, $r181, $r182, $r183, $r185, $r187;
        org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] $r12, $r14, $r16, $r29, $r31, $r33, $r48, $r52, $r54, $r70, $r72, $r76, $r94, $r100, $r102, $r113, $r119, $r121, $r139, $r143, $r145, $r156, $r158, $r160;
        org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter $r13, $r15, $r17, $r30, $r32, $r34, $r49, $r53, $r55, $r71, $r73, $r77, $r95, $r101, $r103, $r114, $r120, $r122, $r140, $r144, $r146, $r157, $r159, $r161;
        boolean[] $r18, $r39, $r60, $r61, $r82, $r83, $r104, $r125, $r126, $r147, $r164, $r165, $r180, r190, r192, r201, r207, r213;
        java.lang.Boolean $r22, $r24, $r43, $r45, $r65, $r67, $r87, $r89, $r108, $r110, $r130, $r132, $r151, $r153, $r169, $r171, $r184, $r186;
        org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] $r27, $r35, $r37, $r50, $r56, $r58, $r74, $r78, $r80, $r92, $r96, $r98, $r115, $r117, $r123, $r135, $r137, $r141, $r162, $r174, $r176, $r178;
        org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter $r28, $r36, $r38, $r51, $r57, $r59, $r75, $r79, $r81, $r93, $r97, $r99, $r116, $r118, $r124, $r136, $r138, $r142, $r163, $r175, $r177, $r179;

        r0 := @this: org.apache.commons.io.filefilter.AndFileFilterTestCase;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults> = $r5;

        $r6 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(0, null);

        $r7 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>(0, null);

        $r8 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, null);

        $r9 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(0, null);

        $r10 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(0, null);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r13 = $r12[1];

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r15 = $r14[2];

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r17 = $r16[3];

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = newarray (boolean)[3];

        $r18[0] = 1;

        $r18[1] = 1;

        $r18[2] = 1;

        r190 = newarray (boolean)[3];

        $r19 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r19.<java.util.List: void add(int,java.lang.Object)>(1, $r11);

        $r20 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r20.<java.util.List: void add(int,java.lang.Object)>(1, $r18);

        $r21 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r21.<java.util.List: void add(int,java.lang.Object)>(1, r190);

        $r23 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r22 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r23.<java.util.List: void add(int,java.lang.Object)>(1, $r22);

        $r25 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r24 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r25.<java.util.List: void add(int,java.lang.Object)>(1, $r24);

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        $r27 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r28 = $r27[1];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r30 = $r29[1];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r30);

        $r31 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r32 = $r31[2];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r33 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r34 = $r33[3];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r36 = $r35[2];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r37 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r38 = $r37[3];

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r38);

        r192 = newarray (boolean)[3];

        $r39 = newarray (boolean)[3];

        $r39[0] = 1;

        $r40 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r40.<java.util.List: void add(int,java.lang.Object)>(2, $r26);

        $r41 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r41.<java.util.List: void add(int,java.lang.Object)>(2, r192);

        $r42 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r42.<java.util.List: void add(int,java.lang.Object)>(2, $r39);

        $r44 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r43 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r44.<java.util.List: void add(int,java.lang.Object)>(2, $r43);

        $r46 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r45 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r46.<java.util.List: void add(int,java.lang.Object)>(2, $r45);

        $r47 = new java.util.ArrayList;

        specialinvoke $r47.<java.util.ArrayList: void <init>()>();

        $r48 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r49 = $r48[1];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r50 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r51 = $r50[1];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r51);

        $r52 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r53 = $r52[2];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r53);

        $r54 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r55 = $r54[3];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r55);

        $r56 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r57 = $r56[2];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r57);

        $r58 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r59 = $r58[3];

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r59);

        $r60 = newarray (boolean)[3];

        $r60[0] = 1;

        $r61 = newarray (boolean)[3];

        $r61[0] = 1;

        $r62 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r62.<java.util.List: void add(int,java.lang.Object)>(3, $r47);

        $r63 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r63.<java.util.List: void add(int,java.lang.Object)>(3, $r60);

        $r64 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r64.<java.util.List: void add(int,java.lang.Object)>(3, $r61);

        $r66 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r65 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r66.<java.util.List: void add(int,java.lang.Object)>(3, $r65);

        $r68 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r67 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r68.<java.util.List: void add(int,java.lang.Object)>(3, $r67);

        $r69 = new java.util.ArrayList;

        specialinvoke $r69.<java.util.ArrayList: void <init>()>();

        $r70 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r71 = $r70[1];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r71);

        $r72 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r73 = $r72[2];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r73);

        $r74 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r75 = $r74[1];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r75);

        $r76 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r77 = $r76[3];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r77);

        $r78 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r79 = $r78[2];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r79);

        $r80 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r81 = $r80[3];

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r81);

        $r82 = newarray (boolean)[3];

        $r82[0] = 1;

        $r82[1] = 1;

        $r83 = newarray (boolean)[3];

        $r83[0] = 1;

        $r84 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r84.<java.util.List: void add(int,java.lang.Object)>(4, $r69);

        $r85 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r85.<java.util.List: void add(int,java.lang.Object)>(4, $r82);

        $r86 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r86.<java.util.List: void add(int,java.lang.Object)>(4, $r83);

        $r88 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r87 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r88.<java.util.List: void add(int,java.lang.Object)>(4, $r87);

        $r90 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r89 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r90.<java.util.List: void add(int,java.lang.Object)>(4, $r89);

        $r91 = new java.util.ArrayList;

        specialinvoke $r91.<java.util.ArrayList: void <init>()>();

        $r92 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r93 = $r92[1];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r93);

        $r94 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r95 = $r94[1];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r95);

        $r96 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r97 = $r96[2];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r97);

        $r98 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r99 = $r98[3];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r99);

        $r100 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r101 = $r100[2];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r101);

        $r102 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r103 = $r102[3];

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r103);

        r201 = newarray (boolean)[3];

        $r104 = newarray (boolean)[3];

        $r104[0] = 1;

        $r105 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r105.<java.util.List: void add(int,java.lang.Object)>(5, $r91);

        $r106 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r106.<java.util.List: void add(int,java.lang.Object)>(5, r201);

        $r107 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r107.<java.util.List: void add(int,java.lang.Object)>(5, $r104);

        $r109 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r108 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r109.<java.util.List: void add(int,java.lang.Object)>(5, $r108);

        $r111 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r110 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r111.<java.util.List: void add(int,java.lang.Object)>(5, $r110);

        $r112 = new java.util.ArrayList;

        specialinvoke $r112.<java.util.ArrayList: void <init>()>();

        $r113 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r114 = $r113[1];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r114);

        $r115 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r116 = $r115[1];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r116);

        $r117 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r118 = $r117[2];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r118);

        $r119 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r120 = $r119[2];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r120);

        $r121 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r122 = $r121[3];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r122);

        $r123 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r124 = $r123[3];

        interfaceinvoke $r112.<java.util.List: boolean add(java.lang.Object)>($r124);

        $r125 = newarray (boolean)[3];

        $r125[0] = 1;

        $r126 = newarray (boolean)[3];

        $r126[0] = 1;

        $r127 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r127.<java.util.List: void add(int,java.lang.Object)>(6, $r112);

        $r128 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r128.<java.util.List: void add(int,java.lang.Object)>(6, $r125);

        $r129 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r129.<java.util.List: void add(int,java.lang.Object)>(6, $r126);

        $r131 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r130 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r131.<java.util.List: void add(int,java.lang.Object)>(6, $r130);

        $r133 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r132 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r133.<java.util.List: void add(int,java.lang.Object)>(6, $r132);

        $r134 = new java.util.ArrayList;

        specialinvoke $r134.<java.util.ArrayList: void <init>()>();

        $r135 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r136 = $r135[1];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r136);

        $r137 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r138 = $r137[2];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r138);

        $r139 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r140 = $r139[3];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r140);

        $r141 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r142 = $r141[3];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r142);

        $r143 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r144 = $r143[2];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r144);

        $r145 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r146 = $r145[3];

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r146);

        r207 = newarray (boolean)[3];

        $r147 = newarray (boolean)[3];

        $r147[0] = 1;

        $r148 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r148.<java.util.List: void add(int,java.lang.Object)>(7, $r134);

        $r149 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r149.<java.util.List: void add(int,java.lang.Object)>(7, r207);

        $r150 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r150.<java.util.List: void add(int,java.lang.Object)>(7, $r147);

        $r152 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r151 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r152.<java.util.List: void add(int,java.lang.Object)>(7, $r151);

        $r154 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r153 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r154.<java.util.List: void add(int,java.lang.Object)>(7, $r153);

        $r155 = new java.util.ArrayList;

        specialinvoke $r155.<java.util.ArrayList: void <init>()>();

        $r156 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r157 = $r156[1];

        interfaceinvoke $r155.<java.util.List: boolean add(java.lang.Object)>($r157);

        $r158 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r159 = $r158[2];

        interfaceinvoke $r155.<java.util.List: boolean add(java.lang.Object)>($r159);

        $r160 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[] trueFilters>;

        $r161 = $r160[3];

        interfaceinvoke $r155.<java.util.List: boolean add(java.lang.Object)>($r161);

        $r162 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r163 = $r162[1];

        interfaceinvoke $r155.<java.util.List: boolean add(java.lang.Object)>($r163);

        $r164 = newarray (boolean)[3];

        $r164[0] = 1;

        $r164[1] = 1;

        $r164[2] = 1;

        $r165 = newarray (boolean)[3];

        $r165[0] = 1;

        $r166 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r166.<java.util.List: void add(int,java.lang.Object)>(8, $r155);

        $r167 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r167.<java.util.List: void add(int,java.lang.Object)>(8, $r164);

        $r168 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r168.<java.util.List: void add(int,java.lang.Object)>(8, $r165);

        $r170 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r169 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r170.<java.util.List: void add(int,java.lang.Object)>(8, $r169);

        $r172 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r171 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r172.<java.util.List: void add(int,java.lang.Object)>(8, $r171);

        $r173 = new java.util.ArrayList;

        specialinvoke $r173.<java.util.ArrayList: void <init>()>();

        $r174 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r175 = $r174[1];

        interfaceinvoke $r173.<java.util.List: boolean add(java.lang.Object)>($r175);

        $r176 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r177 = $r176[2];

        interfaceinvoke $r173.<java.util.List: boolean add(java.lang.Object)>($r177);

        $r178 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[] falseFilters>;

        $r179 = $r178[3];

        interfaceinvoke $r173.<java.util.List: boolean add(java.lang.Object)>($r179);

        r213 = newarray (boolean)[3];

        $r180 = newarray (boolean)[3];

        $r180[0] = 1;

        $r181 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilters>;

        interfaceinvoke $r181.<java.util.List: void add(int,java.lang.Object)>(9, $r173);

        $r182 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testTrueResults>;

        interfaceinvoke $r182.<java.util.List: void add(int,java.lang.Object)>(9, r213);

        $r183 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFalseResults>;

        interfaceinvoke $r183.<java.util.List: void add(int,java.lang.Object)>(9, $r180);

        $r185 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFileResults>;

        $r184 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r185.<java.util.List: void add(int,java.lang.Object)>(9, $r184);

        $r187 = r0.<org.apache.commons.io.filefilter.AndFileFilterTestCase: java.util.List testFilenameResults>;

        $r186 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r187.<java.util.List: void add(int,java.lang.Object)>(9, $r186);

        return;
    }
}
