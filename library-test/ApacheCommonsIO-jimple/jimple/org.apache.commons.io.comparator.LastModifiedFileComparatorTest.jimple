public class org.apache.commons.io.comparator.LastModifiedFileComparatorTest extends org.apache.commons.io.comparator.ComparatorAbstractTestCase
{

    public void <init>()
    {
        org.apache.commons.io.comparator.LastModifiedFileComparatorTest r0;

        r0 := @this: org.apache.commons.io.comparator.LastModifiedFileComparatorTest;

        specialinvoke r0.<org.apache.commons.io.comparator.ComparatorAbstractTestCase: void <init>()>();

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.io.comparator.LastModifiedFileComparatorTest r0;
        java.io.File r1, $r10, $r11, $r14, $r15, $r18, $r19;
        java.util.Comparator $r7, $r9;
        org.apache.commons.io.comparator.AbstractFileComparator $r8;
        boolean $z0, $z1, $z3;
        java.io.BufferedOutputStream $r12, $r16, $r20;
        java.io.FileOutputStream $r13, $r17, $r21;
        long $l0, $l1, $l2, $l4, $l5, $l6;
        byte $b3, $b7;
        java.io.IOException $r22, $r27, $r32;
        java.lang.StringBuilder $r23, $r24, $r25, $r28, $r29, $r30, $r33, $r34, $r35;
        java.lang.String $r26, $r31, $r36;
        java.lang.Throwable $r37, $r38, $r39;

        r0 := @this: org.apache.commons.io.comparator.LastModifiedFileComparatorTest;

        $r7 = <org.apache.commons.io.comparator.LastModifiedFileComparator: java.util.Comparator LASTMODIFIED_COMPARATOR>;

        $r8 = (org.apache.commons.io.comparator.AbstractFileComparator) $r7;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: org.apache.commons.io.comparator.AbstractFileComparator comparator> = $r8;

        $r9 = <org.apache.commons.io.comparator.LastModifiedFileComparator: java.util.Comparator LASTMODIFIED_REVERSE>;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.util.Comparator reverse> = $r9;

        r1 = staticinvoke <org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.io.File getTestDirectory()>();

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "older.txt");

        $r11 = virtualinvoke $r10.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $r32 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r32;

     label01:
        $r12 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r10);

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r13);

     label02:
        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r12, 0L);

        goto label04;

     label03:
        $r39 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r12);

        throw $r39;

     label04:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r12);

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "equal.txt");

        $r15 = virtualinvoke $r14.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke $r15.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        $r27 = new java.io.IOException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label05:
        $r16 = new java.io.BufferedOutputStream;

        $r17 = new java.io.FileOutputStream;

        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r14);

        specialinvoke $r16.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r17);

     label06:
        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r16, 0L);

        goto label08;

     label07:
        $r38 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r16);

        throw $r38;

     label08:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r16);

     label09:
        staticinvoke <org.apache.commons.io.testtools.TestUtils: void sleepQuietly(long)>(300L);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r14.<java.io.File: boolean setLastModified(long)>($l0);

        $l1 = virtualinvoke $r10.<java.io.File: long lastModified()>();

        $l2 = virtualinvoke $r14.<java.io.File: long lastModified()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label09;

        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "newer.txt");

        $r19 = virtualinvoke $r18.<java.io.File: java.io.File getParentFile()>();

        $z3 = virtualinvoke $r19.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label10;

        $r22 = new java.io.IOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create file ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the parent directory does not exist");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label10:
        $r20 = new java.io.BufferedOutputStream;

        $r21 = new java.io.FileOutputStream;

        specialinvoke $r21.<java.io.FileOutputStream: void <init>(java.io.File)>($r18);

        specialinvoke $r20.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r21);

     label11:
        staticinvoke <org.apache.commons.io.testtools.TestUtils: void generateTestData(java.io.OutputStream,long)>($r20, 0L);

        goto label13;

     label12:
        $r37 := @caughtexception;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r20);

        throw $r37;

     label13:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r20);

     label14:
        staticinvoke <org.apache.commons.io.testtools.TestUtils: void sleepQuietly(long)>(300L);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r18.<java.io.File: boolean setLastModified(long)>($l4);

        $l5 = virtualinvoke $r14.<java.io.File: long lastModified()>();

        $l6 = virtualinvoke $r18.<java.io.File: long lastModified()>();

        $b7 = $l5 cmp $l6;

        if $b7 == 0 goto label14;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.io.File equalFile1> = $r14;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.io.File equalFile2> = $r14;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.io.File lessFile> = $r10;

        r0.<org.apache.commons.io.comparator.LastModifiedFileComparatorTest: java.io.File moreFile> = $r18;

        return;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label11 to label12 with label12;
    }
}
