public abstract class org.apache.commons.io.monitor.AbstractMonitorTestCase extends java.lang.Object
{
    protected org.apache.commons.io.monitor.FileAlterationObserver observer;
    protected org.apache.commons.io.monitor.CollectionFileListener listener;
    protected java.lang.String testDirName;
    protected java.io.File testDir;
    protected long pauseTime;

    public void <init>()
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.lang.String testDirName> = null;

        r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: long pauseTime> = 100L;

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        org.apache.commons.io.filefilter.IOFileFilter r1, r2, r3, r4, r5, r6, r7;
        java.io.File $r8, $r9, $r11, $r12, $r16, $r17;
        java.lang.String $r10;
        boolean $z0;
        org.apache.commons.io.filefilter.IOFileFilter[] $r13, $r14, $r15;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        $r8 = new java.io.File;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(".");

        $r10 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.lang.String testDirName>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r10);

        r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir> = $r8;

        $r11 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir>;

        staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>($r17);

        goto label2;

     label1:
        $r12 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir>;

        virtualinvoke $r12.<java.io.File: boolean mkdir()>();

     label2:
        r1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter fileFileFilter()>();

        r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String)>(".java");

        $r13 = newarray (org.apache.commons.io.filefilter.IOFileFilter)[2];

        $r13[0] = r1;

        $r13[1] = r2;

        r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r13);

        r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter()>();

        r5 = <org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter VISIBLE>;

        $r14 = newarray (org.apache.commons.io.filefilter.IOFileFilter)[2];

        $r14[0] = r4;

        $r14[1] = r5;

        r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r14);

        $r15 = newarray (org.apache.commons.io.filefilter.IOFileFilter)[2];

        $r15[0] = r6;

        $r15[1] = r3;

        r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r15);

        $r16 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir>;

        virtualinvoke r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: void createObserver(java.io.File,java.io.FileFilter)>($r16, r7);

        return;
    }

    protected void createObserver(java.io.File, java.io.FileFilter)
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        java.io.File r1;
        java.io.FileFilter r2;
        org.apache.commons.io.monitor.FileAlterationObserver $r4, $r6, $r8, $r9;
        org.apache.commons.io.monitor.CollectionFileListener $r5;
        org.apache.commons.io.monitor.FileAlterationListenerAdaptor $r7;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, $r12;
        java.lang.String $r13;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.FileFilter;

        $r4 = new org.apache.commons.io.monitor.FileAlterationObserver;

        specialinvoke $r4.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, r2);

        r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.FileAlterationObserver observer> = $r4;

        $r6 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.FileAlterationObserver observer>;

        $r5 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        virtualinvoke $r6.<org.apache.commons.io.monitor.FileAlterationObserver: void addListener(org.apache.commons.io.monitor.FileAlterationListener)>($r5);

        $r8 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.FileAlterationObserver observer>;

        $r7 = new org.apache.commons.io.monitor.FileAlterationListenerAdaptor;

        specialinvoke $r7.<org.apache.commons.io.monitor.FileAlterationListenerAdaptor: void <init>()>();

        virtualinvoke $r8.<org.apache.commons.io.monitor.FileAlterationObserver: void addListener(org.apache.commons.io.monitor.FileAlterationListener)>($r7);

     label1:
        $r9 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.FileAlterationObserver observer>;

        virtualinvoke $r9.<org.apache.commons.io.monitor.FileAlterationObserver: void initialize()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Observer init() threw ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r13);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void tearDown() throws java.lang.Exception
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        java.io.File $r1;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        $r1 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: java.io.File testDir>;

        staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r1);

        return;
    }

    protected void checkCollectionsEmpty(java.lang.String)
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        java.lang.String r1, $r4;
        java.lang.StringBuilder $r2, $r3;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("EMPTY-");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: void checkCollectionSizes(java.lang.String,int,int,int,int,int,int)>($r4, 0, 0, 0, 0, 0, 0);

        return;
    }

    protected void checkCollectionSizes(java.lang.String, int, int, int, int, int, int)
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i16, $i19, $i22, $i25, $i28;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r10, $r11, $r14, $r15, $r18, $r19, $r22, $r23, $r26, $r27, $r28, $r30, $r34, $r36, $r40, $r42, $r46, $r48, $r52, $r54, $r58, $r60;
        java.lang.String $r2, $r29, $r31, $r35, $r37, $r41, $r43, $r47, $r49, $r53, $r55, $r59, $r61, r64, r65;
        org.apache.commons.io.monitor.CollectionFileListener $r4, $r8, $r12, $r16, $r20, $r24, $r32, $r38, $r44, $r50, $r56, $r62;
        java.util.Collection $r5, $r9, $r13, $r17, $r21, $r25, $r33, $r39, $r45, $r51, $r57, $r63;
        long $l12, $l14, $l15, $l17, $l18, $l20, $l21, $l23, $l24, $l26, $l27, $l29;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        r64 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r64);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r5 = virtualinvoke $r4.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getCreatedDirectories()>();

        $i6 = interfaceinvoke $r5.<java.util.Collection: int size()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r9 = virtualinvoke $r8.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getChangedDirectories()>();

        $i7 = interfaceinvoke $r9.<java.util.Collection: int size()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r13 = virtualinvoke $r12.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getDeletedDirectories()>();

        $i8 = interfaceinvoke $r13.<java.util.Collection: int size()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r17 = virtualinvoke $r16.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getCreatedFiles()>();

        $i9 = interfaceinvoke $r17.<java.util.Collection: int size()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r21 = virtualinvoke $r20.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getChangedFiles()>();

        $i10 = interfaceinvoke $r21.<java.util.Collection: int size()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r24 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r25 = virtualinvoke $r24.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getDeletedFiles()>();

        $i11 = interfaceinvoke $r25.<java.util.Collection: int size()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r65 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.StringBuilder;

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>($r29);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of directories created");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $l12 = (long) i0;

        $r32 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r33 = virtualinvoke $r32.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getCreatedDirectories()>();

        $i13 = interfaceinvoke $r33.<java.util.Collection: int size()>();

        $l14 = (long) $i13;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r31, $l12, $l14);

        $r34 = new java.lang.StringBuilder;

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>($r35);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of directories changed");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $l15 = (long) i1;

        $r38 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r39 = virtualinvoke $r38.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getChangedDirectories()>();

        $i16 = interfaceinvoke $r39.<java.util.Collection: int size()>();

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r37, $l15, $l17);

        $r40 = new java.lang.StringBuilder;

        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>($r41);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of directories deleted");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $l18 = (long) i2;

        $r44 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r45 = virtualinvoke $r44.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getDeletedDirectories()>();

        $i19 = interfaceinvoke $r45.<java.util.Collection: int size()>();

        $l20 = (long) $i19;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r43, $l18, $l20);

        $r46 = new java.lang.StringBuilder;

        $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>($r47);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of files created");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $l21 = (long) i3;

        $r50 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r51 = virtualinvoke $r50.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getCreatedFiles()>();

        $i22 = interfaceinvoke $r51.<java.util.Collection: int size()>();

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r49, $l21, $l23);

        $r52 = new java.lang.StringBuilder;

        $r53 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>($r53);

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of files changed");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $l24 = (long) i4;

        $r56 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r57 = virtualinvoke $r56.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getChangedFiles()>();

        $i25 = interfaceinvoke $r57.<java.util.Collection: int size()>();

        $l26 = (long) $i25;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r55, $l24, $l26);

        $r58 = new java.lang.StringBuilder;

        $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>($r59);

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No. of files deleted");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        $l27 = (long) i5;

        $r62 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: org.apache.commons.io.monitor.CollectionFileListener listener>;

        $r63 = virtualinvoke $r62.<org.apache.commons.io.monitor.CollectionFileListener: java.util.Collection getDeletedFiles()>();

        $i28 = interfaceinvoke $r63.<java.util.Collection: int size()>();

        $l29 = (long) $i28;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>($r61, $l27, $l29);

        return;
    }

    protected java.io.File touch(java.io.File)
    {
        org.apache.commons.io.monitor.AbstractMonitorTestCase r0;
        long l0, $l1, $l3, $l4, $l5;
        boolean $z0;
        java.io.File $r2, $r5, r14;
        java.lang.String $r3, $r4, $r6, $r7, $r13;
        byte $b2;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.commons.io.monitor.AbstractMonitorTestCase;

        r14 := @parameter0: java.io.File;

        $z0 = virtualinvoke r14.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $l5 = virtualinvoke r14.<java.io.File: long lastModified()>();

        goto label2;

     label1:
        $l5 = 0L;

     label2:
        l0 = $l5;

     label3:
        staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>(r14);

        $r2 = new java.io.File;

        $r3 = virtualinvoke r14.<java.io.File: java.lang.String getParent()>();

        $r4 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        r14 = $r2;

        goto label5;

     label4:
        $l3 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: long pauseTime>;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void sleepQuietly(long)>($l3);

        staticinvoke <org.apache.commons.io.FileUtils: void touch(java.io.File)>(r14);

        $r5 = new java.io.File;

        $r6 = virtualinvoke r14.<java.io.File: java.lang.String getParent()>();

        $r7 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r6, $r7);

        r14 = $r5;

     label5:
        $l1 = virtualinvoke r14.<java.io.File: long lastModified()>();

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label4;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Touching ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r13);

     label8:
        $l4 = r0.<org.apache.commons.io.monitor.AbstractMonitorTestCase: long pauseTime>;

        staticinvoke <org.apache.commons.io.testtools.TestUtils: void sleepQuietly(long)>($l4);

        return r14;

        catch java.lang.Exception from label3 to label6 with label7;
    }
}
