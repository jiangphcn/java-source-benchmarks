class org.apache.commons.io.comparator.ReverseComparator extends org.apache.commons.io.comparator.AbstractFileComparator implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Comparator delegate;

    public void <init>(java.util.Comparator)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.util.Comparator r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Delegate comparator is missing");

        throw $r2;

     label1:
        r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate> = r1;

        return;
    }

    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.io.File r1, r2;
        java.util.Comparator $r3;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        $r3 = r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate>;

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.lang.StringBuilder $r1, $r4, $r7, $r8;
        java.lang.String $r2, $r3, $r6, $r9;
        java.util.Comparator $r5;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        $r1 = new java.lang.StringBuilder;

        $r2 = specialinvoke r0.<org.apache.commons.io.comparator.AbstractFileComparator: java.lang.String toString()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<org.apache.commons.io.comparator.ReverseComparator: java.util.Comparator delegate>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.ReverseComparator r0;
        java.lang.Object r1, r2;
        java.io.File $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.ReverseComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) r1;

        $r3 = (java.io.File) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ReverseComparator: int compare(java.io.File,java.io.File)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.io.comparator.ReverseComparator: long serialVersionUID> = -4808255005272229056L;

        return;
    }
}
