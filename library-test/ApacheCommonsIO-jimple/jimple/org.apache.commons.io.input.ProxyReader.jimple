public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader
{

    public void <init>(java.io.Reader)
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader r1;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.FilterReader: void <init>(java.io.Reader)>(r1);

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader $r1;
        java.io.IOException $r3;
        int i1;
        byte $b2;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

     label1:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void beforeRead(int)>(1);

        $r1 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        if i1 == -1 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = -1;

     label3:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void afterRead(int)>($b2);

     label4:
        return i1;

     label5:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

        return -1;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public int read(char[]) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        char[] r1;
        java.io.Reader $r2;
        java.io.IOException $r4;
        int $i1, i2;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        r1 := @parameter0: char[];

     label1:
        if r1 == null goto label2;

        $i1 = lengthof r1;

        goto label3;

     label2:
        $i1 = 0;

     label3:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void beforeRead(int)>($i1);

        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        i2 = virtualinvoke $r2.<java.io.Reader: int read(char[])>(r1);

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void afterRead(int)>(i2);

     label4:
        return i2;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r4);

        return -1;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        char[] r1;
        int i0, i1, i2;
        java.io.Reader $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void beforeRead(int)>(i1);

        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        i2 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void afterRead(int)>(i2);

     label2:
        return i2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

        return -1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int read(java.nio.CharBuffer) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.nio.CharBuffer r1;
        java.io.Reader $r2;
        java.io.IOException $r4;
        int $i1, i2;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        r1 := @parameter0: java.nio.CharBuffer;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<java.nio.CharBuffer: int length()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void beforeRead(int)>($i1);

        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        i2 = virtualinvoke $r2.<java.io.Reader: int read(java.nio.CharBuffer)>(r1);

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void afterRead(int)>(i2);

     label4:
        return i2;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r4);

        return -1;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        long l0, $l1;
        java.io.Reader $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        $l1 = virtualinvoke $r2.<java.io.Reader: long skip(long)>(l0);

     label2:
        return $l1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

        return 0L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader $r2;
        boolean $z0;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        $z0 = virtualinvoke $r2.<java.io.Reader: boolean ready()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public synchronized void mark(int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        int i0;
        java.io.Reader $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        virtualinvoke $r2.<java.io.Reader: void mark(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public synchronized void reset() throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

     label1:
        $r2 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        virtualinvoke $r2.<java.io.Reader: void reset()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.io.input.ProxyReader: void handleIOException(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean markSupported()
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.Reader $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        $r1 = r0.<org.apache.commons.io.input.ProxyReader: java.io.Reader in>;

        $z0 = virtualinvoke $r1.<java.io.Reader: boolean markSupported()>();

        return $z0;
    }

    protected void beforeRead(int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        int i0;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        i0 := @parameter0: int;

        return;
    }

    protected void afterRead(int) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        int i0;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        i0 := @parameter0: int;

        return;
    }

    protected void handleIOException(java.io.IOException) throws java.io.IOException
    {
        org.apache.commons.io.input.ProxyReader r0;
        java.io.IOException r1;

        r0 := @this: org.apache.commons.io.input.ProxyReader;

        r1 := @parameter0: java.io.IOException;

        throw r1;
    }
}
