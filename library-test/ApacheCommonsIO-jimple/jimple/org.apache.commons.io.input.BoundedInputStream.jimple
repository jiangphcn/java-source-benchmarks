public class org.apache.commons.io.input.BoundedInputStream extends java.io.InputStream
{
    private final java.io.InputStream in;
    private final long max;
    private long pos;
    private long mark;
    private boolean propagateClose;

    public void <init>(java.io.InputStream, long)
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        java.io.InputStream r1;
        long l0;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.io.input.BoundedInputStream: long pos> = 0L;

        r0.<org.apache.commons.io.input.BoundedInputStream: long mark> = -1L;

        r0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose> = 1;

        r0.<org.apache.commons.io.input.BoundedInputStream: long max> = l0;

        r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in> = r1;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.commons.io.input.BoundedInputStream: void <init>(java.io.InputStream,long)>(r1, -1L);

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        int i0;
        long $l1, $l3, $l4, $l5, $l6;
        byte $b2, $b7;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $l1 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        $l6 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l5 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b7 = $l6 cmp $l5;

        if $b7 < 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $l3 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l4 = $l3 + 1L;

        r0.<org.apache.commons.io.input.BoundedInputStream: long pos> = $l4;

        return i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.io.input.BoundedInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        byte[] r1;
        int i0, i1, i3, $i8;
        long $l4, $l6, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l19;
        byte $b5, $b7, $b18;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l4 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label1;

        $l17 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l16 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b18 = $l17 cmp $l16;

        if $b18 < 0 goto label1;

        return -1;

     label1:
        $l6 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b7 = $l6 cmp 0L;

        if $b7 < 0 goto label2;

        $l15 = (long) i1;

        $l13 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $l12 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l14 = $l13 - $l12;

        $l19 = staticinvoke <java.lang.Math: long min(long,long)>($l15, $l14);

        goto label3;

     label2:
        $l19 = (long) i1;

     label3:
        $r2 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        $i8 = (int) $l19;

        i3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, $i8);

        if i3 != -1 goto label4;

        return -1;

     label4:
        $l10 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l9 = (long) i3;

        $l11 = $l10 + $l9;

        r0.<org.apache.commons.io.input.BoundedInputStream: long pos> = $l11;

        return i3;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        long l0, l2, $l3, $l5, $l6, $l7, $l8, $l9, $l10;
        byte $b4;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        l0 := @parameter0: long;

        $l3 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label1;

        $l8 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $l7 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l9 = $l8 - $l7;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l9);

        goto label2;

     label1:
        $l10 = l0;

     label2:
        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        l2 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l10);

        $l5 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l6 = $l5 + l2;

        r0.<org.apache.commons.io.input.BoundedInputStream: long pos> = $l6;

        return l2;
    }

    public int available() throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        long $l0, $l3, $l4;
        byte $b1, $b5;
        java.io.InputStream $r1;
        int $i2;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $l0 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        $l4 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        $l3 = r0.<org.apache.commons.io.input.BoundedInputStream: long max>;

        $b5 = $l4 cmp $l3;

        if $b5 < 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $z0 = r0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label1:
        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        java.io.InputStream $r1;
        long $l0;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        $l0 = r0.<org.apache.commons.io.input.BoundedInputStream: long mark>;

        r0.<org.apache.commons.io.input.BoundedInputStream: long pos> = $l0;

        return;
    }

    public synchronized void mark(int)
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        int i0;
        java.io.InputStream $r1;
        long $l1;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i0);

        $l1 = r0.<org.apache.commons.io.input.BoundedInputStream: long pos>;

        r0.<org.apache.commons.io.input.BoundedInputStream: long mark> = $l1;

        return;
    }

    public boolean markSupported()
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $r1 = r0.<org.apache.commons.io.input.BoundedInputStream: java.io.InputStream in>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public boolean isPropagateClose()
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        $z0 = r0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose>;

        return $z0;
    }

    public void setPropagateClose(boolean)
    {
        org.apache.commons.io.input.BoundedInputStream r0;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.BoundedInputStream;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.io.input.BoundedInputStream: boolean propagateClose> = z0;

        return;
    }
}
