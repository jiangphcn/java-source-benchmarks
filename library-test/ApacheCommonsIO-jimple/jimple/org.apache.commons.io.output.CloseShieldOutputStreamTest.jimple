public class org.apache.commons.io.output.CloseShieldOutputStreamTest extends java.lang.Object
{
    private org.apache.commons.io.output.ByteArrayOutputStream original;
    private java.io.OutputStream shielded;
    private boolean closed;

    public void <init>()
    {
        org.apache.commons.io.output.CloseShieldOutputStreamTest r0;

        r0 := @this: org.apache.commons.io.output.CloseShieldOutputStreamTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setUp()
    {
        org.apache.commons.io.output.CloseShieldOutputStreamTest r0;
        org.apache.commons.io.output.CloseShieldOutputStreamTest$1 $r1;
        org.apache.commons.io.output.CloseShieldOutputStream $r2;
        org.apache.commons.io.output.ByteArrayOutputStream $r3;

        r0 := @this: org.apache.commons.io.output.CloseShieldOutputStreamTest;

        $r1 = new org.apache.commons.io.output.CloseShieldOutputStreamTest$1;

        specialinvoke $r1.<org.apache.commons.io.output.CloseShieldOutputStreamTest$1: void <init>(org.apache.commons.io.output.CloseShieldOutputStreamTest)>(r0);

        r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: org.apache.commons.io.output.ByteArrayOutputStream original> = $r1;

        $r2 = new org.apache.commons.io.output.CloseShieldOutputStream;

        $r3 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: org.apache.commons.io.output.ByteArrayOutputStream original>;

        specialinvoke $r2.<org.apache.commons.io.output.CloseShieldOutputStream: void <init>(java.io.OutputStream)>($r3);

        r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: java.io.OutputStream shielded> = $r2;

        r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: boolean closed> = 0;

        return;
    }

    public void testClose() throws java.io.IOException
    {
        org.apache.commons.io.output.CloseShieldOutputStreamTest r0;
        java.io.OutputStream $r2, $r3;
        boolean $z0;
        org.apache.commons.io.output.ByteArrayOutputStream $r4, $r5, $r6;
        int $i0;
        long $l1, $l3;
        byte[] $r7;
        byte $b2;
        java.io.IOException $r8;

        r0 := @this: org.apache.commons.io.output.CloseShieldOutputStreamTest;

        $r2 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: java.io.OutputStream shielded>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        $z0 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: boolean closed>;

        staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("closed", $z0);

     label1:
        $r3 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: java.io.OutputStream shielded>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(120);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("write(b)");

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: org.apache.commons.io.output.ByteArrayOutputStream original>;

        virtualinvoke $r4.<org.apache.commons.io.output.ByteArrayOutputStream: void write(int)>(121);

        $r5 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: org.apache.commons.io.output.ByteArrayOutputStream original>;

        $i0 = virtualinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1);

        $r6 = r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: org.apache.commons.io.output.ByteArrayOutputStream original>;

        $r7 = virtualinvoke $r6.<org.apache.commons.io.output.ByteArrayOutputStream: byte[] toByteArray()>();

        $b2 = $r7[0];

        $l3 = (long) $b2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(121L, $l3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void access$0(org.apache.commons.io.output.CloseShieldOutputStreamTest, boolean)
    {
        org.apache.commons.io.output.CloseShieldOutputStreamTest r0;
        boolean z0;

        r0 := @parameter0: org.apache.commons.io.output.CloseShieldOutputStreamTest;

        z0 := @parameter1: boolean;

        r0.<org.apache.commons.io.output.CloseShieldOutputStreamTest: boolean closed> = z0;

        return;
    }
}
