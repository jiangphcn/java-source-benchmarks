public class org.apache.commons.logging.impl.Jdk13LumberjackLogger extends java.lang.Object implements org.apache.commons.logging.Log, java.io.Serializable
{
    private static final long serialVersionUID;
    protected transient java.util.logging.Logger logger;
    protected java.lang.String name;
    private java.lang.String sourceClassName;
    private java.lang.String sourceMethodName;
    private boolean classAndMethodFound;
    protected static final java.util.logging.Level dummyLevel;

    static void <clinit>()
    {
        java.util.logging.Level $r0;

        <org.apache.commons.logging.impl.Jdk13LumberjackLogger: long serialVersionUID> = -8649807923527610591L;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        <org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Level dummyLevel> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.String r1;
        java.util.logging.Logger $r2;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger logger> = null;

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String name> = null;

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceClassName> = "unknown";

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceMethodName> = "unknown";

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: boolean classAndMethodFound> = 0;

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String name> = r1;

        $r2 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger logger> = $r2;

        return;
    }

    private void log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Level r1;
        java.lang.String r2, $r7, $r8;
        java.lang.Throwable r3;
        java.util.logging.Logger $r5, $r9;
        boolean $z0, $z1;
        java.util.logging.LogRecord $r6;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.util.logging.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $z0 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(r1);

        if $z0 == 0 goto label3;

        $r6 = new java.util.logging.LogRecord;

        specialinvoke $r6.<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>(r1, r2);

        $z1 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: boolean classAndMethodFound>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void getClassAndMethod()>();

     label1:
        $r7 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceClassName>;

        virtualinvoke $r6.<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>($r7);

        $r8 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceMethodName>;

        virtualinvoke $r6.<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>($r8);

        if r3 == null goto label2;

        virtualinvoke $r6.<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>(r3);

     label2:
        $r9 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.LogRecord)>($r6);

     label3:
        return;
    }

    private void getClassAndMethod()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.String r3, r5, $r14, $r16, $r17, $r18, r21;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable $r6;
        java.io.StringWriter $r8;
        java.io.PrintWriter $r9;
        java.lang.StringBuffer $r10;
        java.util.StringTokenizer $r11;
        java.lang.Class $r13, $r15;
        java.lang.Exception $r19;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

     label1:
        $r6 = new java.lang.Throwable;

        specialinvoke $r6.<java.lang.Throwable: void <init>()>();

        virtualinvoke $r6.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r8 = new java.io.StringWriter;

        specialinvoke $r8.<java.io.StringWriter: void <init>()>();

        $r9 = new java.io.PrintWriter;

        specialinvoke $r9.<java.io.PrintWriter: void <init>(java.io.Writer)>($r8);

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r9);

        $r10 = virtualinvoke $r8.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = new java.util.StringTokenizer;

        specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, "\n");

        virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r21 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label3;

     label2:
        r21 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label3:
        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $i3 = virtualinvoke r21.<java.lang.String: int indexOf(java.lang.String)>($r14);

        if $i3 == -1 goto label2;

        goto label5;

     label4:
        r21 = virtualinvoke $r11.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label5:
        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $i4 = virtualinvoke r21.<java.lang.String: int indexOf(java.lang.String)>($r16);

        if $i4 >= 0 goto label4;

        $i5 = virtualinvoke r21.<java.lang.String: int indexOf(java.lang.String)>("at ");

        i0 = $i5 + 3;

        i1 = virtualinvoke r21.<java.lang.String: int indexOf(int)>(40);

        r5 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        i2 = virtualinvoke r5.<java.lang.String: int lastIndexOf(int)>(46);

        $r17 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceClassName> = $r17;

        $i6 = i2 + 1;

        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i6);

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String sourceMethodName> = $r18;

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

     label8:
        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: boolean classAndMethodFound> = 1;

        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    public void debug(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }

    public void error(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }

    public void fatal(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }

    public java.util.logging.Logger getLogger()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1, $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger logger>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.lang.String name>;

        $r4 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r3);

        r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger logger> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger logger>;

        return $r2;
    }

    public void info(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isFatalEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isTraceEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        $r1 = virtualinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: java.util.logging.Logger getLogger()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        return $z0;
    }

    public void trace(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }

    public void warn(java.lang.Object)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        org.apache.commons.logging.impl.Jdk13LumberjackLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);

        return;
    }
}
