public class org.apache.commons.logging.PathableClassLoader extends java.net.URLClassLoader
{
    private static final java.net.URL[] NO_URLS;
    private java.util.HashMap lookasides;
    private boolean parentFirst;

    static void <clinit>()
    {
        java.net.URL[] $r0;

        $r0 = newarray (java.net.URL)[0];

        <org.apache.commons.logging.PathableClassLoader: java.net.URL[] NO_URLS> = $r0;

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.ClassLoader r1;
        java.net.URL[] $r2;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 = <org.apache.commons.logging.PathableClassLoader: java.net.URL[] NO_URLS>;

        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r2, r1);

        r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides> = null;

        r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst> = 1;

        return;
    }

    public void addURL(java.net.URL)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.net.URLClassLoader: void addURL(java.net.URL)>(r1);

        return;
    }

    public void setParentFirst(boolean)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        boolean z0;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst> = z0;

        return;
    }

    public void useSystemLoader(java.lang.String)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>(r1, $r2);

        return;
    }

    public void useExplicitLoader(java.lang.String, java.lang.ClassLoader)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        java.util.HashMap $r3, $r4, $r6;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides>;

        if $r3 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides> = $r6;

     label1:
        $r4 = r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addLogicalLib(java.lang.String[])
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String[] r1;
        int $i0, i1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String[];

        i1 = 0;

        goto label2;

     label1:
        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>($r2);

        i1 = i1 + 1;

     label2:
        $i0 = lengthof r1;

        if i1 < $i0 goto label1;

        return;
    }

    public void addLogicalLib(java.lang.String)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1, r2, $r8, $r17;
        java.lang.UnknownError $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16;
        java.io.File $r9;
        java.net.MalformedURLException $r10;
        java.net.URL r18, r20;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r2);

        r18 = virtualinvoke $r9.<java.io.File: java.net.URL toURL()>();

        virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: void addURL(java.net.URL)>(r18);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.UnknownError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid file [");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for logical lib [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.UnknownError: void <init>(java.lang.String)>($r17);

        throw $r11;

     label4:
        r20 = specialinvoke r0.<org.apache.commons.logging.PathableClassLoader: java.net.URL libFromClasspath(java.lang.String)>(r1);

        if r20 == null goto label5;

        virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: void addURL(java.net.URL)>(r20);

        return;

     label5:
        $r3 = new java.lang.UnknownError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Logical lib [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not defined");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a System property.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnknownError: void <init>(java.lang.String)>($r8);

        throw $r3;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private java.net.URL libFromClasspath(java.lang.String)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1, r8;
        java.lang.ClassLoader r2;
        java.net.URLClassLoader r3;
        java.net.URL[] r4;
        java.net.URL r5, r7;
        int i0, $i1, $i2, i3, i4, $i5;
        java.lang.Class $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = r2 instanceof java.net.URLClassLoader;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = (java.net.URLClassLoader) r2;

        r4 = virtualinvoke r3.<java.net.URLClassLoader: java.net.URL[] getURLs()>();

        r7 = null;

        i3 = 2147483647;

        i4 = 0;

        goto label6;

     label2:
        r5 = r4[i4];

        r8 = virtualinvoke r5.<java.net.URL: java.lang.String toString()>();

        $z1 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

        if $z1 != 0 goto label3;

        goto label5;

     label3:
        i0 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(47);

        if i0 < 0 goto label4;

        $i2 = i0 + 1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i2);

     label4:
        $z2 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z2 == 0 goto label5;

        $i1 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i1 >= i3 goto label5;

        r7 = r5;

        i3 = virtualinvoke r8.<java.lang.String: int length()>();

     label5:
        i4 = i4 + 1;

     label6:
        $i5 = lengthof r4;

        if i4 < $i5 goto label2;

        return r7;
    }

    protected java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Map$Entry r2;
        java.lang.ClassLoader r4;
        java.lang.Class r5, $r6, $r9, $r16, r18;
        java.util.HashMap $r7, $r10;
        java.util.Set $r11;
        java.lang.Object $r12, $r13, $r14;
        java.lang.ClassNotFoundException $r15;
        java.util.Iterator r17;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("javax.");

        if $z2 == 0 goto label2;

     label1:
        $r6 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z0);

        return $r6;

     label2:
        $r7 = r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides>;

        if $r7 == null goto label5;

        $r10 = r0.<org.apache.commons.logging.PathableClassLoader: java.util.HashMap lookasides>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set entrySet()>();

        r17 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r12 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r13;

        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r3);

        if $z5 == 0 goto label4;

        $r14 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (java.lang.ClassLoader) $r14;

        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, z0, r4);

        return r5;

     label4:
        $z4 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label3;

     label5:
        $z3 = r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst>;

        if $z3 == 0 goto label6;

        $r9 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z0);

        return $r9;

     label6:
        r18 = virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: java.lang.Class findLoadedClass(java.lang.String)>(r1);

        if r18 != null goto label7;

        r18 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>(r1);

     label7:
        if z0 == 0 goto label8;

        virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: void resolveClass(java.lang.Class)>(r18);

     label8:
        return r18;

     label9:
        $r15 := @caughtexception;

        $r16 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z0);

        return $r16;

        catch java.lang.ClassNotFoundException from label6 to label8 with label9;
    }

    public java.net.URL getResource(java.lang.String)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1;
        java.net.URL r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst>;

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        return $r4;

     label1:
        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>(r1);

        if r2 == null goto label2;

        return r2;

     label2:
        $r3 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Enumeration getResourcesInOrder(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1;
        java.util.Enumeration r2, r4, $r7, $r8;
        java.lang.ClassLoader r3;
        java.util.ArrayList r5, r6;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst>;

        if $z0 == 0 goto label1;

        $r8 = specialinvoke r0.<java.net.URLClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1);

        return $r8;

     label1:
        r2 = specialinvoke r0.<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<org.apache.commons.logging.PathableClassLoader: java.lang.ClassLoader getParent()>();

        if r3 != null goto label2;

        return r2;

     label2:
        r4 = virtualinvoke r3.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1);

        r5 = specialinvoke r0.<org.apache.commons.logging.PathableClassLoader: java.util.ArrayList toList(java.util.Enumeration)>(r2);

        r6 = specialinvoke r0.<org.apache.commons.logging.PathableClassLoader: java.util.ArrayList toList(java.util.Enumeration)>(r4);

        virtualinvoke r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r6);

        $r7 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>(r5);

        return $r7;
    }

    private java.util.ArrayList toList(java.util.Enumeration)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.util.Enumeration r1;
        java.lang.Object r3;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.util.Enumeration;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        if r1 == null goto label3;

        goto label2;

     label1:
        r3 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

     label3:
        return $r4;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        org.apache.commons.logging.PathableClassLoader r0;
        java.lang.String r1;
        java.net.URL r2;
        boolean $z0;
        java.io.InputStream $r4, $r5, $r6;
        java.io.IOException $r7;

        r0 := @this: org.apache.commons.logging.PathableClassLoader;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.commons.logging.PathableClassLoader: boolean parentFirst>;

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        return $r6;

     label1:
        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>(r1);

        if r2 == null goto label5;

     label2:
        $r5 = virtualinvoke r2.<java.net.URL: java.io.InputStream openStream()>();

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        return null;

     label5:
        $r4 = specialinvoke r0.<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        return $r4;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
