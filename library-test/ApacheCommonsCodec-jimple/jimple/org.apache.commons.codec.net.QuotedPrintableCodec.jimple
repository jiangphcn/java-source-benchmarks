public class org.apache.commons.codec.net.QuotedPrintableCodec extends java.lang.Object implements org.apache.commons.codec.BinaryEncoder, org.apache.commons.codec.BinaryDecoder, org.apache.commons.codec.StringEncoder, org.apache.commons.codec.StringDecoder
{
    private final java.nio.charset.Charset charset;
    private final boolean strict;
    private static final java.util.BitSet PRINTABLE_CHARS;
    private static final byte ESCAPE_CHAR;
    private static final byte TAB;
    private static final byte SPACE;
    private static final byte CR;
    private static final byte LF;
    private static final int SAFE_LENGTH;

    static void <clinit>()
    {
        java.util.BitSet $r0, $r1, $r2, $r3, $r4;
        int i0, i1;

        <org.apache.commons.codec.net.QuotedPrintableCodec: int SAFE_LENGTH> = 73;

        <org.apache.commons.codec.net.QuotedPrintableCodec: byte LF> = 10;

        <org.apache.commons.codec.net.QuotedPrintableCodec: byte CR> = 13;

        <org.apache.commons.codec.net.QuotedPrintableCodec: byte SPACE> = 32;

        <org.apache.commons.codec.net.QuotedPrintableCodec: byte TAB> = 9;

        <org.apache.commons.codec.net.QuotedPrintableCodec: byte ESCAPE_CHAR> = 61;

        $r0 = new java.util.BitSet;

        specialinvoke $r0.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS> = $r0;

        i0 = 33;

        goto label2;

     label1:
        $r1 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r1.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

     label2:
        if i0 <= 60 goto label1;

        i1 = 62;

        goto label4;

     label3:
        $r2 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r2.<java.util.BitSet: void set(int)>(i1);

        i1 = i1 + 1;

     label4:
        if i1 <= 126 goto label3;

        $r3 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(9);

        $r4 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r4.<java.util.BitSet: void set(int)>(32);

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset,boolean)>($r1, 0);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        boolean z0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset,boolean)>($r1, z0);

        return;
    }

    public void <init>(java.nio.charset.Charset)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.nio.charset.Charset;

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.nio.charset.Charset, boolean)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset r1;
        boolean z0;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.nio.charset.Charset;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset> = r1;

        r0.<org.apache.commons.codec.net.QuotedPrintableCodec: boolean strict> = z0;

        return;
    }

    public void <init>(java.lang.String) throws java.nio.charset.IllegalCharsetNameException, java.lang.IllegalArgumentException, java.nio.charset.UnsupportedCharsetException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset,boolean)>($r2, 0);

        return;
    }

    private static final int encodeQuotedPrintable(int, java.io.ByteArrayOutputStream)
    {
        int i0, $i3, $i4, $i6;
        java.io.ByteArrayOutputStream r0;
        char c1, c2, $c5, $c7;

        i0 := @parameter0: int;

        r0 := @parameter1: java.io.ByteArrayOutputStream;

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(61);

        $i3 = i0 >> 4;

        $i4 = $i3 & 15;

        $c5 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i4, 16);

        c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c5);

        $i6 = i0 & 15;

        $c7 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i6, 16);

        c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c7);

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(c1);

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(c2);

        return 3;
    }

    private static int getUnsignedOctet(int, byte[])
    {
        int i0, i1;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i1 = r0[i0];

        if i1 >= 0 goto label1;

        i1 = i1 + 256;

     label1:
        return i1;
    }

    private static int encodeByte(int, boolean, java.io.ByteArrayOutputStream)
    {
        int i0, $i1;
        boolean z0;
        java.io.ByteArrayOutputStream r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.io.ByteArrayOutputStream;

        if z0 == 0 goto label1;

        $i1 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeQuotedPrintable(int,java.io.ByteArrayOutputStream)>(i0, r0);

        return $i1;

     label1:
        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        return 1;
    }

    private static boolean isWhitespace(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 32 goto label1;

        if i0 == 9 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static final byte[] encodeQuotedPrintable(java.util.BitSet, byte[])
    {
        java.util.BitSet r0;
        byte[] r1, $r2;

        r0 := @parameter0: java.util.BitSet;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encodeQuotedPrintable(java.util.BitSet,byte[],boolean)>(r0, r1, 0);

        return $r2;
    }

    public static final byte[] encodeQuotedPrintable(java.util.BitSet, byte[], boolean)
    {
        byte[] r0, $r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13;
        java.io.ByteArrayOutputStream $r2;
        int $i2, $i4, $i5, $i6, $i7, $i9, $i10, i11, i12, i13, $i15, $i16, i17, $i18, i19, i20, i21, $i22, i23, i24, i26;
        java.util.BitSet r4;
        byte b25;

        r4 := @parameter0: java.util.BitSet;

        r0 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        if r0 != null goto label01;

        return null;

     label01:
        if r4 != null goto label02;

        r4 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

     label02:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        if z0 == 0 goto label20;

        i11 = 1;

        i12 = 0;

        goto label10;

     label03:
        i13 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int getUnsignedOctet(int,byte[])>(i12, r0);

        if i11 >= 73 goto label06;

        $i4 = i11;

        $z4 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(i13);

        if $z4 == 0 goto label04;

        $z9 = 0;

        goto label05;

     label04:
        $z9 = 1;

     label05:
        $i2 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeByte(int,boolean,java.io.ByteArrayOutputStream)>(i13, $z9, $r2);

        i11 = $i4 + $i2;

        goto label09;

     label06:
        $z2 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(i13);

        if $z2 == 0 goto label07;

        $z3 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: boolean isWhitespace(int)>(i13);

        if $z3 != 0 goto label07;

        $z10 = 0;

        goto label08;

     label07:
        $z10 = 1;

     label08:
        staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeByte(int,boolean,java.io.ByteArrayOutputStream)>(i13, $z10, $r2);

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(61);

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(13);

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(10);

        i11 = 1;

     label09:
        i12 = i12 + 1;

     label10:
        $i15 = lengthof r0;

        $i16 = $i15 - 3;

        if i12 < $i16 goto label03;

        $i5 = lengthof r0;

        $i6 = $i5 - 3;

        i17 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int getUnsignedOctet(int,byte[])>($i6, r0);

        $z5 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(i17);

        if $z5 == 0 goto label12;

        $z8 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: boolean isWhitespace(int)>(i17);

        if $z8 == 0 goto label11;

        if i11 > 68 goto label12;

     label11:
        $z11 = 0;

        goto label13;

     label12:
        $z11 = 1;

     label13:
        $i18 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeByte(int,boolean,java.io.ByteArrayOutputStream)>(i17, $z11, $r2);

        i19 = i11 + $i18;

        if i19 <= 71 goto label14;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(61);

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(13);

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(10);

     label14:
        $i7 = lengthof r0;

        i20 = $i7 - 2;

        goto label19;

     label15:
        i21 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int getUnsignedOctet(int,byte[])>(i20, r0);

        $z6 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(i21);

        if $z6 == 0 goto label17;

        $i9 = lengthof r0;

        $i10 = $i9 - 2;

        if i20 <= $i10 goto label16;

        $z7 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: boolean isWhitespace(int)>(i21);

        if $z7 != 0 goto label17;

     label16:
        $z13 = 0;

        goto label18;

     label17:
        $z13 = 1;

     label18:
        staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeByte(int,boolean,java.io.ByteArrayOutputStream)>(i21, $z13, $r2);

        i20 = i20 + 1;

     label19:
        $i22 = lengthof r0;

        if i20 < $i22 goto label15;

        goto label26;

     label20:
        i23 = lengthof r0;

        i24 = 0;

        goto label25;

     label21:
        b25 = r0[i24];

        i26 = b25;

        if b25 >= 0 goto label22;

        i26 = b25 + 256;

     label22:
        $z1 = virtualinvoke r4.<java.util.BitSet: boolean get(int)>(i26);

        if $z1 == 0 goto label23;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(i26);

        goto label24;

     label23:
        staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: int encodeQuotedPrintable(int,java.io.ByteArrayOutputStream)>(i26, $r2);

     label24:
        i24 = i24 + 1;

     label25:
        if i24 < i23 goto label21;

     label26:
        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    public static final byte[] decodeQuotedPrintable(byte[]) throws org.apache.commons.codec.DecoderException
    {
        byte[] r0, $r3;
        byte b0, $b2, $b3, $b4;
        int i1, $i5, $i6, i8, i9, $i10;
        java.io.ByteArrayOutputStream $r2;
        char $c7;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        org.apache.commons.codec.DecoderException $r5;

        r0 := @parameter0: byte[];

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        i8 = 0;

        goto label10;

     label02:
        b0 = r0[i8];

        if b0 != 61 goto label08;

     label03:
        i8 = i8 + 1;

        $b2 = r0[i8];

        if $b2 != 13 goto label05;

     label04:
        goto label09;

     label05:
        $b3 = r0[i8];

        i9 = staticinvoke <org.apache.commons.codec.net.Utils: int digit16(byte)>($b3);

        i8 = i8 + 1;

        $b4 = r0[i8];

        i1 = staticinvoke <org.apache.commons.codec.net.Utils: int digit16(byte)>($b4);

        $i5 = i9 << 4;

        $i6 = $i5 + i1;

        $c7 = (char) $i6;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($c7);

     label06:
        goto label09;

     label07:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r5.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid quoted-printable encoding", $r4);

        throw $r5;

     label08:
        if b0 == 13 goto label09;

        if b0 == 10 goto label09;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0);

     label09:
        i8 = i8 + 1;

     label10:
        $i10 = lengthof r0;

        if i8 < $i10 goto label02;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label07;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label07;
    }

    public byte[] encode(byte[])
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        byte[] r1, $r3;
        boolean $z0;
        java.util.BitSet $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: byte[];

        $r2 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        $z0 = r0.<org.apache.commons.codec.net.QuotedPrintableCodec: boolean strict>;

        $r3 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encodeQuotedPrintable(java.util.BitSet,byte[],boolean)>($r2, r1, $z0);

        return $r3;
    }

    public byte[] decode(byte[]) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decodeQuotedPrintable(byte[])>(r1);

        return $r2;
    }

    public java.lang.String encode(java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset getCharset()>();

        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)>(r1, $r2);

        return $r3;
    }

    public java.lang.String decode(java.lang.String, java.nio.charset.Charset) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset r2;
        byte[] $r4, $r5;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.charset.Charset;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>($r4);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r5, r2);

        return $r3;
    }

    public java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.codec.DecoderException, java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, r2, $r3;
        byte[] $r4, $r5;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>($r4);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, r2);

        return $r3;
    }

    public java.lang.String decode(java.lang.String) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset getCharset()>();

        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String,java.nio.charset.Charset)>(r1, $r2);

        return $r3;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.commons.codec.EncoderException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r9, $r10;
        byte[] $r11, $r12;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        $r11 = (byte[]) r1;

        $r12 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>($r11);

        return $r12;

     label2:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r9 = (java.lang.String) r1;

        $r10 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String)>($r9);

        return $r10;

     label3:
        $r2 = new org.apache.commons.codec.EncoderException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Objects of type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be quoted-printable encoded");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r9, $r10;
        byte[] $r11, $r12;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        $r11 = (byte[]) r1;

        $r12 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>($r11);

        return $r12;

     label2:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r9 = (java.lang.String) r1;

        $r10 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String)>($r9);

        return $r10;

     label3:
        $r2 = new org.apache.commons.codec.DecoderException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Objects of type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be quoted-printable decoded");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public java.nio.charset.Charset getCharset()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 = r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset>;

        return $r1;
    }

    public java.lang.String getDefaultCharset()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 = r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset>;

        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        return $r2;
    }

    public java.lang.String encode(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, $r5;
        java.nio.charset.Charset r2;
        byte[] $r3, $r4;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.charset.Charset;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r2);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>($r3);

        $r5 = staticinvoke <org.apache.commons.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r4);

        return $r5;
    }

    public java.lang.String encode(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String r1, r2, $r5;
        byte[] $r3, $r4;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>($r3);

        $r5 = staticinvoke <org.apache.commons.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r4);

        return $r5;
    }
}
