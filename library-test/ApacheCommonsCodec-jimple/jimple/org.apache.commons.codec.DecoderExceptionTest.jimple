public class org.apache.commons.codec.DecoderExceptionTest extends java.lang.Object
{
    private static final java.lang.String MSG;
    private static final java.lang.Throwable t;

    static void <clinit>()
    {
        java.lang.Exception $r0;

        <org.apache.commons.codec.DecoderExceptionTest: java.lang.String MSG> = "TEST";

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>()>();

        <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.DecoderExceptionTest r0;

        r0 := @this: org.apache.commons.codec.DecoderExceptionTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testConstructor0()
    {
        org.apache.commons.codec.DecoderExceptionTest r0;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.commons.codec.DecoderExceptionTest;

        $r2 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4);

        return;
    }

    public void testConstructorString()
    {
        org.apache.commons.codec.DecoderExceptionTest r0;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.commons.codec.DecoderExceptionTest;

        $r2 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("TEST");

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("TEST", $r3);

        $r4 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4);

        return;
    }

    public void testConstructorStringThrowable()
    {
        org.apache.commons.codec.DecoderExceptionTest r0;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.Throwable $r3, $r5, $r6;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.codec.DecoderExceptionTest;

        $r2 = new org.apache.commons.codec.DecoderException;

        $r3 = <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t>;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>("TEST", $r3);

        $r4 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("TEST", $r4);

        $r5 = <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t>;

        $r6 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    public void testConstructorThrowable()
    {
        org.apache.commons.codec.DecoderExceptionTest r0;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.Throwable $r3, $r4, $r8, $r9;
        java.lang.Class $r5;
        java.lang.String $r6, $r7;

        r0 := @this: org.apache.commons.codec.DecoderExceptionTest;

        $r2 = new org.apache.commons.codec.DecoderException;

        $r3 = <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t>;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.Throwable)>($r3);

        $r4 = <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = <org.apache.commons.codec.DecoderExceptionTest: java.lang.Throwable t>;

        $r9 = virtualinvoke $r2.<org.apache.commons.codec.DecoderException: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        return;
    }
}
