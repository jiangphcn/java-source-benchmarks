final class org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder extends java.lang.Object
{
    private final java.util.Set phonemes;

    public static org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet r0;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder $r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme $r2;

        r0 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r1 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r2 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        specialinvoke $r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>("", r0);

        specialinvoke $r1.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(org.apache.commons.codec.language.bm.Rule$Phoneme)>($r2);

        return $r1;
    }

    private void <init>(org.apache.commons.codec.language.bm.Rule$Phoneme)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        org.apache.commons.codec.language.bm.Rule$Phoneme r1;
        java.util.LinkedHashSet $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: org.apache.commons.codec.language.bm.Rule$Phoneme;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes> = $r2;

        $r3 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void <init>(java.util.Set)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes> = r1;

        return;
    }

    public void append(java.lang.CharSequence)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.lang.CharSequence r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r2;
        java.util.Iterator r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r4 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        virtualinvoke r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence)>(r1);

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr, int)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        org.apache.commons.codec.language.bm.Rule$PhonemeExpr r1;
        int i0, $i1, $i2;
        org.apache.commons.codec.language.bm.Rule$Phoneme r3, r5, $r16;
        java.util.Iterator r4, r6;
        org.apache.commons.codec.language.bm.Languages$LanguageSet r7, $r14, $r15;
        java.util.LinkedHashSet $r9;
        java.util.Set $r10, $r17, $r18;
        boolean $z0, $z1, $z4;
        java.lang.Object $r11, $r13;
        java.lang.Iterable $r12;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: org.apache.commons.codec.language.bm.Rule$PhonemeExpr;

        i0 := @parameter1: int;

        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>(int)>(i0);

        $r10 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r11;

        $r12 = interfaceinvoke r1.<org.apache.commons.codec.language.bm.Rule$PhonemeExpr: java.lang.Iterable getPhonemes()>();

        r6 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r13;

        $r14 = virtualinvoke r3.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()>();

        $r15 = virtualinvoke r5.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()>();

        r7 = virtualinvoke $r14.<org.apache.commons.codec.language.bm.Languages$LanguageSet: org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r15);

        $z1 = virtualinvoke r7.<org.apache.commons.codec.language.bm.Languages$LanguageSet: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r16 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        specialinvoke $r16.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Languages$LanguageSet)>(r3, r5, r7);

        $i1 = interfaceinvoke $r9.<java.util.Set: int size()>();

        if $i1 >= i0 goto label3;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r16);

        $i2 = interfaceinvoke $r9.<java.util.Set: int size()>();

        if $i2 < i0 goto label3;

        goto label5;

     label3:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label2;

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label5:
        $r17 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        interfaceinvoke $r17.<java.util.Set: void clear()>();

        $r18 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        interfaceinvoke $r18.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

        return;
    }

    public java.util.Set getPhonemes()
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        return $r1;
    }

    public java.lang.String makeString()
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        org.apache.commons.codec.language.bm.Rule$Phoneme r2;
        java.util.Iterator r3;
        java.lang.StringBuilder $r4;
        java.util.Set $r5;
        java.lang.Object $r6;
        int $i0;
        java.lang.CharSequence $r7;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r6;

        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label2:
        $r7 = virtualinvoke r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence getPhonemeText()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r7);

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    void <init>(java.util.Set, org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0, r2;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        specialinvoke r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>(r1);

        return;
    }
}
