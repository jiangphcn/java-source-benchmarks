public final class org.apache.commons.codec.language.bm.Languages$SomeLanguages extends org.apache.commons.codec.language.bm.Languages$LanguageSet
{
    private final java.util.Set languages;

    private void <init>(java.util.Set)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set r1, $r2;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages> = $r2;

        return;
    }

    public boolean contains(java.lang.String)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String getAny()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.Set getLanguages()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        return $r1;
    }

    public boolean isEmpty()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }

    public boolean isSingleton()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0, r2;
        org.apache.commons.codec.language.bm.Languages$LanguageSet r1, $r6, $r7, $r14;
        java.lang.String r4;
        java.util.Iterator r5;
        java.util.HashSet $r8;
        java.util.Set $r9, $r10, $r11, $r13;
        int $i0, $i1, $i2;
        java.lang.Object $r12;
        boolean $z0, $z2;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r6 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES>;

        if r1 != $r6 goto label1;

        return r1;

     label1:
        $r7 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE>;

        if r1 != $r7 goto label2;

        return r0;

     label2:
        r2 = (org.apache.commons.codec.language.bm.Languages$SomeLanguages) r1;

        $r8 = new java.util.HashSet;

        $r9 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $i0 = interfaceinvoke $r9.<java.util.Set: int size()>();

        $r10 = r2.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $i1 = interfaceinvoke $r10.<java.util.Set: int size()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke $r8.<java.util.HashSet: void <init>(int)>($i2);

        $r11 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r12;

        $r13 = r2.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r13.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r4);

     label4:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $r14 = staticinvoke <org.apache.commons.codec.language.bm.Languages$SomeLanguages: org.apache.commons.codec.language.bm.Languages$LanguageSet 'from'(java.util.Set)>($r8);

        return $r14;
    }

    public org.apache.commons.codec.language.bm.Languages$LanguageSet merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0, r2;
        org.apache.commons.codec.language.bm.Languages$LanguageSet r1, $r6, $r7, $r12;
        java.lang.String r4;
        java.util.Iterator r5;
        java.util.HashSet $r8;
        java.util.Set $r9, $r10;
        boolean $z0;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r6 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES>;

        if r1 != $r6 goto label1;

        return r0;

     label1:
        $r7 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE>;

        if r1 != $r7 goto label2;

        return r1;

     label2:
        r2 = (org.apache.commons.codec.language.bm.Languages$SomeLanguages) r1;

        $r8 = new java.util.HashSet;

        $r9 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        specialinvoke $r8.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        $r10 = r2.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        r5 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r11;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r4);

     label4:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $r12 = staticinvoke <org.apache.commons.codec.language.bm.Languages$SomeLanguages: org.apache.commons.codec.language.bm.Languages$LanguageSet 'from'(java.util.Set)>($r8);

        return $r12;
    }

    public java.lang.String toString()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.util.Set $r2;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Languages(");

        $r2 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void <init>(java.util.Set, org.apache.commons.codec.language.bm.Languages$SomeLanguages)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0, r2;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        specialinvoke r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: void <init>(java.util.Set)>(r1);

        return;
    }
}
