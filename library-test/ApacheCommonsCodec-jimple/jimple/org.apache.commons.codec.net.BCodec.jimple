public class org.apache.commons.codec.net.BCodec extends org.apache.commons.codec.net.RFC1522Codec implements org.apache.commons.codec.StringEncoder, org.apache.commons.codec.StringDecoder
{
    private final java.nio.charset.Charset charset;

    public void <init>()
    {
        org.apache.commons.codec.net.BCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.commons.codec.net.BCodec: void <init>(java.nio.charset.Charset)>($r1);

        return;
    }

    public void <init>(java.nio.charset.Charset)
    {
        org.apache.commons.codec.net.BCodec r0;
        java.nio.charset.Charset r1;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.nio.charset.Charset;

        specialinvoke r0.<org.apache.commons.codec.net.RFC1522Codec: void <init>()>();

        r0.<org.apache.commons.codec.net.BCodec: java.nio.charset.Charset charset> = r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.codec.net.BCodec: void <init>(java.nio.charset.Charset)>($r2);

        return;
    }

    protected java.lang.String getEncoding()
    {
        org.apache.commons.codec.net.BCodec r0;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        return "B";
    }

    protected byte[] doEncoding(byte[])
    {
        org.apache.commons.codec.net.BCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>(r1);

        return $r2;
    }

    protected byte[] doDecoding(byte[])
    {
        org.apache.commons.codec.net.BCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(byte[])>(r1);

        return $r2;
    }

    public java.lang.String encode(java.lang.String, java.nio.charset.Charset) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.charset.Charset;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String encodeText(java.lang.String,java.nio.charset.Charset)>(r1, r2);

        return $r3;
    }

    public java.lang.String encode(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.String r1, r2, $r4, $r7;
        java.io.UnsupportedEncodingException $r5;
        org.apache.commons.codec.EncoderException $r6;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String encodeText(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.codec.EncoderException;

        $r7 = virtualinvoke $r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String encode(java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.nio.charset.Charset getCharset()>();

        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)>(r1, $r2);

        return $r3;
    }

    public java.lang.String decode(java.lang.String) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.String r1, $r3, $r6;
        java.io.UnsupportedEncodingException $r4;
        org.apache.commons.codec.DecoderException $r5;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String decodeText(java.lang.String)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.codec.DecoderException;

        $r6 = virtualinvoke $r4.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r4);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.Object r1;
        boolean $z0;
        org.apache.commons.codec.EncoderException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r9 = (java.lang.String) r1;

        $r10 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String)>($r9);

        return $r10;

     label2:
        $r2 = new org.apache.commons.codec.EncoderException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Objects of type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be encoded using BCodec");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.BCodec r0;
        java.lang.Object r1;
        boolean $z0;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r9 = (java.lang.String) r1;

        $r10 = virtualinvoke r0.<org.apache.commons.codec.net.BCodec: java.lang.String decode(java.lang.String)>($r9);

        return $r10;

     label2:
        $r2 = new org.apache.commons.codec.DecoderException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Objects of type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be decoded using BCodec");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public java.nio.charset.Charset getCharset()
    {
        org.apache.commons.codec.net.BCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        $r1 = r0.<org.apache.commons.codec.net.BCodec: java.nio.charset.Charset charset>;

        return $r1;
    }

    public java.lang.String getDefaultCharset()
    {
        org.apache.commons.codec.net.BCodec r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.net.BCodec;

        $r1 = r0.<org.apache.commons.codec.net.BCodec: java.nio.charset.Charset charset>;

        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        return $r2;
    }
}
