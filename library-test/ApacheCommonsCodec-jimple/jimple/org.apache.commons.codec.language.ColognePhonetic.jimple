public class org.apache.commons.codec.language.ColognePhonetic extends java.lang.Object implements org.apache.commons.codec.StringEncoder
{
    private static final char[] AEIJOUY;
    private static final char[] SCZ;
    private static final char[] WFPV;
    private static final char[] GKQ;
    private static final char[] CKQ;
    private static final char[] AHKLOQRUX;
    private static final char[] SZ;
    private static final char[] AHOUKQX;
    private static final char[] TDX;
    private static final char[][] PREPROCESS_MAP;

    static void <clinit>()
    {
        char[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        char[][] $r9;

        $r0 = newarray (char)[7];

        $r0[0] = 65;

        $r0[1] = 69;

        $r0[2] = 73;

        $r0[3] = 74;

        $r0[4] = 79;

        $r0[5] = 85;

        $r0[6] = 89;

        <org.apache.commons.codec.language.ColognePhonetic: char[] AEIJOUY> = $r0;

        $r1 = newarray (char)[3];

        $r1[0] = 83;

        $r1[1] = 67;

        $r1[2] = 90;

        <org.apache.commons.codec.language.ColognePhonetic: char[] SCZ> = $r1;

        $r2 = newarray (char)[4];

        $r2[0] = 87;

        $r2[1] = 70;

        $r2[2] = 80;

        $r2[3] = 86;

        <org.apache.commons.codec.language.ColognePhonetic: char[] WFPV> = $r2;

        $r3 = newarray (char)[3];

        $r3[0] = 71;

        $r3[1] = 75;

        $r3[2] = 81;

        <org.apache.commons.codec.language.ColognePhonetic: char[] GKQ> = $r3;

        $r4 = newarray (char)[3];

        $r4[0] = 67;

        $r4[1] = 75;

        $r4[2] = 81;

        <org.apache.commons.codec.language.ColognePhonetic: char[] CKQ> = $r4;

        $r5 = newarray (char)[9];

        $r5[0] = 65;

        $r5[1] = 72;

        $r5[2] = 75;

        $r5[3] = 76;

        $r5[4] = 79;

        $r5[5] = 81;

        $r5[6] = 82;

        $r5[7] = 85;

        $r5[8] = 88;

        <org.apache.commons.codec.language.ColognePhonetic: char[] AHKLOQRUX> = $r5;

        $r6 = newarray (char)[2];

        $r6[0] = 83;

        $r6[1] = 90;

        <org.apache.commons.codec.language.ColognePhonetic: char[] SZ> = $r6;

        $r7 = newarray (char)[7];

        $r7[0] = 65;

        $r7[1] = 72;

        $r7[2] = 79;

        $r7[3] = 85;

        $r7[4] = 75;

        $r7[5] = 81;

        $r7[6] = 88;

        <org.apache.commons.codec.language.ColognePhonetic: char[] AHOUKQX> = $r7;

        $r8 = newarray (char)[3];

        $r8[0] = 84;

        $r8[1] = 68;

        $r8[2] = 88;

        <org.apache.commons.codec.language.ColognePhonetic: char[] TDX> = $r8;

        $r9 = newarray (char[])[4];

        $r10 = newarray (char)[2];

        $r10[0] = 196;

        $r10[1] = 65;

        $r9[0] = $r10;

        $r11 = newarray (char)[2];

        $r11[0] = 220;

        $r11[1] = 85;

        $r9[1] = $r11;

        $r12 = newarray (char)[2];

        $r12[0] = 214;

        $r12[1] = 79;

        $r9[2] = $r12;

        $r13 = newarray (char)[2];

        $r13[0] = 223;

        $r13[1] = 83;

        $r9[3] = $r13;

        <org.apache.commons.codec.language.ColognePhonetic: char[][] PREPROCESS_MAP> = $r9;

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.language.ColognePhonetic r0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean arrayContains(char[], char)
    {
        char[] r0;
        char c0, c1;
        int i2, i3;

        r0 := @parameter0: char[];

        c0 := @parameter1: char;

        i2 = lengthof r0;

        i3 = 0;

        goto label3;

     label1:
        c1 = r0[i3];

        if c1 != c0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i2 goto label1;

        return 0;
    }

    public java.lang.String colognePhonetic(java.lang.String)
    {
        org.apache.commons.codec.language.ColognePhonetic r0;
        char c0, c4, c5, c7, c8;
        org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer $r3;
        int $i1, $i2, $i3, i6;
        org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer $r4;
        char[] $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String $r15, r16, r17;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r16 := @parameter0: java.lang.String;

        if r16 != null goto label01;

        return null;

     label01:
        r17 = specialinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String preprocess(java.lang.String)>(r16);

        $r3 = new org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer;

        $i1 = virtualinvoke r17.<java.lang.String: int length()>();

        $i2 = $i1 * 2;

        specialinvoke $r3.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: void <init>(org.apache.commons.codec.language.ColognePhonetic,int)>(r0, $i2);

        $r4 = new org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer;

        $r5 = virtualinvoke r17.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: void <init>(org.apache.commons.codec.language.ColognePhonetic,char[])>(r0, $r5);

        c4 = 45;

        c5 = 47;

        i6 = virtualinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: int length()>();

        goto label32;

     label02:
        c0 = virtualinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: char removeNext()>();

        $i3 = virtualinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: int length()>();

        i6 = $i3;

        if $i3 <= 0 goto label03;

        c7 = virtualinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: char getNextChar()>();

        goto label04;

     label03:
        c7 = 45;

     label04:
        $r6 = <org.apache.commons.codec.language.ColognePhonetic: char[] AEIJOUY>;

        $z0 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r6, c0);

        if $z0 == 0 goto label05;

        c8 = 48;

        goto label28;

     label05:
        if c0 == 72 goto label06;

        if c0 < 65 goto label06;

        if c0 <= 90 goto label08;

     label06:
        if c5 != 47 goto label07;

        goto label32;

     label07:
        c8 = 45;

        goto label28;

     label08:
        if c0 == 66 goto label09;

        if c0 != 80 goto label10;

        if c7 == 72 goto label10;

     label09:
        c8 = 49;

        goto label28;

     label10:
        if c0 == 68 goto label11;

        if c0 != 84 goto label12;

     label11:
        $r7 = <org.apache.commons.codec.language.ColognePhonetic: char[] SCZ>;

        $z1 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r7, c7);

        if $z1 != 0 goto label12;

        c8 = 50;

        goto label28;

     label12:
        $r8 = <org.apache.commons.codec.language.ColognePhonetic: char[] WFPV>;

        $z2 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r8, c0);

        if $z2 == 0 goto label13;

        c8 = 51;

        goto label28;

     label13:
        $r9 = <org.apache.commons.codec.language.ColognePhonetic: char[] GKQ>;

        $z3 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r9, c0);

        if $z3 == 0 goto label14;

        c8 = 52;

        goto label28;

     label14:
        if c0 != 88 goto label15;

        $r14 = <org.apache.commons.codec.language.ColognePhonetic: char[] CKQ>;

        $z8 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r14, c4);

        if $z8 != 0 goto label15;

        c8 = 52;

        virtualinvoke $r4.<org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer: void addLeft(char)>(83);

        i6 = $i3 + 1;

        goto label28;

     label15:
        if c0 == 83 goto label16;

        if c0 != 90 goto label17;

     label16:
        c8 = 56;

        goto label28;

     label17:
        if c0 != 67 goto label22;

        if c5 != 47 goto label19;

        $r13 = <org.apache.commons.codec.language.ColognePhonetic: char[] AHKLOQRUX>;

        $z7 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r13, c7);

        if $z7 == 0 goto label18;

        c8 = 52;

        goto label28;

     label18:
        c8 = 56;

        goto label28;

     label19:
        $r11 = <org.apache.commons.codec.language.ColognePhonetic: char[] SZ>;

        $z5 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r11, c4);

        if $z5 != 0 goto label20;

        $r12 = <org.apache.commons.codec.language.ColognePhonetic: char[] AHOUKQX>;

        $z6 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r12, c7);

        if $z6 != 0 goto label21;

     label20:
        c8 = 56;

        goto label28;

     label21:
        c8 = 52;

        goto label28;

     label22:
        $r10 = <org.apache.commons.codec.language.ColognePhonetic: char[] TDX>;

        $z4 = staticinvoke <org.apache.commons.codec.language.ColognePhonetic: boolean arrayContains(char[],char)>($r10, c0);

        if $z4 == 0 goto label23;

        c8 = 56;

        goto label28;

     label23:
        if c0 != 82 goto label24;

        c8 = 55;

        goto label28;

     label24:
        if c0 != 76 goto label25;

        c8 = 53;

        goto label28;

     label25:
        if c0 == 77 goto label26;

        if c0 != 78 goto label27;

     label26:
        c8 = 54;

        goto label28;

     label27:
        c8 = c0;

     label28:
        if c8 == 45 goto label31;

        if c5 == c8 goto label29;

        if c8 != 48 goto label30;

        if c5 == 47 goto label30;

     label29:
        if c8 < 48 goto label30;

        if c8 <= 56 goto label31;

     label30:
        virtualinvoke $r3.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: void addRight(char)>(c8);

     label31:
        c4 = c0;

        c5 = c8;

     label32:
        if i6 > 0 goto label02;

        $r15 = virtualinvoke $r3.<org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer: java.lang.String toString()>();

        return $r15;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.ColognePhonetic r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r7, $r11, $r14;
        org.apache.commons.codec.EncoderException $r4;
        java.lang.StringBuilder $r5, $r8, $r9, $r12, $r13;
        java.lang.Class $r6, $r10;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r4 = new org.apache.commons.codec.EncoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("This method\'s parameter was expected to be of the type ");

        $r6 = class "java/lang/String";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". But actually it was of the type ");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>($r14);

        throw $r4;

     label1:
        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String encode(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String encode(java.lang.String)
    {
        org.apache.commons.codec.language.ColognePhonetic r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r1);

        return $r2;
    }

    public boolean isEncodeEqual(java.lang.String, java.lang.String)
    {
        org.apache.commons.codec.language.ColognePhonetic r0;
        java.lang.String r1, r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.ColognePhonetic: java.lang.String colognePhonetic(java.lang.String)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    private java.lang.String preprocess(java.lang.String)
    {
        org.apache.commons.codec.language.ColognePhonetic r0;
        char[] r1, r2;
        int i0, i5, i6, $i7;
        java.util.Locale $r4;
        char $c1, $c2, $c3, $c4;
        char[][] $r5;
        java.lang.String $r6, r7, r8;

        r0 := @this: org.apache.commons.codec.language.ColognePhonetic;

        r7 := @parameter0: java.lang.String;

        $r4 = <java.util.Locale: java.util.Locale GERMAN>;

        r8 = virtualinvoke r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        r1 = virtualinvoke r8.<java.lang.String: char[] toCharArray()>();

        i5 = 0;

        goto label6;

     label1:
        $c1 = r1[i5];

        if $c1 <= 90 goto label5;

        $r5 = <org.apache.commons.codec.language.ColognePhonetic: char[][] PREPROCESS_MAP>;

        i0 = lengthof $r5;

        i6 = 0;

        goto label4;

     label2:
        r2 = $r5[i6];

        $c3 = r1[i5];

        $c2 = r2[0];

        if $c3 != $c2 goto label3;

        $c4 = r2[1];

        r1[i5] = $c4;

        goto label5;

     label3:
        i6 = i6 + 1;

     label4:
        if i6 < i0 goto label2;

     label5:
        i5 = i5 + 1;

     label6:
        $i7 = lengthof r1;

        if i5 < $i7 goto label1;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r1);

        return $r6;
    }
}
