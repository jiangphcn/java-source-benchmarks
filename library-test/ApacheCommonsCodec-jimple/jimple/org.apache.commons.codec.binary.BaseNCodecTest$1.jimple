class org.apache.commons.codec.binary.BaseNCodecTest$1 extends org.apache.commons.codec.binary.BaseNCodec
{
    final org.apache.commons.codec.binary.BaseNCodecTest this$0;

    void <init>(org.apache.commons.codec.binary.BaseNCodecTest, int, int, int, int)
    {
        org.apache.commons.codec.binary.BaseNCodecTest$1 r0;
        org.apache.commons.codec.binary.BaseNCodecTest r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.codec.binary.BaseNCodecTest$1;

        r1 := @parameter0: org.apache.commons.codec.binary.BaseNCodecTest;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        r0.<org.apache.commons.codec.binary.BaseNCodecTest$1: org.apache.commons.codec.binary.BaseNCodecTest this$0> = r1;

        specialinvoke r0.<org.apache.commons.codec.binary.BaseNCodec: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    protected boolean isInAlphabet(byte)
    {
        org.apache.commons.codec.binary.BaseNCodecTest$1 r0;
        byte b0;

        r0 := @this: org.apache.commons.codec.binary.BaseNCodecTest$1;

        b0 := @parameter0: byte;

        if b0 == 79 goto label1;

        if b0 == 75 goto label1;

        return 0;

     label1:
        return 1;
    }

    void encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context)
    {
        org.apache.commons.codec.binary.BaseNCodecTest$1 r0;
        byte[] r1;
        int i0, i1;
        org.apache.commons.codec.binary.BaseNCodec$Context r2;

        r0 := @this: org.apache.commons.codec.binary.BaseNCodecTest$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.commons.codec.binary.BaseNCodec$Context;

        return;
    }

    void decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context)
    {
        org.apache.commons.codec.binary.BaseNCodecTest$1 r0;
        byte[] r1;
        int i0, i1;
        org.apache.commons.codec.binary.BaseNCodec$Context r2;

        r0 := @this: org.apache.commons.codec.binary.BaseNCodecTest$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.commons.codec.binary.BaseNCodec$Context;

        return;
    }
}
