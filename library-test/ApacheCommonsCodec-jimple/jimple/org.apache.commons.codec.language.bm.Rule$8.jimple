class org.apache.commons.codec.language.bm.Rule$8 extends java.lang.Object implements org.apache.commons.codec.language.bm.Rule$RPattern
{
    private final java.lang.String val$bContent;
    private final boolean val$shouldMatch;

    void <init>(java.lang.String, boolean)
    {
        org.apache.commons.codec.language.bm.Rule$8 r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$8;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0.<org.apache.commons.codec.language.bm.Rule$8: java.lang.String val$bContent> = r1;

        r0.<org.apache.commons.codec.language.bm.Rule$8: boolean val$shouldMatch> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isMatch(java.lang.CharSequence)
    {
        org.apache.commons.codec.language.bm.Rule$8 r0;
        java.lang.CharSequence r1;
        int $i0;
        java.lang.String $r2;
        char $c1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$8;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.commons.codec.language.bm.Rule$8: java.lang.String val$bContent>;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.commons.codec.language.bm.Rule: boolean access$2(java.lang.CharSequence,char)>($r2, $c1);

        $z1 = r0.<org.apache.commons.codec.language.bm.Rule$8: boolean val$shouldMatch>;

        if $z0 != $z1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
