public class org.apache.commons.codec.language.SoundexTest extends org.apache.commons.codec.StringEncoderAbstractTest
{

    public void <init>()
    {
        org.apache.commons.codec.language.SoundexTest r0;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        specialinvoke r0.<org.apache.commons.codec.StringEncoderAbstractTest: void <init>()>();

        return;
    }

    protected org.apache.commons.codec.language.Soundex createStringEncoder()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = new org.apache.commons.codec.language.Soundex;

        specialinvoke $r1.<org.apache.commons.codec.language.Soundex: void <init>()>();

        return $r1;
    }

    public void testB650() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = newarray (java.lang.String)[40];

        $r1[0] = "BARHAM";

        $r1[1] = "BARONE";

        $r1[2] = "BARRON";

        $r1[3] = "BERNA";

        $r1[4] = "BIRNEY";

        $r1[5] = "BIRNIE";

        $r1[6] = "BOOROM";

        $r1[7] = "BOREN";

        $r1[8] = "BORN";

        $r1[9] = "BOURN";

        $r1[10] = "BOURNE";

        $r1[11] = "BOWRON";

        $r1[12] = "BRAIN";

        $r1[13] = "BRAME";

        $r1[14] = "BRANN";

        $r1[15] = "BRAUN";

        $r1[16] = "BREEN";

        $r1[17] = "BRIEN";

        $r1[18] = "BRIM";

        $r1[19] = "BRIMM";

        $r1[20] = "BRINN";

        $r1[21] = "BRION";

        $r1[22] = "BROOM";

        $r1[23] = "BROOME";

        $r1[24] = "BROWN";

        $r1[25] = "BROWNE";

        $r1[26] = "BRUEN";

        $r1[27] = "BRUHN";

        $r1[28] = "BRUIN";

        $r1[29] = "BRUMM";

        $r1[30] = "BRUN";

        $r1[31] = "BRUNO";

        $r1[32] = "BRYAN";

        $r1[33] = "BURIAN";

        $r1[34] = "BURN";

        $r1[35] = "BURNEY";

        $r1[36] = "BYRAM";

        $r1[37] = "BYRNE";

        $r1[38] = "BYRON";

        $r1[39] = "BYRUM";

        virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: void checkEncodingVariations(java.lang.String,java.lang.String[])>("B650", $r1);

        return;
    }

    public void testBadCharacters()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1;
        org.apache.commons.codec.language.Soundex $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("HOL>MES");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("H452", $r3);

        return;
    }

    public void testDifference() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        org.apache.commons.codec.language.Soundex $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l23;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $i0 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>(null, null);

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $r3 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r4 = (org.apache.commons.codec.language.Soundex) $r3;

        $i2 = virtualinvoke $r4.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("", "");

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        $r5 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r6 = (org.apache.commons.codec.language.Soundex) $r5;

        $i4 = virtualinvoke $r6.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>(" ", " ");

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $i6 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Smith", "Smythe");

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l7);

        $r9 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r10 = (org.apache.commons.codec.language.Soundex) $r9;

        $i8 = virtualinvoke $r10.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Ann", "Andrew");

        $l9 = (long) $i8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9);

        $r11 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r12 = (org.apache.commons.codec.language.Soundex) $r11;

        $i10 = virtualinvoke $r12.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Margaret", "Andrew");

        $l11 = (long) $i10;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l11);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $i12 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Janet", "Margaret");

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l13);

        $r15 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r16 = (org.apache.commons.codec.language.Soundex) $r15;

        $i14 = virtualinvoke $r16.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Green", "Greene");

        $l15 = (long) $i14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l15);

        $r17 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r18 = (org.apache.commons.codec.language.Soundex) $r17;

        $i16 = virtualinvoke $r18.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Blotchet-Halls", "Greene");

        $l17 = (long) $i16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l17);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $i18 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Smith", "Smythe");

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l19);

        $r21 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r22 = (org.apache.commons.codec.language.Soundex) $r21;

        $i20 = virtualinvoke $r22.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Smithers", "Smythers");

        $l21 = (long) $i20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l21);

        $r23 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r24 = (org.apache.commons.codec.language.Soundex) $r23;

        $i22 = virtualinvoke $r24.<org.apache.commons.codec.language.Soundex: int difference(java.lang.String,java.lang.String)>("Anothers", "Brothers");

        $l23 = (long) $i22;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l23);

        return;
    }

    public void testEncodeBasic()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28;
        org.apache.commons.codec.language.Soundex $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("testing");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("T235", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("The");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("T000", $r6);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("quick");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Q200", $r9);

        $r10 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r11 = (org.apache.commons.codec.language.Soundex) $r10;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("brown");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B650", $r12);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("fox");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("F200", $r15);

        $r16 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r17 = (org.apache.commons.codec.language.Soundex) $r16;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("jumped");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("J513", $r18);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("over");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("O160", $r21);

        $r22 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r23 = (org.apache.commons.codec.language.Soundex) $r22;

        $r24 = virtualinvoke $r23.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("the");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("T000", $r24);

        $r25 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r26 = (org.apache.commons.codec.language.Soundex) $r25;

        $r27 = virtualinvoke $r26.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("lazy");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("L200", $r27);

        $r28 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r29 = (org.apache.commons.codec.language.Soundex) $r28;

        $r30 = virtualinvoke $r29.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("dogs");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("D200", $r30);

        return;
    }

    public void testEncodeBatch2()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46;
        org.apache.commons.codec.language.Soundex $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Allricht");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A462", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Eberhard");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("E166", $r6);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Engebrethson");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("E521", $r9);

        $r10 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r11 = (org.apache.commons.codec.language.Soundex) $r10;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Heimbach");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("H512", $r12);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Hanselmann");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("H524", $r15);

        $r16 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r17 = (org.apache.commons.codec.language.Soundex) $r16;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Hildebrand");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("H431", $r18);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Kavanagh");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("K152", $r21);

        $r22 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r23 = (org.apache.commons.codec.language.Soundex) $r22;

        $r24 = virtualinvoke $r23.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Lind");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("L530", $r24);

        $r25 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r26 = (org.apache.commons.codec.language.Soundex) $r25;

        $r27 = virtualinvoke $r26.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Lukaschowsky");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("L222", $r27);

        $r28 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r29 = (org.apache.commons.codec.language.Soundex) $r28;

        $r30 = virtualinvoke $r29.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("McDonnell");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("M235", $r30);

        $r31 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r32 = (org.apache.commons.codec.language.Soundex) $r31;

        $r33 = virtualinvoke $r32.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("McGee");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("M200", $r33);

        $r34 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r35 = (org.apache.commons.codec.language.Soundex) $r34;

        $r36 = virtualinvoke $r35.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Opnian");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("O155", $r36);

        $r37 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r38 = (org.apache.commons.codec.language.Soundex) $r37;

        $r39 = virtualinvoke $r38.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Oppenheimer");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("O155", $r39);

        $r40 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r41 = (org.apache.commons.codec.language.Soundex) $r40;

        $r42 = virtualinvoke $r41.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Riedemanas");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("R355", $r42);

        $r43 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r44 = (org.apache.commons.codec.language.Soundex) $r43;

        $r45 = virtualinvoke $r44.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Zita");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Z300", $r45);

        $r46 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r47 = (org.apache.commons.codec.language.Soundex) $r46;

        $r48 = virtualinvoke $r47.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Zitzmeinn");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Z325", $r48);

        return;
    }

    public void testEncodeBatch3()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4, $r7, $r10, $r13, $r16, $r19;
        org.apache.commons.codec.language.Soundex $r2, $r5, $r8, $r11, $r14, $r17, $r20;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Washington");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W252", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Lee");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("L000", $r6);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Gutierrez");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("G362", $r9);

        $r10 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r11 = (org.apache.commons.codec.language.Soundex) $r10;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Pfister");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("P236", $r12);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Jackson");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("J250", $r15);

        $r16 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r17 = (org.apache.commons.codec.language.Soundex) $r16;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Tymczak");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("T522", $r18);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("VanDeusen");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("V532", $r21);

        return;
    }

    public void testEncodeBatch4()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22;
        org.apache.commons.codec.language.Soundex $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("HOLMES");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("H452", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("ADOMOMI");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A355", $r6);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("VONDERLEHR");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("V536", $r9);

        $r10 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r11 = (org.apache.commons.codec.language.Soundex) $r10;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("BALL");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B400", $r12);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("SHAW");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S000", $r15);

        $r16 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r17 = (org.apache.commons.codec.language.Soundex) $r16;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("JACKSON");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("J250", $r18);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("SCANLON");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S545", $r21);

        $r22 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r23 = (org.apache.commons.codec.language.Soundex) $r22;

        $r24 = virtualinvoke $r23.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("SAINTJOHN");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S532", $r24);

        return;
    }

    public void testEncodeIgnoreApostrophes() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "OBrien";

        $r1[1] = "\'OBrien";

        $r1[2] = "O\'Brien";

        $r1[3] = "OB\'rien";

        $r1[4] = "OBr\'ien";

        $r1[5] = "OBri\'en";

        $r1[6] = "OBrie\'n";

        $r1[7] = "OBrien\'";

        virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: void checkEncodingVariations(java.lang.String,java.lang.String[])>("O165", $r1);

        return;
    }

    public void testEncodeIgnoreHyphens() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = newarray (java.lang.String)[11];

        $r1[0] = "KINGSMITH";

        $r1[1] = "-KINGSMITH";

        $r1[2] = "K-INGSMITH";

        $r1[3] = "KI-NGSMITH";

        $r1[4] = "KIN-GSMITH";

        $r1[5] = "KING-SMITH";

        $r1[6] = "KINGS-MITH";

        $r1[7] = "KINGSM-ITH";

        $r1[8] = "KINGSMI-TH";

        $r1[9] = "KINGSMIT-H";

        $r1[10] = "KINGSMITH-";

        virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: void checkEncodingVariations(java.lang.String,java.lang.String[])>("K525", $r1);

        return;
    }

    public void testEncodeIgnoreTrimmable()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1;
        org.apache.commons.codec.language.Soundex $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>(" \t\n\r Washington \t\n\r ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W252", $r3);

        return;
    }

    public void testHWRuleEx1()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1;
        org.apache.commons.codec.language.Soundex $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Ashcraft");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A261", $r3);

        return;
    }

    public void testHWRuleEx2()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4;
        org.apache.commons.codec.language.Soundex $r2, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("BOOTHDAVIS");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B312", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("BOOTH-DAVIS");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B312", $r6);

        return;
    }

    public void testHWRuleEx3() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4;
        org.apache.commons.codec.language.Soundex $r2, $r5;
        java.lang.String $r3, $r6;
        java.lang.String[] $r7;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Sgler");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S460", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Swhgler");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S460", $r6);

        $r7 = newarray (java.lang.String)[16];

        $r7[0] = "SAILOR";

        $r7[1] = "SALYER";

        $r7[2] = "SAYLOR";

        $r7[3] = "SCHALLER";

        $r7[4] = "SCHELLER";

        $r7[5] = "SCHILLER";

        $r7[6] = "SCHOOLER";

        $r7[7] = "SCHULER";

        $r7[8] = "SCHUYLER";

        $r7[9] = "SEILER";

        $r7[10] = "SEYLER";

        $r7[11] = "SHOLAR";

        $r7[12] = "SHULER";

        $r7[13] = "SILAR";

        $r7[14] = "SILER";

        $r7[15] = "SILLER";

        virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: void checkEncodingVariations(java.lang.String,java.lang.String[])>("S460", $r7);

        return;
    }

    public void testMsSqlServer1()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4;
        org.apache.commons.codec.language.Soundex $r2, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Smith");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S530", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Smythe");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S530", $r6);

        return;
    }

    public void testMsSqlServer2() throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.SoundexTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "Erickson";

        $r1[1] = "Erickson";

        $r1[2] = "Erikson";

        $r1[3] = "Ericson";

        $r1[4] = "Ericksen";

        $r1[5] = "Ericsen";

        virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: void checkEncodingVariations(java.lang.String,java.lang.String[])>("E625", $r1);

        return;
    }

    public void testMsSqlServer3()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25;
        org.apache.commons.codec.language.Soundex $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r2 = (org.apache.commons.codec.language.Soundex) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Ann");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A500", $r3);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r5 = (org.apache.commons.codec.language.Soundex) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Andrew");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A536", $r6);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r8 = (org.apache.commons.codec.language.Soundex) $r7;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Janet");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("J530", $r9);

        $r10 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r11 = (org.apache.commons.codec.language.Soundex) $r10;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Margaret");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("M626", $r12);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r14 = (org.apache.commons.codec.language.Soundex) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Steven");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("S315", $r15);

        $r16 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r17 = (org.apache.commons.codec.language.Soundex) $r16;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Michael");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("M240", $r18);

        $r19 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r20 = (org.apache.commons.codec.language.Soundex) $r19;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Robert");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("R163", $r21);

        $r22 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r23 = (org.apache.commons.codec.language.Soundex) $r22;

        $r24 = virtualinvoke $r23.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Laura");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("L600", $r24);

        $r25 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r26 = (org.apache.commons.codec.language.Soundex) $r25;

        $r27 = virtualinvoke $r26.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("Anne");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A500", $r27);

        return;
    }

    public void testNewInstance()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = new org.apache.commons.codec.language.Soundex;

        specialinvoke $r1.<org.apache.commons.codec.language.Soundex: void <init>()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>("Williams");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W452", $r2);

        return;
    }

    public void testNewInstance2()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;
        java.lang.String $r2, $r4;
        char[] $r3;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = new org.apache.commons.codec.language.Soundex;

        $r2 = "01230120022455012623010202";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r1.<org.apache.commons.codec.language.Soundex: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r1.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>("Williams");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W452", $r4);

        return;
    }

    public void testNewInstance3()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = new org.apache.commons.codec.language.Soundex;

        specialinvoke $r1.<org.apache.commons.codec.language.Soundex: void <init>(java.lang.String)>("01230120022455012623010202");

        $r2 = virtualinvoke $r1.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>("Williams");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W452", $r2);

        return;
    }

    public void testSoundexUtilsConstructable()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.SoundexUtils $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = new org.apache.commons.codec.language.SoundexUtils;

        specialinvoke $r1.<org.apache.commons.codec.language.SoundexUtils: void <init>()>();

        return;
    }

    public void testSoundexUtilsNullBehaviour()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        java.lang.String $r1, $r2;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r1);

        $r2 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r2);

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)>(null, "");

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $i2 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)>("", null);

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        return;
    }

    public void testUsEnglishStatic()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = <org.apache.commons.codec.language.Soundex: org.apache.commons.codec.language.Soundex US_ENGLISH>;

        $r2 = virtualinvoke $r1.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>("Williams");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("W452", $r2);

        return;
    }

    public void testUsMappingEWithAcute()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r2, $r5, $r8;
        org.apache.commons.codec.language.Soundex $r3, $r6, $r9;
        java.lang.String $r4, $r7, $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r3 = (org.apache.commons.codec.language.Soundex) $r2;

        $r4 = virtualinvoke $r3.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("e");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("E000", $r4);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(233);

        if $z0 == 0 goto label4;

     label1:
        $r8 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r9 = (org.apache.commons.codec.language.Soundex) $r8;

        $r10 = virtualinvoke $r9.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("\u00e9");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\u00c9000", $r10);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected IllegalArgumentException not thrown");

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        goto label5;

     label4:
        $r5 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r6 = (org.apache.commons.codec.language.Soundex) $r5;

        $r7 = virtualinvoke $r6.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("\u00e9");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r7);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void testUsMappingOWithDiaeresis()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.StringEncoder $r2, $r5, $r8;
        org.apache.commons.codec.language.Soundex $r3, $r6, $r9;
        java.lang.String $r4, $r7, $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r3 = (org.apache.commons.codec.language.Soundex) $r2;

        $r4 = virtualinvoke $r3.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("o");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("O000", $r4);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(246);

        if $z0 == 0 goto label4;

     label1:
        $r8 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r9 = (org.apache.commons.codec.language.Soundex) $r8;

        $r10 = virtualinvoke $r9.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("\u00f6");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\u00d6000", $r10);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected IllegalArgumentException not thrown");

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        goto label5;

     label4:
        $r5 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.StringEncoder getStringEncoder()>();

        $r6 = (org.apache.commons.codec.language.Soundex) $r5;

        $r7 = virtualinvoke $r6.<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)>("\u00f6");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r7);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected volatile org.apache.commons.codec.StringEncoder createStringEncoder()
    {
        org.apache.commons.codec.language.SoundexTest r0;
        org.apache.commons.codec.language.Soundex $r1;

        r0 := @this: org.apache.commons.codec.language.SoundexTest;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.SoundexTest: org.apache.commons.codec.language.Soundex createStringEncoder()>();

        return $r1;
    }
}
