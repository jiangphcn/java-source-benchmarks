public class org.apache.commons.codec.digest.Md5CryptTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCtor()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        org.apache.commons.codec.digest.Md5Crypt $r1;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = new org.apache.commons.codec.digest.Md5Crypt;

        specialinvoke $r1.<org.apache.commons.codec.digest.Md5Crypt: void <init>()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1);

        return;
    }

    public void testMd5CryptStrings()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("", "$1$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$foo$9mS5ExwgIECGE5YKlD5o91", $r1);

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$1$1234");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$1234$ImZYBLmYC.rbBKg9ERxX70", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$1$1234$567");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$1234$ImZYBLmYC.rbBKg9ERxX70", $r3);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$1$1234$567$890");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$1234$ImZYBLmYC.rbBKg9ERxX70", $r4);

        $r5 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$1$1234567890123456");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$12345678$hj0uLpdidjPhbMMZeno8X/", $r5);

        $r6 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$1$123456789012345678");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$12345678$hj0uLpdidjPhbMMZeno8X/", $r6);

        return;
    }

    public void testMd5CryptBytes()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        byte[] $r1, $r6;
        java.lang.String $r2, $r3, $r5, $r7;
        java.nio.charset.Charset $r4;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = newarray (byte)[0];

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r1, "$1$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$foo$9mS5ExwgIECGE5YKlD5o91", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("t\u00e4st", "$1$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$./$52agTEQZs877L9jyJnCNZ1", $r3);

        $r5 = "t\u00e4st";

        $r4 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset ISO_8859_1>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r7 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r6, "$1$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$./$J2UbKzGe0Cpe63WZAt6p//", $r7);

        return;
    }

    public void testMd5CryptExplicitCall()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        java.lang.String $r1, $r3, $r4, $r6;
        byte[] $r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[])>($r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean matches(java.lang.String)>("^\\$1\\$[a-zA-Z0-9./]{0,8}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = "secret";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r6 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String)>($r5, null);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean matches(java.lang.String)>("^\\$1\\$[a-zA-Z0-9./]{0,8}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testMd5CryptLongInput()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("12345678901234567890", "$1$1234");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$1$1234$MoxekaNNUgfPRVqoeYjCD/", $r1);

        return;
    }

    public void testMd5CryptNullData()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[])>(null);

        return;
    }

    public void testMd5CryptWithEmptySalt()
    {
        org.apache.commons.codec.digest.Md5CryptTest r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.apache.commons.codec.digest.Md5CryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String)>($r2, "");

        return;
    }
}
