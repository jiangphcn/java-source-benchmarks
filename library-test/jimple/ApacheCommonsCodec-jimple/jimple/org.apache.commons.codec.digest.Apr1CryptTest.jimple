public class org.apache.commons.codec.digest.Apr1CryptTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testApr1CryptStrings()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$TqI9WECO");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$TqI9WECO$LHZB2DqRlk9nObiB6vJG9.", $r1);

        $r2 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("", "$apr1$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$foo$P27KyD1htb4EllIPEYhqi0", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$1234");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$1234$mAlH7FRST6FiRZ.kcYL.j1", $r3);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$1234$567");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$1234$mAlH7FRST6FiRZ.kcYL.j1", $r4);

        $r5 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$1234$567$890");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$1234$mAlH7FRST6FiRZ.kcYL.j1", $r5);

        $r6 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$1234567890123456");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$12345678$0lqb/6VUFP8JY/s/jTrIk0", $r6);

        $r7 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "$apr1$123456789012345678");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$12345678$0lqb/6VUFP8JY/s/jTrIk0", $r7);

        return;
    }

    public void testApr1CryptBytes()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String r2, $r4, $r6, $r7, $r9, $r11;
        byte[] $r3, $r5, $r10;
        java.nio.charset.Charset $r8;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r3 = newarray (byte)[4];

        $r3[0] = 33;

        $r3[1] = 98;

        $r3[2] = 99;

        $r3[3] = 46;

        r2 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[])>($r3);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("!bc.", r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r4);

        $r5 = newarray (byte)[0];

        $r6 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r5, "$apr1$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$foo$P27KyD1htb4EllIPEYhqi0", $r6);

        $r7 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("t\u00e4st", "$apr1$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$./$EeFrYzWWbmTyGdf4xULYc.", $r7);

        $r9 = "t\u00e4st";

        $r8 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset ISO_8859_1>;

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r8);

        $r11 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r10, "$apr1$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$./$kCwT1pY9qXAJElYG9q1QE1", $r11);

        return;
    }

    public void testApr1CryptExplicitCall()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String $r1, $r2, $r4, $r5, $r7;
        byte[] $r3, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "1234");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$1234$mAlH7FRST6FiRZ.kcYL.j1", $r1);

        $r2 = "secret";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[])>($r3);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean matches(java.lang.String)>("^\\$apr1\\$[a-zA-Z0-9./]{0,8}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = "secret";

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        $r7 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r6, null);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean matches(java.lang.String)>("^\\$apr1\\$[a-zA-Z0-9./]{0,8}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testApr1LongSalt()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String,java.lang.String)>("secret", "12345678901234567890");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$apr1$12345678$0lqb/6VUFP8JY/s/jTrIk0", $r1);

        return;
    }

    public void testApr1CryptNullData()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[])>(null);

        return;
    }

    public void testApr1CryptWithEmptySalt()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r2, "");

        return;
    }

    public void testApr1CryptWithoutSalt()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        r1 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String)>("secret");

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^\\$apr1\\$[a-zA-Z0-9\\./]{8}\\$[a-zA-Z0-9\\./]{22}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        r2 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(java.lang.String)>("secret");

        staticinvoke <org.junit.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void testApr1CryptWithInvalidSalt()
    {
        org.apache.commons.codec.digest.Apr1CryptTest r0;
        byte[] $r1;

        r0 := @this: org.apache.commons.codec.digest.Apr1CryptTest;

        $r1 = newarray (byte)[0];

        staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r1, "!");

        return;
    }
}
