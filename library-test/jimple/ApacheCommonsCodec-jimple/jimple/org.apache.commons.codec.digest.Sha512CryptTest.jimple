public class org.apache.commons.codec.digest.Sha512CryptTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testSha512CryptStrings()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("", "$6$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$foo$Nywkte7LPWjaJhWjNeGJN.dFdY3pN1wYlGifyRLYOVlGS9EMSiZaDDe/BGSOYQ327q9.32I4UqQ5odsqvsBLX/", $r1);

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$6$45678");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$45678$f2en/Y053Knir/wu/T8DQKSbiUGcPcbXKsmyVlP820dIpXoY0KlqgUqRVFfavdRXwDMUZYsxPOymA4zgX0qE5.", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$6$45678$012");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$45678$f2en/Y053Knir/wu/T8DQKSbiUGcPcbXKsmyVlP820dIpXoY0KlqgUqRVFfavdRXwDMUZYsxPOymA4zgX0qE5.", $r3);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$6$45678$012$456");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$45678$f2en/Y053Knir/wu/T8DQKSbiUGcPcbXKsmyVlP820dIpXoY0KlqgUqRVFfavdRXwDMUZYsxPOymA4zgX0qE5.", $r4);

        $r5 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$6$1234567890123456");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$1234567890123456$d2HCAnimIF5VMqUnwaZ/4JhNDJ.ttsjm0nbbmc9eE7xUYiw79GMvXUc5ZqG5BlqkXSbASZxrvR0QefAgdLbeH.", $r5);

        $r6 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$6$1234567890123456789");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$1234567890123456$d2HCAnimIF5VMqUnwaZ/4JhNDJ.ttsjm0nbbmc9eE7xUYiw79GMvXUc5ZqG5BlqkXSbASZxrvR0QefAgdLbeH.", $r6);

        return;
    }

    public void testSha512CryptBytes()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        byte[] $r1, $r6;
        java.lang.String $r2, $r3, $r5, $r7;
        java.nio.charset.Charset $r4;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r1 = newarray (byte)[0];

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r1, "$6$foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$foo$Nywkte7LPWjaJhWjNeGJN.dFdY3pN1wYlGifyRLYOVlGS9EMSiZaDDe/BGSOYQ327q9.32I4UqQ5odsqvsBLX/", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("t\u00e4st", "$6$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$./$fKtWqslQkwI8ZxjdWoeS.jHHrte97bZxiwB5gwCRHX6LG62fUhT6Bb5MRrjWvieh0C/gxh8ItFuTsVy80VrED1", $r3);

        $r5 = "t\u00e4st";

        $r4 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset ISO_8859_1>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r7 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r6, "$6$./$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$./$L49DSK.d2df/LxGLJQMyS5A/Um.TdHqgc46j5FpScEPlqQHP5dEazltaDNDZ6UEs2mmNI6kPwtH/rsP9g5zBI.", $r7);

        return;
    }

    public void testSha512CryptExplicitCall()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        java.lang.String $r1, $r3, $r4, $r6;
        byte[] $r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[])>($r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean matches(java.lang.String)>("^\\$6\\$[a-zA-Z0-9./]{0,16}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = "secret";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r6 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[],java.lang.String)>($r5, null);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean matches(java.lang.String)>("^\\$6\\$[a-zA-Z0-9./]{0,16}\\$.{1,}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testSha512CryptNullData()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[])>(null);

        return;
    }

    public void testSha512CryptNullSalt()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        return;
    }

    public void testSha2CryptRounds()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        java.nio.charset.Charset $r1, $r5, $r9;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12;
        byte[] $r3, $r7, $r11;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r2 = "secret";

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha256Crypt(byte[],java.lang.String)>($r3, "$5$rounds=50$abcd$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$5$rounds=1000$abcd$b8MCU4GEeZIekOy5ahQ8EWfT330hvYGVeDYkBxXBva.", $r4);

        $r6 = "secret";

        $r5 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        $r8 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha256Crypt(byte[],java.lang.String)>($r7, "$5$rounds=1001$abcd$");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$5$rounds=1001$abcd$SQsJZs7KXKdd2DtklI3TY3tkD7UYA99RD0FBLm4Sk48", $r8);

        $r10 = "secret";

        $r9 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $r12 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha256Crypt(byte[],java.lang.String)>($r11, "$5$rounds=9999$abcd");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$5$rounds=9999$abcd$Rh/8ngVh9oyuS6lL3.fsq.9xbvXJsfyKWxSjO2mPIa7", $r12);

        return;
    }

    public void testSha2CryptWrongSalt()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r2 = "secret";

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[],java.lang.String)>($r3, "xx");

        return;
    }

    public void testSha512CryptWithEmptySalt()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[],java.lang.String)>($r2, "");

        return;
    }

    public void testSha256LargetThanBlocksize()
    {
        org.apache.commons.codec.digest.Sha512CryptTest r0;
        byte[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.codec.digest.Sha512CryptTest;

        r1 = newarray (byte)[200];

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r1, 0, 200, 65);

        $r2 = staticinvoke <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha512Crypt(byte[],java.lang.String)>(r1, "$6$abc");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("$6$abc$oP/h8PRhCKIA66KSTjGwNsQMSLLZnuFOTjOhrqNrDkKgjTlpePSqibB0qtmDapMbP/zN1cUEYSeHFrpgqZ.GG1", $r2);

        return;
    }
}
