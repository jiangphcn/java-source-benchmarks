public class org.apache.commons.codec.binary.BinaryCodecTest extends java.lang.Object
{
    private static final int BIT_0;
    private static final int BIT_1;
    private static final int BIT_2;
    private static final int BIT_3;
    private static final int BIT_4;
    private static final int BIT_5;
    private static final int BIT_6;
    private static final int BIT_7;
    org.apache.commons.codec.binary.BinaryCodec instance;

    public void <init>()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance> = null;

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        org.apache.commons.codec.binary.BinaryCodec $r1;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        $r1 = new org.apache.commons.codec.binary.BinaryCodec;

        specialinvoke $r1.<org.apache.commons.codec.binary.BinaryCodec: void <init>()>();

        r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance> = $r1;

        return;
    }

    public void tearDown() throws java.lang.Exception
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance> = null;

        return;
    }

    public void testDecodeObjectException()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.lang.Object $r2;
        org.apache.commons.codec.binary.BinaryCodec $r3;
        org.apache.commons.codec.DecoderException $r5;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

     label1:
        $r3 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        virtualinvoke $r3.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object decode(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected DecoderException");

        return;

        catch org.apache.commons.codec.DecoderException from label1 to label2 with label3;
    }

    public void testDecodeObject() throws java.lang.Exception
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] $r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r2 = newarray (byte)[1];

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r2, "00000000");

        r3 = newarray (byte)[1];

        r3[0] = 1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r3, "00000001");

        r4 = newarray (byte)[1];

        r4[0] = 3;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r4, "00000011");

        r5 = newarray (byte)[1];

        r5[0] = 7;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r5, "00000111");

        r6 = newarray (byte)[1];

        r6[0] = 15;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r6, "00001111");

        r7 = newarray (byte)[1];

        r7[0] = 31;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r7, "00011111");

        r8 = newarray (byte)[1];

        r8[0] = 63;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r8, "00111111");

        r9 = newarray (byte)[1];

        r9[0] = 127;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r9, "01111111");

        r10 = newarray (byte)[1];

        r10[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r10, "11111111");

        r11 = newarray (byte)[2];

        r11[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r11, "0000000011111111");

        r12 = newarray (byte)[2];

        r12[1] = 1;

        r12[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r12, "0000000111111111");

        r13 = newarray (byte)[2];

        r13[1] = 3;

        r13[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r13, "0000001111111111");

        r14 = newarray (byte)[2];

        r14[1] = 7;

        r14[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r14, "0000011111111111");

        r15 = newarray (byte)[2];

        r15[1] = 15;

        r15[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r15, "0000111111111111");

        r16 = newarray (byte)[2];

        r16[1] = 31;

        r16[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r16, "0001111111111111");

        r17 = newarray (byte)[2];

        r17[1] = 63;

        r17[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r17, "0011111111111111");

        r18 = newarray (byte)[2];

        r18[1] = 127;

        r18[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r18, "0111111111111111");

        r19 = newarray (byte)[2];

        r19[1] = -1;

        r19[0] = -1;

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>(r19, "1111111111111111");

        $r1 = newarray (byte)[0];

        virtualinvoke r0.<org.apache.commons.codec.binary.BinaryCodecTest: void assertDecodeObject(byte[],java.lang.String)>($r1, null);

        return;
    }

    void assertDecodeObject(byte[], java.lang.String) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] r1, $r9, r21, r22, r23;
        java.lang.String r2, $r5, $r6, $r11, $r12, $r16, $r17;
        org.apache.commons.codec.binary.BinaryCodec $r3, $r8, $r13, $r18, $r20;
        java.lang.Object $r4, $r10, $r15, $r19;
        java.nio.charset.Charset $r7;
        char[] $r14;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r4 = virtualinvoke $r3.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object decode(java.lang.Object)>(r2);

        r21 = (byte[]) $r4;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r1);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r21);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if r2 != null goto label1;

        $r20 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r22 = virtualinvoke $r20.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>(null);

        goto label2;

     label1:
        $r8 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r7 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r9 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7);

        $r10 = virtualinvoke $r8.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object decode(java.lang.Object)>($r9);

        r22 = (byte[]) $r10;

     label2:
        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>(r1);

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[])>(r22);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        if r2 != null goto label3;

        $r18 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r19 = virtualinvoke $r18.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object decode(java.lang.Object)>(null);

        r23 = (byte[]) $r19;

        goto label4;

     label3:
        $r13 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r14 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        $r15 = virtualinvoke $r13.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object decode(java.lang.Object)>($r14);

        r23 = (byte[]) $r15;

     label4:
        $r16 = new java.lang.String;

        specialinvoke $r16.<java.lang.String: void <init>(byte[])>(r1);

        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>(r23);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17);

        return;
    }

    public void testDecodeByteArray()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.nio.charset.Charset $r1, $r7, $r13, $r19, $r25, $r31, $r37, $r43, $r49, $r55, $r61, $r67, $r73, $r79, $r85, $r91, $r97, $r103;
        java.lang.String $r2, $r5, $r6, $r8, $r11, $r12, $r14, $r17, $r18, $r20, $r23, $r24, $r26, $r29, $r30, $r32, $r35, $r36, $r38, $r41, $r42, $r44, $r47, $r48, $r50, $r53, $r54, $r56, $r59, $r60, $r62, $r65, $r66, $r68, $r71, $r72, $r74, $r77, $r78, $r80, $r83, $r84, $r86, $r89, $r90, $r92, $r95, $r96, $r98, $r101, $r102, $r104, $r107, $r108;
        org.apache.commons.codec.binary.BinaryCodec $r3, $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51, $r57, $r63, $r69, $r75, $r81, $r87, $r93, $r99, $r105;
        byte[] $r4, $r10, $r16, $r22, $r28, $r34, $r40, $r46, $r52, $r58, $r64, $r70, $r76, $r82, $r88, $r94, $r100, $r106, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142, r143, r144;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r109 = newarray (byte)[1];

        $r3 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r2 = "00000000";

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        r110 = virtualinvoke $r3.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r4);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r109);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r110);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        r111 = newarray (byte)[1];

        r111[0] = 1;

        $r9 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r8 = "00000001";

        $r7 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7);

        r112 = virtualinvoke $r9.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r10);

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>(r111);

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[])>(r112);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        r113 = newarray (byte)[1];

        r113[0] = 3;

        $r15 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r14 = "00000011";

        $r13 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r16 = virtualinvoke $r14.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r13);

        r114 = virtualinvoke $r15.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r16);

        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>(r113);

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>(r114);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        r115 = newarray (byte)[1];

        r115[0] = 7;

        $r21 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r20 = "00000111";

        $r19 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r22 = virtualinvoke $r20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r19);

        r116 = virtualinvoke $r21.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r22);

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r115);

        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[])>(r116);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24);

        r117 = newarray (byte)[1];

        r117[0] = 15;

        $r27 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r26 = "00001111";

        $r25 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r28 = virtualinvoke $r26.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r25);

        r118 = virtualinvoke $r27.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r28);

        $r29 = new java.lang.String;

        specialinvoke $r29.<java.lang.String: void <init>(byte[])>(r117);

        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[])>(r118);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30);

        r119 = newarray (byte)[1];

        r119[0] = 31;

        $r33 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r32 = "00011111";

        $r31 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r34 = virtualinvoke $r32.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r31);

        r120 = virtualinvoke $r33.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r34);

        $r35 = new java.lang.String;

        specialinvoke $r35.<java.lang.String: void <init>(byte[])>(r119);

        $r36 = new java.lang.String;

        specialinvoke $r36.<java.lang.String: void <init>(byte[])>(r120);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36);

        r121 = newarray (byte)[1];

        r121[0] = 63;

        $r39 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r38 = "00111111";

        $r37 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r40 = virtualinvoke $r38.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r37);

        r122 = virtualinvoke $r39.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r40);

        $r41 = new java.lang.String;

        specialinvoke $r41.<java.lang.String: void <init>(byte[])>(r121);

        $r42 = new java.lang.String;

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>(r122);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r41, $r42);

        r123 = newarray (byte)[1];

        r123[0] = 127;

        $r45 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r44 = "01111111";

        $r43 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r46 = virtualinvoke $r44.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r43);

        r124 = virtualinvoke $r45.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r46);

        $r47 = new java.lang.String;

        specialinvoke $r47.<java.lang.String: void <init>(byte[])>(r123);

        $r48 = new java.lang.String;

        specialinvoke $r48.<java.lang.String: void <init>(byte[])>(r124);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r47, $r48);

        r125 = newarray (byte)[1];

        r125[0] = -1;

        $r51 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r50 = "11111111";

        $r49 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r52 = virtualinvoke $r50.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r49);

        r126 = virtualinvoke $r51.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r52);

        $r53 = new java.lang.String;

        specialinvoke $r53.<java.lang.String: void <init>(byte[])>(r125);

        $r54 = new java.lang.String;

        specialinvoke $r54.<java.lang.String: void <init>(byte[])>(r126);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r53, $r54);

        r127 = newarray (byte)[2];

        r127[0] = -1;

        $r57 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r56 = "0000000011111111";

        $r55 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r58 = virtualinvoke $r56.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r55);

        r128 = virtualinvoke $r57.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r58);

        $r59 = new java.lang.String;

        specialinvoke $r59.<java.lang.String: void <init>(byte[])>(r127);

        $r60 = new java.lang.String;

        specialinvoke $r60.<java.lang.String: void <init>(byte[])>(r128);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r59, $r60);

        r129 = newarray (byte)[2];

        r129[1] = 1;

        r129[0] = -1;

        $r63 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r62 = "0000000111111111";

        $r61 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r64 = virtualinvoke $r62.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r61);

        r130 = virtualinvoke $r63.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r64);

        $r65 = new java.lang.String;

        specialinvoke $r65.<java.lang.String: void <init>(byte[])>(r129);

        $r66 = new java.lang.String;

        specialinvoke $r66.<java.lang.String: void <init>(byte[])>(r130);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r65, $r66);

        r131 = newarray (byte)[2];

        r131[1] = 3;

        r131[0] = -1;

        $r69 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r68 = "0000001111111111";

        $r67 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r70 = virtualinvoke $r68.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r67);

        r132 = virtualinvoke $r69.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r70);

        $r71 = new java.lang.String;

        specialinvoke $r71.<java.lang.String: void <init>(byte[])>(r131);

        $r72 = new java.lang.String;

        specialinvoke $r72.<java.lang.String: void <init>(byte[])>(r132);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r71, $r72);

        r133 = newarray (byte)[2];

        r133[1] = 7;

        r133[0] = -1;

        $r75 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r74 = "0000011111111111";

        $r73 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r76 = virtualinvoke $r74.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r73);

        r134 = virtualinvoke $r75.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r76);

        $r77 = new java.lang.String;

        specialinvoke $r77.<java.lang.String: void <init>(byte[])>(r133);

        $r78 = new java.lang.String;

        specialinvoke $r78.<java.lang.String: void <init>(byte[])>(r134);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r77, $r78);

        r135 = newarray (byte)[2];

        r135[1] = 15;

        r135[0] = -1;

        $r81 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r80 = "0000111111111111";

        $r79 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r82 = virtualinvoke $r80.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r79);

        r136 = virtualinvoke $r81.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r82);

        $r83 = new java.lang.String;

        specialinvoke $r83.<java.lang.String: void <init>(byte[])>(r135);

        $r84 = new java.lang.String;

        specialinvoke $r84.<java.lang.String: void <init>(byte[])>(r136);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r83, $r84);

        r137 = newarray (byte)[2];

        r137[1] = 31;

        r137[0] = -1;

        $r87 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r86 = "0001111111111111";

        $r85 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r88 = virtualinvoke $r86.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r85);

        r138 = virtualinvoke $r87.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r88);

        $r89 = new java.lang.String;

        specialinvoke $r89.<java.lang.String: void <init>(byte[])>(r137);

        $r90 = new java.lang.String;

        specialinvoke $r90.<java.lang.String: void <init>(byte[])>(r138);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r89, $r90);

        r139 = newarray (byte)[2];

        r139[1] = 63;

        r139[0] = -1;

        $r93 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r92 = "0011111111111111";

        $r91 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r94 = virtualinvoke $r92.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r91);

        r140 = virtualinvoke $r93.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r94);

        $r95 = new java.lang.String;

        specialinvoke $r95.<java.lang.String: void <init>(byte[])>(r139);

        $r96 = new java.lang.String;

        specialinvoke $r96.<java.lang.String: void <init>(byte[])>(r140);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r95, $r96);

        r141 = newarray (byte)[2];

        r141[1] = 127;

        r141[0] = -1;

        $r99 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r98 = "0111111111111111";

        $r97 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r100 = virtualinvoke $r98.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r97);

        r142 = virtualinvoke $r99.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r100);

        $r101 = new java.lang.String;

        specialinvoke $r101.<java.lang.String: void <init>(byte[])>(r141);

        $r102 = new java.lang.String;

        specialinvoke $r102.<java.lang.String: void <init>(byte[])>(r142);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r101, $r102);

        r143 = newarray (byte)[2];

        r143[1] = -1;

        r143[0] = -1;

        $r105 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r104 = "1111111111111111";

        $r103 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r106 = virtualinvoke $r104.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r103);

        r144 = virtualinvoke $r105.<org.apache.commons.codec.binary.BinaryCodec: byte[] decode(byte[])>($r106);

        $r107 = new java.lang.String;

        specialinvoke $r107.<java.lang.String: void <init>(byte[])>(r143);

        $r108 = new java.lang.String;

        specialinvoke $r108.<java.lang.String: void <init>(byte[])>(r144);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r107, $r108);

        return;
    }

    public void testToByteArrayFromString()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        org.apache.commons.codec.binary.BinaryCodec $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55;
        java.lang.String $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r53, $r54;
        byte[] $r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r57 = newarray (byte)[1];

        $r1 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r58 = virtualinvoke $r1.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00000000");

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>(r57);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>(r58);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        r59 = newarray (byte)[1];

        r59[0] = 1;

        $r4 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r60 = virtualinvoke $r4.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00000001");

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r59);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r60);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        r61 = newarray (byte)[1];

        r61[0] = 3;

        $r7 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r62 = virtualinvoke $r7.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00000011");

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>(r61);

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[])>(r62);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        r63 = newarray (byte)[1];

        r63[0] = 7;

        $r10 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r64 = virtualinvoke $r10.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00000111");

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>(r63);

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[])>(r64);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        r65 = newarray (byte)[1];

        r65[0] = 15;

        $r13 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r66 = virtualinvoke $r13.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00001111");

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>(r65);

        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(byte[])>(r66);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        r67 = newarray (byte)[1];

        r67[0] = 31;

        $r16 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r68 = virtualinvoke $r16.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00011111");

        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>(r67);

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>(r68);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        r69 = newarray (byte)[1];

        r69[0] = 63;

        $r19 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r70 = virtualinvoke $r19.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("00111111");

        $r20 = new java.lang.String;

        specialinvoke $r20.<java.lang.String: void <init>(byte[])>(r69);

        $r21 = new java.lang.String;

        specialinvoke $r21.<java.lang.String: void <init>(byte[])>(r70);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21);

        r71 = newarray (byte)[1];

        r71[0] = 127;

        $r22 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r72 = virtualinvoke $r22.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("01111111");

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r71);

        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[])>(r72);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24);

        r73 = newarray (byte)[1];

        r73[0] = -1;

        $r25 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r74 = virtualinvoke $r25.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("11111111");

        $r26 = new java.lang.String;

        specialinvoke $r26.<java.lang.String: void <init>(byte[])>(r73);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>(r74);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        r75 = newarray (byte)[2];

        r75[0] = -1;

        $r28 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r76 = virtualinvoke $r28.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0000000011111111");

        $r29 = new java.lang.String;

        specialinvoke $r29.<java.lang.String: void <init>(byte[])>(r75);

        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[])>(r76);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30);

        r77 = newarray (byte)[2];

        r77[1] = 1;

        r77[0] = -1;

        $r31 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r78 = virtualinvoke $r31.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0000000111111111");

        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(byte[])>(r77);

        $r33 = new java.lang.String;

        specialinvoke $r33.<java.lang.String: void <init>(byte[])>(r78);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33);

        r79 = newarray (byte)[2];

        r79[1] = 3;

        r79[0] = -1;

        $r34 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r80 = virtualinvoke $r34.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0000001111111111");

        $r35 = new java.lang.String;

        specialinvoke $r35.<java.lang.String: void <init>(byte[])>(r79);

        $r36 = new java.lang.String;

        specialinvoke $r36.<java.lang.String: void <init>(byte[])>(r80);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36);

        r81 = newarray (byte)[2];

        r81[1] = 7;

        r81[0] = -1;

        $r37 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r82 = virtualinvoke $r37.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0000011111111111");

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(byte[])>(r81);

        $r39 = new java.lang.String;

        specialinvoke $r39.<java.lang.String: void <init>(byte[])>(r82);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39);

        r83 = newarray (byte)[2];

        r83[1] = 15;

        r83[0] = -1;

        $r40 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r84 = virtualinvoke $r40.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0000111111111111");

        $r41 = new java.lang.String;

        specialinvoke $r41.<java.lang.String: void <init>(byte[])>(r83);

        $r42 = new java.lang.String;

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>(r84);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r41, $r42);

        r85 = newarray (byte)[2];

        r85[1] = 31;

        r85[0] = -1;

        $r43 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r86 = virtualinvoke $r43.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0001111111111111");

        $r44 = new java.lang.String;

        specialinvoke $r44.<java.lang.String: void <init>(byte[])>(r85);

        $r45 = new java.lang.String;

        specialinvoke $r45.<java.lang.String: void <init>(byte[])>(r86);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r45);

        r87 = newarray (byte)[2];

        r87[1] = 63;

        r87[0] = -1;

        $r46 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r88 = virtualinvoke $r46.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0011111111111111");

        $r47 = new java.lang.String;

        specialinvoke $r47.<java.lang.String: void <init>(byte[])>(r87);

        $r48 = new java.lang.String;

        specialinvoke $r48.<java.lang.String: void <init>(byte[])>(r88);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r47, $r48);

        r89 = newarray (byte)[2];

        r89[1] = 127;

        r89[0] = -1;

        $r49 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r90 = virtualinvoke $r49.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("0111111111111111");

        $r50 = new java.lang.String;

        specialinvoke $r50.<java.lang.String: void <init>(byte[])>(r89);

        $r51 = new java.lang.String;

        specialinvoke $r51.<java.lang.String: void <init>(byte[])>(r90);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        r91 = newarray (byte)[2];

        r91[1] = -1;

        r91[0] = -1;

        $r52 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        r92 = virtualinvoke $r52.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>("1111111111111111");

        $r53 = new java.lang.String;

        specialinvoke $r53.<java.lang.String: void <init>(byte[])>(r91);

        $r54 = new java.lang.String;

        specialinvoke $r54.<java.lang.String: void <init>(byte[])>(r92);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r53, $r54);

        $r55 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r56 = virtualinvoke $r55.<org.apache.commons.codec.binary.BinaryCodec: byte[] toByteArray(java.lang.String)>(null);

        $i0 = lengthof $r56;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        return;
    }

    public void testFromAsciiCharArray()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] $r1, $r3, $r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        char[] $r2, $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57, $r61, $r65, $r69, $r73;
        java.lang.String $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r38, $r39, $r40, $r42, $r43, $r44, $r46, $r47, $r48, $r50, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r62, $r63, $r64, $r66, $r67, $r68, $r70, $r71, $r72, $r74, $r75;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        $r1 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>(null);

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $r2 = newarray (char)[0];

        $r3 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r2);

        $i2 = lengthof $r3;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        r77 = newarray (byte)[1];

        $r4 = "00000000";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        r78 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r5);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r77);

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r78);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        r79 = newarray (byte)[1];

        r79[0] = 1;

        $r8 = "00000001";

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        r80 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r9);

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>(r79);

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>(r80);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11);

        r81 = newarray (byte)[1];

        r81[0] = 3;

        $r12 = "00000011";

        $r13 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        r82 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r13);

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>(r81);

        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(byte[])>(r82);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        r83 = newarray (byte)[1];

        r83[0] = 7;

        $r16 = "00000111";

        $r17 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        r84 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r17);

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>(r83);

        $r19 = new java.lang.String;

        specialinvoke $r19.<java.lang.String: void <init>(byte[])>(r84);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19);

        r85 = newarray (byte)[1];

        r85[0] = 15;

        $r20 = "00001111";

        $r21 = virtualinvoke $r20.<java.lang.String: char[] toCharArray()>();

        r86 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r21);

        $r22 = new java.lang.String;

        specialinvoke $r22.<java.lang.String: void <init>(byte[])>(r85);

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r86);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        r87 = newarray (byte)[1];

        r87[0] = 31;

        $r24 = "00011111";

        $r25 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        r88 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r25);

        $r26 = new java.lang.String;

        specialinvoke $r26.<java.lang.String: void <init>(byte[])>(r87);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>(r88);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27);

        r89 = newarray (byte)[1];

        r89[0] = 63;

        $r28 = "00111111";

        $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>();

        r90 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r29);

        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[])>(r89);

        $r31 = new java.lang.String;

        specialinvoke $r31.<java.lang.String: void <init>(byte[])>(r90);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31);

        r91 = newarray (byte)[1];

        r91[0] = 127;

        $r32 = "01111111";

        $r33 = virtualinvoke $r32.<java.lang.String: char[] toCharArray()>();

        r92 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r33);

        $r34 = new java.lang.String;

        specialinvoke $r34.<java.lang.String: void <init>(byte[])>(r91);

        $r35 = new java.lang.String;

        specialinvoke $r35.<java.lang.String: void <init>(byte[])>(r92);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35);

        r93 = newarray (byte)[1];

        r93[0] = -1;

        $r36 = "11111111";

        $r37 = virtualinvoke $r36.<java.lang.String: char[] toCharArray()>();

        r94 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r37);

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(byte[])>(r93);

        $r39 = new java.lang.String;

        specialinvoke $r39.<java.lang.String: void <init>(byte[])>(r94);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39);

        r95 = newarray (byte)[2];

        r95[0] = -1;

        $r40 = "0000000011111111";

        $r41 = virtualinvoke $r40.<java.lang.String: char[] toCharArray()>();

        r96 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r41);

        $r42 = new java.lang.String;

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>(r95);

        $r43 = new java.lang.String;

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>(r96);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        r97 = newarray (byte)[2];

        r97[1] = 1;

        r97[0] = -1;

        $r44 = "0000000111111111";

        $r45 = virtualinvoke $r44.<java.lang.String: char[] toCharArray()>();

        r98 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r45);

        $r46 = new java.lang.String;

        specialinvoke $r46.<java.lang.String: void <init>(byte[])>(r97);

        $r47 = new java.lang.String;

        specialinvoke $r47.<java.lang.String: void <init>(byte[])>(r98);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r47);

        r99 = newarray (byte)[2];

        r99[1] = 3;

        r99[0] = -1;

        $r48 = "0000001111111111";

        $r49 = virtualinvoke $r48.<java.lang.String: char[] toCharArray()>();

        r100 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r49);

        $r50 = new java.lang.String;

        specialinvoke $r50.<java.lang.String: void <init>(byte[])>(r99);

        $r51 = new java.lang.String;

        specialinvoke $r51.<java.lang.String: void <init>(byte[])>(r100);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51);

        r101 = newarray (byte)[2];

        r101[1] = 7;

        r101[0] = -1;

        $r52 = "0000011111111111";

        $r53 = virtualinvoke $r52.<java.lang.String: char[] toCharArray()>();

        r102 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r53);

        $r54 = new java.lang.String;

        specialinvoke $r54.<java.lang.String: void <init>(byte[])>(r101);

        $r55 = new java.lang.String;

        specialinvoke $r55.<java.lang.String: void <init>(byte[])>(r102);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55);

        r103 = newarray (byte)[2];

        r103[1] = 15;

        r103[0] = -1;

        $r56 = "0000111111111111";

        $r57 = virtualinvoke $r56.<java.lang.String: char[] toCharArray()>();

        r104 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r57);

        $r58 = new java.lang.String;

        specialinvoke $r58.<java.lang.String: void <init>(byte[])>(r103);

        $r59 = new java.lang.String;

        specialinvoke $r59.<java.lang.String: void <init>(byte[])>(r104);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r59);

        r105 = newarray (byte)[2];

        r105[1] = 31;

        r105[0] = -1;

        $r60 = "0001111111111111";

        $r61 = virtualinvoke $r60.<java.lang.String: char[] toCharArray()>();

        r106 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r61);

        $r62 = new java.lang.String;

        specialinvoke $r62.<java.lang.String: void <init>(byte[])>(r105);

        $r63 = new java.lang.String;

        specialinvoke $r63.<java.lang.String: void <init>(byte[])>(r106);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63);

        r107 = newarray (byte)[2];

        r107[1] = 63;

        r107[0] = -1;

        $r64 = "0011111111111111";

        $r65 = virtualinvoke $r64.<java.lang.String: char[] toCharArray()>();

        r108 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r65);

        $r66 = new java.lang.String;

        specialinvoke $r66.<java.lang.String: void <init>(byte[])>(r107);

        $r67 = new java.lang.String;

        specialinvoke $r67.<java.lang.String: void <init>(byte[])>(r108);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r66, $r67);

        r109 = newarray (byte)[2];

        r109[1] = 127;

        r109[0] = -1;

        $r68 = "0111111111111111";

        $r69 = virtualinvoke $r68.<java.lang.String: char[] toCharArray()>();

        r110 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r69);

        $r70 = new java.lang.String;

        specialinvoke $r70.<java.lang.String: void <init>(byte[])>(r109);

        $r71 = new java.lang.String;

        specialinvoke $r71.<java.lang.String: void <init>(byte[])>(r110);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r70, $r71);

        r111 = newarray (byte)[2];

        r111[1] = -1;

        r111[0] = -1;

        $r72 = "1111111111111111";

        $r73 = virtualinvoke $r72.<java.lang.String: char[] toCharArray()>();

        r112 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r73);

        $r74 = new java.lang.String;

        specialinvoke $r74.<java.lang.String: void <init>(byte[])>(r111);

        $r75 = new java.lang.String;

        specialinvoke $r75.<java.lang.String: void <init>(byte[])>(r112);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r74, $r75);

        $r76 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>(null);

        $i4 = lengthof $r76;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        return;
    }

    public void testFromAsciiByteArray()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] $r1, $r2, $r3, $r6, $r11, $r16, $r21, $r26, $r31, $r36, $r41, $r46, $r51, $r56, $r61, $r66, $r71, $r76, $r81, $r86, $r91, $r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130;
        int $i0, $i2, $i4;
        long $l1, $l3, $l5;
        java.nio.charset.Charset $r4, $r9, $r14, $r19, $r24, $r29, $r34, $r39, $r44, $r49, $r54, $r59, $r64, $r69, $r74, $r79, $r84, $r89;
        java.lang.String $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r27, $r28, $r30, $r32, $r33, $r35, $r37, $r38, $r40, $r42, $r43, $r45, $r47, $r48, $r50, $r52, $r53, $r55, $r57, $r58, $r60, $r62, $r63, $r65, $r67, $r68, $r70, $r72, $r73, $r75, $r77, $r78, $r80, $r82, $r83, $r85, $r87, $r88, $r90, $r92, $r93;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        $r1 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>(null);

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $r2 = newarray (byte)[0];

        $r3 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r2);

        $i2 = lengthof $r3;

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3);

        r95 = newarray (byte)[1];

        $r5 = "00000000";

        $r4 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        r96 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r6);

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r95);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>(r96);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        r97 = newarray (byte)[1];

        r97[0] = 1;

        $r10 = "00000001";

        $r9 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        r98 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r11);

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[])>(r97);

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[])>(r98);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13);

        r99 = newarray (byte)[1];

        r99[0] = 3;

        $r15 = "00000011";

        $r14 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r16 = virtualinvoke $r15.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r14);

        r100 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r16);

        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>(r99);

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>(r100);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        r101 = newarray (byte)[1];

        r101[0] = 7;

        $r20 = "00000111";

        $r19 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r21 = virtualinvoke $r20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r19);

        r102 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r21);

        $r22 = new java.lang.String;

        specialinvoke $r22.<java.lang.String: void <init>(byte[])>(r101);

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>(r102);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23);

        r103 = newarray (byte)[1];

        r103[0] = 15;

        $r25 = "00001111";

        $r24 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r24);

        r104 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r26);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>(r103);

        $r28 = new java.lang.String;

        specialinvoke $r28.<java.lang.String: void <init>(byte[])>(r104);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28);

        r105 = newarray (byte)[1];

        r105[0] = 31;

        $r30 = "00011111";

        $r29 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r31 = virtualinvoke $r30.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r29);

        r106 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r31);

        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(byte[])>(r105);

        $r33 = new java.lang.String;

        specialinvoke $r33.<java.lang.String: void <init>(byte[])>(r106);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33);

        r107 = newarray (byte)[1];

        r107[0] = 63;

        $r35 = "00111111";

        $r34 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r36 = virtualinvoke $r35.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r34);

        r108 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r36);

        $r37 = new java.lang.String;

        specialinvoke $r37.<java.lang.String: void <init>(byte[])>(r107);

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(byte[])>(r108);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r37, $r38);

        r109 = newarray (byte)[1];

        r109[0] = 127;

        $r40 = "01111111";

        $r39 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r41 = virtualinvoke $r40.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r39);

        r110 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r41);

        $r42 = new java.lang.String;

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>(r109);

        $r43 = new java.lang.String;

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>(r110);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43);

        r111 = newarray (byte)[1];

        r111[0] = -1;

        $r45 = "11111111";

        $r44 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r46 = virtualinvoke $r45.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r44);

        r112 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r46);

        $r47 = new java.lang.String;

        specialinvoke $r47.<java.lang.String: void <init>(byte[])>(r111);

        $r48 = new java.lang.String;

        specialinvoke $r48.<java.lang.String: void <init>(byte[])>(r112);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r47, $r48);

        r113 = newarray (byte)[2];

        r113[0] = -1;

        $r50 = "0000000011111111";

        $r49 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r51 = virtualinvoke $r50.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r49);

        r114 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r51);

        $r52 = new java.lang.String;

        specialinvoke $r52.<java.lang.String: void <init>(byte[])>(r113);

        $r53 = new java.lang.String;

        specialinvoke $r53.<java.lang.String: void <init>(byte[])>(r114);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53);

        r115 = newarray (byte)[2];

        r115[1] = 1;

        r115[0] = -1;

        $r55 = "0000000111111111";

        $r54 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r56 = virtualinvoke $r55.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r54);

        r116 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r56);

        $r57 = new java.lang.String;

        specialinvoke $r57.<java.lang.String: void <init>(byte[])>(r115);

        $r58 = new java.lang.String;

        specialinvoke $r58.<java.lang.String: void <init>(byte[])>(r116);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58);

        r117 = newarray (byte)[2];

        r117[1] = 3;

        r117[0] = -1;

        $r60 = "0000001111111111";

        $r59 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r61 = virtualinvoke $r60.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r59);

        r118 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r61);

        $r62 = new java.lang.String;

        specialinvoke $r62.<java.lang.String: void <init>(byte[])>(r117);

        $r63 = new java.lang.String;

        specialinvoke $r63.<java.lang.String: void <init>(byte[])>(r118);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63);

        r119 = newarray (byte)[2];

        r119[1] = 7;

        r119[0] = -1;

        $r65 = "0000011111111111";

        $r64 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r66 = virtualinvoke $r65.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r64);

        r120 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r66);

        $r67 = new java.lang.String;

        specialinvoke $r67.<java.lang.String: void <init>(byte[])>(r119);

        $r68 = new java.lang.String;

        specialinvoke $r68.<java.lang.String: void <init>(byte[])>(r120);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r67, $r68);

        r121 = newarray (byte)[2];

        r121[1] = 15;

        r121[0] = -1;

        $r70 = "0000111111111111";

        $r69 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r71 = virtualinvoke $r70.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r69);

        r122 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r71);

        $r72 = new java.lang.String;

        specialinvoke $r72.<java.lang.String: void <init>(byte[])>(r121);

        $r73 = new java.lang.String;

        specialinvoke $r73.<java.lang.String: void <init>(byte[])>(r122);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r72, $r73);

        r123 = newarray (byte)[2];

        r123[1] = 31;

        r123[0] = -1;

        $r75 = "0001111111111111";

        $r74 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r76 = virtualinvoke $r75.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r74);

        r124 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r76);

        $r77 = new java.lang.String;

        specialinvoke $r77.<java.lang.String: void <init>(byte[])>(r123);

        $r78 = new java.lang.String;

        specialinvoke $r78.<java.lang.String: void <init>(byte[])>(r124);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r77, $r78);

        r125 = newarray (byte)[2];

        r125[1] = 63;

        r125[0] = -1;

        $r80 = "0011111111111111";

        $r79 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r81 = virtualinvoke $r80.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r79);

        r126 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r81);

        $r82 = new java.lang.String;

        specialinvoke $r82.<java.lang.String: void <init>(byte[])>(r125);

        $r83 = new java.lang.String;

        specialinvoke $r83.<java.lang.String: void <init>(byte[])>(r126);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r83);

        r127 = newarray (byte)[2];

        r127[1] = 127;

        r127[0] = -1;

        $r85 = "0111111111111111";

        $r84 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r86 = virtualinvoke $r85.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r84);

        r128 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r86);

        $r87 = new java.lang.String;

        specialinvoke $r87.<java.lang.String: void <init>(byte[])>(r127);

        $r88 = new java.lang.String;

        specialinvoke $r88.<java.lang.String: void <init>(byte[])>(r128);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r87, $r88);

        r129 = newarray (byte)[2];

        r129[1] = -1;

        r129[0] = -1;

        $r90 = "1111111111111111";

        $r89 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r91 = virtualinvoke $r90.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r89);

        r130 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r91);

        $r92 = new java.lang.String;

        specialinvoke $r92.<java.lang.String: void <init>(byte[])>(r129);

        $r93 = new java.lang.String;

        specialinvoke $r93.<java.lang.String: void <init>(byte[])>(r130);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r92, $r93);

        $r94 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>(null);

        $i4 = lengthof $r94;

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5);

        return;
    }

    public void testEncodeByteArray()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.lang.String $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76;
        org.apache.commons.codec.binary.BinaryCodec $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r79;
        byte[] $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r80, r81, r83, r85, r87, r89, r91, r93, r95, r97, r99, r101, r103, r105, r107, r109, r111, r113, r115, r117, r119, r121, r123, r125, r127, r129, r131;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r81 = newarray (byte)[1];

        $r1 = new java.lang.String;

        $r2 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r81);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000000", $r1);

        r83 = newarray (byte)[1];

        r83[0] = 1;

        $r4 = new java.lang.String;

        $r5 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r6 = virtualinvoke $r5.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r83);

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000001", $r4);

        r85 = newarray (byte)[1];

        r85[0] = 3;

        $r7 = new java.lang.String;

        $r8 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r9 = virtualinvoke $r8.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r85);

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r9);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000011", $r7);

        r87 = newarray (byte)[1];

        r87[0] = 7;

        $r10 = new java.lang.String;

        $r11 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r12 = virtualinvoke $r11.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r87);

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000111", $r10);

        r89 = newarray (byte)[1];

        r89[0] = 15;

        $r13 = new java.lang.String;

        $r14 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r89);

        specialinvoke $r13.<java.lang.String: void <init>(byte[])>($r15);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00001111", $r13);

        r91 = newarray (byte)[1];

        r91[0] = 31;

        $r16 = new java.lang.String;

        $r17 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r18 = virtualinvoke $r17.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r91);

        specialinvoke $r16.<java.lang.String: void <init>(byte[])>($r18);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00011111", $r16);

        r93 = newarray (byte)[1];

        r93[0] = 63;

        $r19 = new java.lang.String;

        $r20 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r21 = virtualinvoke $r20.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r93);

        specialinvoke $r19.<java.lang.String: void <init>(byte[])>($r21);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00111111", $r19);

        r95 = newarray (byte)[1];

        r95[0] = 127;

        $r22 = new java.lang.String;

        $r23 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r24 = virtualinvoke $r23.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r95);

        specialinvoke $r22.<java.lang.String: void <init>(byte[])>($r24);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("01111111", $r22);

        r97 = newarray (byte)[1];

        r97[0] = -1;

        $r25 = new java.lang.String;

        $r26 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r27 = virtualinvoke $r26.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r97);

        specialinvoke $r25.<java.lang.String: void <init>(byte[])>($r27);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("11111111", $r25);

        r99 = newarray (byte)[2];

        $r28 = new java.lang.String;

        $r29 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r30 = virtualinvoke $r29.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r99);

        specialinvoke $r28.<java.lang.String: void <init>(byte[])>($r30);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000000", $r28);

        r101 = newarray (byte)[2];

        r101[0] = 1;

        $r31 = new java.lang.String;

        $r32 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r33 = virtualinvoke $r32.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r101);

        specialinvoke $r31.<java.lang.String: void <init>(byte[])>($r33);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000001", $r31);

        r103 = newarray (byte)[2];

        r103[0] = 3;

        $r34 = new java.lang.String;

        $r35 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r36 = virtualinvoke $r35.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r103);

        specialinvoke $r34.<java.lang.String: void <init>(byte[])>($r36);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000011", $r34);

        r105 = newarray (byte)[2];

        r105[0] = 7;

        $r37 = new java.lang.String;

        $r38 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r39 = virtualinvoke $r38.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r105);

        specialinvoke $r37.<java.lang.String: void <init>(byte[])>($r39);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000111", $r37);

        r107 = newarray (byte)[2];

        r107[0] = 15;

        $r40 = new java.lang.String;

        $r41 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r42 = virtualinvoke $r41.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r107);

        specialinvoke $r40.<java.lang.String: void <init>(byte[])>($r42);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000001111", $r40);

        r109 = newarray (byte)[2];

        r109[0] = 31;

        $r43 = new java.lang.String;

        $r44 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r45 = virtualinvoke $r44.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r109);

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r45);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000011111", $r43);

        r111 = newarray (byte)[2];

        r111[0] = 63;

        $r46 = new java.lang.String;

        $r47 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r48 = virtualinvoke $r47.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r111);

        specialinvoke $r46.<java.lang.String: void <init>(byte[])>($r48);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000111111", $r46);

        r113 = newarray (byte)[2];

        r113[0] = 127;

        $r49 = new java.lang.String;

        $r50 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r51 = virtualinvoke $r50.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r113);

        specialinvoke $r49.<java.lang.String: void <init>(byte[])>($r51);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000001111111", $r49);

        r115 = newarray (byte)[2];

        r115[0] = -1;

        $r52 = new java.lang.String;

        $r53 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r54 = virtualinvoke $r53.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r115);

        specialinvoke $r52.<java.lang.String: void <init>(byte[])>($r54);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000011111111", $r52);

        r117 = newarray (byte)[2];

        r117[1] = 1;

        r117[0] = -1;

        $r55 = new java.lang.String;

        $r56 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r57 = virtualinvoke $r56.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r117);

        specialinvoke $r55.<java.lang.String: void <init>(byte[])>($r57);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000111111111", $r55);

        r119 = newarray (byte)[2];

        r119[1] = 3;

        r119[0] = -1;

        $r58 = new java.lang.String;

        $r59 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r60 = virtualinvoke $r59.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r119);

        specialinvoke $r58.<java.lang.String: void <init>(byte[])>($r60);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000001111111111", $r58);

        r121 = newarray (byte)[2];

        r121[1] = 7;

        r121[0] = -1;

        $r61 = new java.lang.String;

        $r62 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r63 = virtualinvoke $r62.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r121);

        specialinvoke $r61.<java.lang.String: void <init>(byte[])>($r63);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000011111111111", $r61);

        r123 = newarray (byte)[2];

        r123[1] = 15;

        r123[0] = -1;

        $r64 = new java.lang.String;

        $r65 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r66 = virtualinvoke $r65.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r123);

        specialinvoke $r64.<java.lang.String: void <init>(byte[])>($r66);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000111111111111", $r64);

        r125 = newarray (byte)[2];

        r125[1] = 31;

        r125[0] = -1;

        $r67 = new java.lang.String;

        $r68 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r69 = virtualinvoke $r68.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r125);

        specialinvoke $r67.<java.lang.String: void <init>(byte[])>($r69);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0001111111111111", $r67);

        r127 = newarray (byte)[2];

        r127[1] = 63;

        r127[0] = -1;

        $r70 = new java.lang.String;

        $r71 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r72 = virtualinvoke $r71.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r127);

        specialinvoke $r70.<java.lang.String: void <init>(byte[])>($r72);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0011111111111111", $r70);

        r129 = newarray (byte)[2];

        r129[1] = 127;

        r129[0] = -1;

        $r73 = new java.lang.String;

        $r74 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r75 = virtualinvoke $r74.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r129);

        specialinvoke $r73.<java.lang.String: void <init>(byte[])>($r75);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0111111111111111", $r73);

        r131 = newarray (byte)[2];

        r131[0] = -1;

        r131[1] = -1;

        $r76 = new java.lang.String;

        $r77 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r78 = virtualinvoke $r77.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(r131);

        specialinvoke $r76.<java.lang.String: void <init>(byte[])>($r78);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("1111111111111111", $r76);

        $r79 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r80 = virtualinvoke $r79.<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])>(null);

        $i0 = lengthof $r80;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        return;
    }

    public void testToAsciiBytes()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51;
        byte[] $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r53, r54, r56, r58, r60, r62, r64, r66, r68, r70, r72, r74, r76, r78, r80, r82, r84, r86, r88, r90, r92, r94, r96, r98, r100, r102, r104;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r54 = newarray (byte)[1];

        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r54);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000000", $r1);

        r56 = newarray (byte)[1];

        r56[0] = 1;

        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r56);

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000001", $r3);

        r58 = newarray (byte)[1];

        r58[0] = 3;

        $r5 = new java.lang.String;

        $r6 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r58);

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000011", $r5);

        r60 = newarray (byte)[1];

        r60[0] = 7;

        $r7 = new java.lang.String;

        $r8 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r60);

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000111", $r7);

        r62 = newarray (byte)[1];

        r62[0] = 15;

        $r9 = new java.lang.String;

        $r10 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r62);

        specialinvoke $r9.<java.lang.String: void <init>(byte[])>($r10);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00001111", $r9);

        r64 = newarray (byte)[1];

        r64[0] = 31;

        $r11 = new java.lang.String;

        $r12 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r64);

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00011111", $r11);

        r66 = newarray (byte)[1];

        r66[0] = 63;

        $r13 = new java.lang.String;

        $r14 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r66);

        specialinvoke $r13.<java.lang.String: void <init>(byte[])>($r14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00111111", $r13);

        r68 = newarray (byte)[1];

        r68[0] = 127;

        $r15 = new java.lang.String;

        $r16 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r68);

        specialinvoke $r15.<java.lang.String: void <init>(byte[])>($r16);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("01111111", $r15);

        r70 = newarray (byte)[1];

        r70[0] = -1;

        $r17 = new java.lang.String;

        $r18 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r70);

        specialinvoke $r17.<java.lang.String: void <init>(byte[])>($r18);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("11111111", $r17);

        r72 = newarray (byte)[2];

        $r19 = new java.lang.String;

        $r20 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r72);

        specialinvoke $r19.<java.lang.String: void <init>(byte[])>($r20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000000", $r19);

        r74 = newarray (byte)[2];

        r74[0] = 1;

        $r21 = new java.lang.String;

        $r22 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r74);

        specialinvoke $r21.<java.lang.String: void <init>(byte[])>($r22);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000001", $r21);

        r76 = newarray (byte)[2];

        r76[0] = 3;

        $r23 = new java.lang.String;

        $r24 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r76);

        specialinvoke $r23.<java.lang.String: void <init>(byte[])>($r24);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000011", $r23);

        r78 = newarray (byte)[2];

        r78[0] = 7;

        $r25 = new java.lang.String;

        $r26 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r78);

        specialinvoke $r25.<java.lang.String: void <init>(byte[])>($r26);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000111", $r25);

        r80 = newarray (byte)[2];

        r80[0] = 15;

        $r27 = new java.lang.String;

        $r28 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r80);

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>($r28);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000001111", $r27);

        r82 = newarray (byte)[2];

        r82[0] = 31;

        $r29 = new java.lang.String;

        $r30 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r82);

        specialinvoke $r29.<java.lang.String: void <init>(byte[])>($r30);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000011111", $r29);

        r84 = newarray (byte)[2];

        r84[0] = 63;

        $r31 = new java.lang.String;

        $r32 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r84);

        specialinvoke $r31.<java.lang.String: void <init>(byte[])>($r32);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000111111", $r31);

        r86 = newarray (byte)[2];

        r86[0] = 127;

        $r33 = new java.lang.String;

        $r34 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r86);

        specialinvoke $r33.<java.lang.String: void <init>(byte[])>($r34);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000001111111", $r33);

        r88 = newarray (byte)[2];

        r88[0] = -1;

        $r35 = new java.lang.String;

        $r36 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r88);

        specialinvoke $r35.<java.lang.String: void <init>(byte[])>($r36);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000011111111", $r35);

        r90 = newarray (byte)[2];

        r90[1] = 1;

        r90[0] = -1;

        $r37 = new java.lang.String;

        $r38 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r90);

        specialinvoke $r37.<java.lang.String: void <init>(byte[])>($r38);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000111111111", $r37);

        r92 = newarray (byte)[2];

        r92[1] = 3;

        r92[0] = -1;

        $r39 = new java.lang.String;

        $r40 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r92);

        specialinvoke $r39.<java.lang.String: void <init>(byte[])>($r40);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000001111111111", $r39);

        r94 = newarray (byte)[2];

        r94[1] = 7;

        r94[0] = -1;

        $r41 = new java.lang.String;

        $r42 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r94);

        specialinvoke $r41.<java.lang.String: void <init>(byte[])>($r42);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000011111111111", $r41);

        r96 = newarray (byte)[2];

        r96[1] = 15;

        r96[0] = -1;

        $r43 = new java.lang.String;

        $r44 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r96);

        specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r44);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000111111111111", $r43);

        r98 = newarray (byte)[2];

        r98[1] = 31;

        r98[0] = -1;

        $r45 = new java.lang.String;

        $r46 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r98);

        specialinvoke $r45.<java.lang.String: void <init>(byte[])>($r46);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0001111111111111", $r45);

        r100 = newarray (byte)[2];

        r100[1] = 63;

        r100[0] = -1;

        $r47 = new java.lang.String;

        $r48 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r100);

        specialinvoke $r47.<java.lang.String: void <init>(byte[])>($r48);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0011111111111111", $r47);

        r102 = newarray (byte)[2];

        r102[1] = 127;

        r102[0] = -1;

        $r49 = new java.lang.String;

        $r50 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r102);

        specialinvoke $r49.<java.lang.String: void <init>(byte[])>($r50);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0111111111111111", $r49);

        r104 = newarray (byte)[2];

        r104[0] = -1;

        r104[1] = -1;

        $r51 = new java.lang.String;

        $r52 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r104);

        specialinvoke $r51.<java.lang.String: void <init>(byte[])>($r52);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("1111111111111111", $r51);

        $r53 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(null);

        $i0 = lengthof $r53;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        return;
    }

    public void testToAsciiChars()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51;
        char[] $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r53;
        int $i0;
        long $l1;
        byte[] r54, r56, r58, r60, r62, r64, r66, r68, r70, r72, r74, r76, r78, r80, r82, r84, r86, r88, r90, r92, r94, r96, r98, r100, r102, r104;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r54 = newarray (byte)[1];

        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r54);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000000", $r1);

        r56 = newarray (byte)[1];

        r56[0] = 1;

        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r56);

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000001", $r3);

        r58 = newarray (byte)[1];

        r58[0] = 3;

        $r5 = new java.lang.String;

        $r6 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r58);

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000011", $r5);

        r60 = newarray (byte)[1];

        r60[0] = 7;

        $r7 = new java.lang.String;

        $r8 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r60);

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000111", $r7);

        r62 = newarray (byte)[1];

        r62[0] = 15;

        $r9 = new java.lang.String;

        $r10 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r62);

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00001111", $r9);

        r64 = newarray (byte)[1];

        r64[0] = 31;

        $r11 = new java.lang.String;

        $r12 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r64);

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00011111", $r11);

        r66 = newarray (byte)[1];

        r66[0] = 63;

        $r13 = new java.lang.String;

        $r14 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r66);

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00111111", $r13);

        r68 = newarray (byte)[1];

        r68[0] = 127;

        $r15 = new java.lang.String;

        $r16 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r68);

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("01111111", $r15);

        r70 = newarray (byte)[1];

        r70[0] = -1;

        $r17 = new java.lang.String;

        $r18 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r70);

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r18);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("11111111", $r17);

        r72 = newarray (byte)[2];

        $r19 = new java.lang.String;

        $r20 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r72);

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000000", $r19);

        r74 = newarray (byte)[2];

        r74[0] = 1;

        $r21 = new java.lang.String;

        $r22 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r74);

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r22);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000001", $r21);

        r76 = newarray (byte)[2];

        r76[0] = 3;

        $r23 = new java.lang.String;

        $r24 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r76);

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r24);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000011", $r23);

        r78 = newarray (byte)[2];

        r78[0] = 7;

        $r25 = new java.lang.String;

        $r26 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r78);

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000111", $r25);

        r80 = newarray (byte)[2];

        r80[0] = 15;

        $r27 = new java.lang.String;

        $r28 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r80);

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r28);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000001111", $r27);

        r82 = newarray (byte)[2];

        r82[0] = 31;

        $r29 = new java.lang.String;

        $r30 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r82);

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r30);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000011111", $r29);

        r84 = newarray (byte)[2];

        r84[0] = 63;

        $r31 = new java.lang.String;

        $r32 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r84);

        specialinvoke $r31.<java.lang.String: void <init>(char[])>($r32);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000111111", $r31);

        r86 = newarray (byte)[2];

        r86[0] = 127;

        $r33 = new java.lang.String;

        $r34 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r86);

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r34);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000001111111", $r33);

        r88 = newarray (byte)[2];

        r88[0] = -1;

        $r35 = new java.lang.String;

        $r36 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r88);

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r36);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000011111111", $r35);

        r90 = newarray (byte)[2];

        r90[1] = 1;

        r90[0] = -1;

        $r37 = new java.lang.String;

        $r38 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r90);

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r38);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000111111111", $r37);

        r92 = newarray (byte)[2];

        r92[1] = 3;

        r92[0] = -1;

        $r39 = new java.lang.String;

        $r40 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r92);

        specialinvoke $r39.<java.lang.String: void <init>(char[])>($r40);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000001111111111", $r39);

        r94 = newarray (byte)[2];

        r94[1] = 7;

        r94[0] = -1;

        $r41 = new java.lang.String;

        $r42 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r94);

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r42);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000011111111111", $r41);

        r96 = newarray (byte)[2];

        r96[1] = 15;

        r96[0] = -1;

        $r43 = new java.lang.String;

        $r44 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r96);

        specialinvoke $r43.<java.lang.String: void <init>(char[])>($r44);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000111111111111", $r43);

        r98 = newarray (byte)[2];

        r98[1] = 31;

        r98[0] = -1;

        $r45 = new java.lang.String;

        $r46 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r98);

        specialinvoke $r45.<java.lang.String: void <init>(char[])>($r46);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0001111111111111", $r45);

        r100 = newarray (byte)[2];

        r100[1] = 63;

        r100[0] = -1;

        $r47 = new java.lang.String;

        $r48 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r100);

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r48);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0011111111111111", $r47);

        r102 = newarray (byte)[2];

        r102[1] = 127;

        r102[0] = -1;

        $r49 = new java.lang.String;

        $r50 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r102);

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r50);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0111111111111111", $r49);

        r104 = newarray (byte)[2];

        r104[0] = -1;

        r104[1] = -1;

        $r51 = new java.lang.String;

        $r52 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r104);

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r52);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("1111111111111111", $r51);

        $r53 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(null);

        $i0 = lengthof $r53;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        return;
    }

    public void testToAsciiString()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] r1, r3, r5, r7, r9, r11, r13, r15, r17, r19, r21, r23, r25, r27, r29, r31, r33, r35, r37, r39, r41, r43, r45, r47, r49, r51;
        java.lang.String r2, r4, r6, r8, r10, r12, r14, r16, r18, r20, r22, r24, r26, r28, r30, r32, r34, r36, r38, r40, r42, r44, r46, r48, r50, r52;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r1 = newarray (byte)[1];

        r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000000", r2);

        r3 = newarray (byte)[1];

        r3[0] = 1;

        r4 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000001", r4);

        r5 = newarray (byte)[1];

        r5[0] = 3;

        r6 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r5);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000011", r6);

        r7 = newarray (byte)[1];

        r7[0] = 7;

        r8 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000111", r8);

        r9 = newarray (byte)[1];

        r9[0] = 15;

        r10 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r9);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00001111", r10);

        r11 = newarray (byte)[1];

        r11[0] = 31;

        r12 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r11);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00011111", r12);

        r13 = newarray (byte)[1];

        r13[0] = 63;

        r14 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r13);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00111111", r14);

        r15 = newarray (byte)[1];

        r15[0] = 127;

        r16 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r15);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("01111111", r16);

        r17 = newarray (byte)[1];

        r17[0] = -1;

        r18 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r17);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("11111111", r18);

        r19 = newarray (byte)[2];

        r20 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r19);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000000", r20);

        r21 = newarray (byte)[2];

        r21[0] = 1;

        r22 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r21);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000001", r22);

        r23 = newarray (byte)[2];

        r23[0] = 3;

        r24 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r23);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000011", r24);

        r25 = newarray (byte)[2];

        r25[0] = 7;

        r26 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r25);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000111", r26);

        r27 = newarray (byte)[2];

        r27[0] = 15;

        r28 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r27);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000001111", r28);

        r29 = newarray (byte)[2];

        r29[0] = 31;

        r30 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r29);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000011111", r30);

        r31 = newarray (byte)[2];

        r31[0] = 63;

        r32 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r31);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000111111", r32);

        r33 = newarray (byte)[2];

        r33[0] = 127;

        r34 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r33);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000001111111", r34);

        r35 = newarray (byte)[2];

        r35[0] = -1;

        r36 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r35);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000011111111", r36);

        r37 = newarray (byte)[2];

        r37[1] = 1;

        r37[0] = -1;

        r38 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r37);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000111111111", r38);

        r39 = newarray (byte)[2];

        r39[1] = 3;

        r39[0] = -1;

        r40 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r39);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000001111111111", r40);

        r41 = newarray (byte)[2];

        r41[1] = 7;

        r41[0] = -1;

        r42 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r41);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000011111111111", r42);

        r43 = newarray (byte)[2];

        r43[1] = 15;

        r43[0] = -1;

        r44 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r43);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000111111111111", r44);

        r45 = newarray (byte)[2];

        r45[1] = 31;

        r45[0] = -1;

        r46 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r45);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0001111111111111", r46);

        r47 = newarray (byte)[2];

        r47[1] = 63;

        r47[0] = -1;

        r48 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r47);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0011111111111111", r48);

        r49 = newarray (byte)[2];

        r49[1] = 127;

        r49[0] = -1;

        r50 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r49);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0111111111111111", r50);

        r51 = newarray (byte)[2];

        r51[0] = -1;

        r51[1] = -1;

        r52 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: java.lang.String toAsciiString(byte[])>(r51);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("1111111111111111", r52);

        return;
    }

    public void testEncodeObjectNull() throws java.lang.Exception
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        byte[] r1;
        org.apache.commons.codec.binary.BinaryCodec $r2;
        java.lang.Object $r3;
        char[] $r4;
        int $i0;
        long $l1;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r1 = newarray (byte)[0];

        $r2 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r1);

        $r4 = (char[]) $r3;

        $i0 = lengthof $r4;

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        return;
    }

    public void testEncodeObjectException()
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        org.apache.commons.codec.binary.BinaryCodec $r2;
        org.apache.commons.codec.EncoderException $r4;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

     label1:
        $r2 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        virtualinvoke $r2.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>("");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected EncoderException");

        return;

        catch org.apache.commons.codec.EncoderException from label1 to label2 with label3;
    }

    public void testEncodeObject() throws java.lang.Exception
    {
        org.apache.commons.codec.binary.BinaryCodecTest r0;
        java.lang.String $r1, $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57, $r61, $r65, $r69, $r73, $r77, $r81, $r85, $r89, $r93, $r97, $r101;
        org.apache.commons.codec.binary.BinaryCodec $r2, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42, $r46, $r50, $r54, $r58, $r62, $r66, $r70, $r74, $r78, $r82, $r86, $r90, $r94, $r98, $r102;
        java.lang.Object $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43, $r47, $r51, $r55, $r59, $r63, $r67, $r71, $r75, $r79, $r83, $r87, $r91, $r95, $r99, $r103;
        char[] $r4, $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r40, $r44, $r48, $r52, $r56, $r60, $r64, $r68, $r72, $r76, $r80, $r84, $r88, $r92, $r96, $r100, $r104;
        byte[] r105, r107, r109, r111, r113, r115, r117, r119, r121, r123, r125, r127, r129, r131, r133, r135, r137, r139, r141, r143, r145, r147, r149, r151, r153, r155;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodecTest;

        r105 = newarray (byte)[1];

        $r1 = new java.lang.String;

        $r2 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r3 = virtualinvoke $r2.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r105);

        $r4 = (char[]) $r3;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000000", $r1);

        r107 = newarray (byte)[1];

        r107[0] = 1;

        $r5 = new java.lang.String;

        $r6 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r7 = virtualinvoke $r6.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r107);

        $r8 = (char[]) $r7;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000001", $r5);

        r109 = newarray (byte)[1];

        r109[0] = 3;

        $r9 = new java.lang.String;

        $r10 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r11 = virtualinvoke $r10.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r109);

        $r12 = (char[]) $r11;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000011", $r9);

        r111 = newarray (byte)[1];

        r111[0] = 7;

        $r13 = new java.lang.String;

        $r14 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r15 = virtualinvoke $r14.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r111);

        $r16 = (char[]) $r15;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r16);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00000111", $r13);

        r113 = newarray (byte)[1];

        r113[0] = 15;

        $r17 = new java.lang.String;

        $r18 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r19 = virtualinvoke $r18.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r113);

        $r20 = (char[]) $r19;

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00001111", $r17);

        r115 = newarray (byte)[1];

        r115[0] = 31;

        $r21 = new java.lang.String;

        $r22 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r23 = virtualinvoke $r22.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r115);

        $r24 = (char[]) $r23;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r24);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00011111", $r21);

        r117 = newarray (byte)[1];

        r117[0] = 63;

        $r25 = new java.lang.String;

        $r26 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r27 = virtualinvoke $r26.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r117);

        $r28 = (char[]) $r27;

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r28);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("00111111", $r25);

        r119 = newarray (byte)[1];

        r119[0] = 127;

        $r29 = new java.lang.String;

        $r30 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r31 = virtualinvoke $r30.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r119);

        $r32 = (char[]) $r31;

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r32);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("01111111", $r29);

        r121 = newarray (byte)[1];

        r121[0] = -1;

        $r33 = new java.lang.String;

        $r34 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r35 = virtualinvoke $r34.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r121);

        $r36 = (char[]) $r35;

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r36);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("11111111", $r33);

        r123 = newarray (byte)[2];

        $r37 = new java.lang.String;

        $r38 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r39 = virtualinvoke $r38.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r123);

        $r40 = (char[]) $r39;

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r40);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000000", $r37);

        r125 = newarray (byte)[2];

        r125[0] = 1;

        $r41 = new java.lang.String;

        $r42 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r43 = virtualinvoke $r42.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r125);

        $r44 = (char[]) $r43;

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r44);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000001", $r41);

        r127 = newarray (byte)[2];

        r127[0] = 3;

        $r45 = new java.lang.String;

        $r46 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r47 = virtualinvoke $r46.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r127);

        $r48 = (char[]) $r47;

        specialinvoke $r45.<java.lang.String: void <init>(char[])>($r48);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000011", $r45);

        r129 = newarray (byte)[2];

        r129[0] = 7;

        $r49 = new java.lang.String;

        $r50 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r51 = virtualinvoke $r50.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r129);

        $r52 = (char[]) $r51;

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r52);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000000111", $r49);

        r131 = newarray (byte)[2];

        r131[0] = 15;

        $r53 = new java.lang.String;

        $r54 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r55 = virtualinvoke $r54.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r131);

        $r56 = (char[]) $r55;

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r56);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000001111", $r53);

        r133 = newarray (byte)[2];

        r133[0] = 31;

        $r57 = new java.lang.String;

        $r58 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r59 = virtualinvoke $r58.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r133);

        $r60 = (char[]) $r59;

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r60);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000011111", $r57);

        r135 = newarray (byte)[2];

        r135[0] = 63;

        $r61 = new java.lang.String;

        $r62 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r63 = virtualinvoke $r62.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r135);

        $r64 = (char[]) $r63;

        specialinvoke $r61.<java.lang.String: void <init>(char[])>($r64);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000000111111", $r61);

        r137 = newarray (byte)[2];

        r137[0] = 127;

        $r65 = new java.lang.String;

        $r66 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r67 = virtualinvoke $r66.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r137);

        $r68 = (char[]) $r67;

        specialinvoke $r65.<java.lang.String: void <init>(char[])>($r68);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000001111111", $r65);

        r139 = newarray (byte)[2];

        r139[0] = -1;

        $r69 = new java.lang.String;

        $r70 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r71 = virtualinvoke $r70.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r139);

        $r72 = (char[]) $r71;

        specialinvoke $r69.<java.lang.String: void <init>(char[])>($r72);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000011111111", $r69);

        r141 = newarray (byte)[2];

        r141[1] = 1;

        r141[0] = -1;

        $r73 = new java.lang.String;

        $r74 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r75 = virtualinvoke $r74.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r141);

        $r76 = (char[]) $r75;

        specialinvoke $r73.<java.lang.String: void <init>(char[])>($r76);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000000111111111", $r73);

        r143 = newarray (byte)[2];

        r143[1] = 3;

        r143[0] = -1;

        $r77 = new java.lang.String;

        $r78 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r79 = virtualinvoke $r78.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r143);

        $r80 = (char[]) $r79;

        specialinvoke $r77.<java.lang.String: void <init>(char[])>($r80);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000001111111111", $r77);

        r145 = newarray (byte)[2];

        r145[1] = 7;

        r145[0] = -1;

        $r81 = new java.lang.String;

        $r82 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r83 = virtualinvoke $r82.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r145);

        $r84 = (char[]) $r83;

        specialinvoke $r81.<java.lang.String: void <init>(char[])>($r84);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000011111111111", $r81);

        r147 = newarray (byte)[2];

        r147[1] = 15;

        r147[0] = -1;

        $r85 = new java.lang.String;

        $r86 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r87 = virtualinvoke $r86.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r147);

        $r88 = (char[]) $r87;

        specialinvoke $r85.<java.lang.String: void <init>(char[])>($r88);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0000111111111111", $r85);

        r149 = newarray (byte)[2];

        r149[1] = 31;

        r149[0] = -1;

        $r89 = new java.lang.String;

        $r90 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r91 = virtualinvoke $r90.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r149);

        $r92 = (char[]) $r91;

        specialinvoke $r89.<java.lang.String: void <init>(char[])>($r92);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0001111111111111", $r89);

        r151 = newarray (byte)[2];

        r151[1] = 63;

        r151[0] = -1;

        $r93 = new java.lang.String;

        $r94 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r95 = virtualinvoke $r94.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r151);

        $r96 = (char[]) $r95;

        specialinvoke $r93.<java.lang.String: void <init>(char[])>($r96);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0011111111111111", $r93);

        r153 = newarray (byte)[2];

        r153[1] = 127;

        r153[0] = -1;

        $r97 = new java.lang.String;

        $r98 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r99 = virtualinvoke $r98.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r153);

        $r100 = (char[]) $r99;

        specialinvoke $r97.<java.lang.String: void <init>(char[])>($r100);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("0111111111111111", $r97);

        r155 = newarray (byte)[2];

        r155[0] = -1;

        r155[1] = -1;

        $r101 = new java.lang.String;

        $r102 = r0.<org.apache.commons.codec.binary.BinaryCodecTest: org.apache.commons.codec.binary.BinaryCodec instance>;

        $r103 = virtualinvoke $r102.<org.apache.commons.codec.binary.BinaryCodec: java.lang.Object encode(java.lang.Object)>(r155);

        $r104 = (char[]) $r103;

        specialinvoke $r101.<java.lang.String: void <init>(char[])>($r104);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("1111111111111111", $r101);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_7> = 128;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_6> = 64;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_5> = 32;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_4> = 16;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_3> = 8;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_2> = 4;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_1> = 2;

        <org.apache.commons.codec.binary.BinaryCodecTest: int BIT_0> = 1;

        return;
    }
}
