public class org.apache.commons.codec.digest.UnixCryptTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCtor()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;
        org.apache.commons.codec.digest.UnixCrypt $r1;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        $r1 = new org.apache.commons.codec.digest.UnixCrypt;

        specialinvoke $r1.<org.apache.commons.codec.digest.UnixCrypt: void <init>()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1);

        return;
    }

    public void testUnixCryptStrings()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        $r1 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "xx");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("xxWAum7tHdIUw", $r1);

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("", "12");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("12UFlHxel6uMM", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "12");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("12FJgqDtVOg7Q", $r3);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "12345678");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("12FJgqDtVOg7Q", $r4);

        return;
    }

    public void testUnixCryptBytes()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;
        byte[] $r1, $r6, $r8;
        java.lang.String $r2, $r3, $r5, $r7, $r9;
        java.nio.charset.Charset $r4;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        $r1 = newarray (byte)[0];

        $r2 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r1, "12");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("12UFlHxel6uMM", $r2);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(java.lang.String,java.lang.String)>("t\u00e4st", "./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("./287bds2PjVw", $r3);

        $r5 = "t\u00e4st";

        $r4 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset ISO_8859_1>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r7 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r6, "./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("./bLIFNqo9XKQ", $r7);

        $r8 = newarray (byte)[4];

        $r8[0] = 116;

        $r8[1] = -28;

        $r8[2] = 115;

        $r8[3] = 116;

        $r9 = staticinvoke <org.apache.commons.codec.digest.Crypt: java.lang.String crypt(byte[],java.lang.String)>($r8, "./");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("./bLIFNqo9XKQ", $r9);

        return;
    }

    public void testUnixCryptExplicitCall()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;
        java.lang.String $r1, $r3, $r4, $r6;
        byte[] $r2, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        $r1 = "secret";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[])>($r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean matches(java.lang.String)>("^[a-zA-Z0-9./]{13}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r4 = "secret";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r6 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[],java.lang.String)>($r5, null);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean matches(java.lang.String)>("^[a-zA-Z0-9./]{13}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        return;
    }

    public void testUnixCryptWithHalfSalt()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "x");

        return;
    }

    public void testUnicCryptInvalidSalt()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "$a");

        return;
    }

    public void testUnixCryptNullData()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[])>(null);

        return;
    }

    public void testUnixCryptWithEmptySalt()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(java.lang.String,java.lang.String)>("secret", "");

        return;
    }

    public void testUnixCryptWithoutSalt()
    {
        org.apache.commons.codec.digest.UnixCryptTest r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.digest.UnixCryptTest;

        r1 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(java.lang.String)>("foo");

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^[a-zA-Z0-9./]{13}$");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        r2 = staticinvoke <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(java.lang.String)>("foo");

        staticinvoke <org.junit.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }
}
