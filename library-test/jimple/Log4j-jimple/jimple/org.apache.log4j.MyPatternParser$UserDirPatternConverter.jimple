class org.apache.log4j.MyPatternParser$UserDirPatternConverter extends org.apache.log4j.helpers.PatternConverter
{
    final org.apache.log4j.MyPatternParser this$0;

    void <init>(org.apache.log4j.MyPatternParser, org.apache.log4j.helpers.FormattingInfo)
    {
        org.apache.log4j.MyPatternParser$UserDirPatternConverter r0;
        org.apache.log4j.MyPatternParser r1;
        org.apache.log4j.helpers.FormattingInfo r2;

        r0 := @this: org.apache.log4j.MyPatternParser$UserDirPatternConverter;

        r1 := @parameter0: org.apache.log4j.MyPatternParser;

        r2 := @parameter1: org.apache.log4j.helpers.FormattingInfo;

        r0.<org.apache.log4j.MyPatternParser$UserDirPatternConverter: org.apache.log4j.MyPatternParser this$0> = r1;

        specialinvoke r0.<org.apache.log4j.helpers.PatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo)>(r2);

        return;
    }

    public java.lang.String convert(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.MyPatternParser$UserDirPatternConverter r0;
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.MyPatternParser $r2;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.log4j.MyPatternParser$UserDirPatternConverter;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r2 = r0.<org.apache.log4j.MyPatternParser$UserDirPatternConverter: org.apache.log4j.MyPatternParser this$0>;

        $i0 = $r2.<org.apache.log4j.MyPatternParser: int counter>;

        $i1 = $i0 + 1;

        $r2.<org.apache.log4j.MyPatternParser: int counter> = $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        return $r3;
    }
}
