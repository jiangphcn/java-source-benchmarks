public class org.apache.log4j.helpers.Loader extends java.lang.Object
{
    static final java.lang.String TSTR;
    private static boolean java1;
    private static boolean ignoreTCL;

    static void <clinit>()
    {
        java.lang.String r0, r1;
        boolean $z0;
        int $i0, i2;
        char $c1;

        <org.apache.log4j.helpers.Loader: java.lang.String TSTR> = "Caught Exception while in Loader.getResource. This may be innocuous.";

        <org.apache.log4j.helpers.Loader: boolean java1> = 1;

        <org.apache.log4j.helpers.Loader: boolean ignoreTCL> = 0;

        r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("java.version", null);

        if r0 == null goto label1;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if i2 == -1 goto label1;

        $i0 = i2 + 1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        if $c1 == 49 goto label1;

        <org.apache.log4j.helpers.Loader: boolean java1> = 0;

     label1:
        r1 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.ignoreTCL", null);

        if r1 == null goto label2;

        $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(r1, 1);

        <org.apache.log4j.helpers.Loader: boolean ignoreTCL> = $z0;

     label2:
        return;
    }

    public void <init>()
    {
        org.apache.log4j.helpers.Loader r0;

        r0 := @this: org.apache.log4j.helpers.Loader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.URL getResource(java.lang.String, java.lang.Class)
    {
        java.lang.String r0;
        java.lang.Class r1;
        java.net.URL $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>(r0);

        return $r2;
    }

    public static java.net.URL getResource(java.lang.String)
    {
        java.lang.String r0, $r6, $r12, $r30;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r27, $r28, $r29;
        java.lang.reflect.InvocationTargetException $r13;
        java.lang.Throwable $r14, $r16, $r18;
        java.lang.Thread $r15;
        java.lang.IllegalAccessException $r17;
        java.lang.ClassLoader r19, r22;
        java.net.URL r20, r23, $r31;
        java.lang.Class $r21;

        r0 := @parameter0: java.lang.String;

     label01:
        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        if $z0 != 0 goto label03;

        $z1 = <org.apache.log4j.helpers.Loader: boolean ignoreTCL>;

        if $z1 != 0 goto label03;

        r19 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>();

        if r19 == null goto label03;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trying to find [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] using context classloader ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r12);

        r20 = virtualinvoke r19.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r0);

        if r20 == null goto label03;

     label02:
        return r20;

     label03:
        $r21 = class "org/apache/log4j/helpers/Loader";

        r22 = virtualinvoke $r21.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r22 == null goto label10;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trying to find [");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] using ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class loader.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        r23 = virtualinvoke r22.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r0);

        if r23 == null goto label10;

     label04:
        return r23;

     label05:
        $r17 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r17);

        goto label10;

     label06:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = $r14 instanceof java.lang.InterruptedException;

        if $z2 != 0 goto label07;

        $r16 = virtualinvoke $r13.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z3 = $r16 instanceof java.io.InterruptedIOException;

        if $z3 == 0 goto label08;

     label07:
        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r15.<java.lang.Thread: void interrupt()>();

     label08:
        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r13);

        goto label10;

     label09:
        $r18 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r18);

     label10:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trying to find [");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] using ClassLoader.getSystemResource().");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r30);

        $r31 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(r0);

        return $r31;

        catch java.lang.IllegalAccessException from label01 to label02 with label05;
        catch java.lang.IllegalAccessException from label03 to label04 with label05;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label06;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
    }

    public static boolean isJava1()
    {
        boolean $z0;

        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        return $z0;
    }

    private static java.lang.ClassLoader getTCL() throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Class $r0;
        java.lang.Thread $r1;
        java.lang.Object $r2;
        java.lang.ClassLoader $r3;
        java.lang.NoSuchMethodException $r4;
        java.lang.reflect.Method r5;

     label1:
        $r0 = class "java/lang/Thread";

        r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, null);

        $r3 = (java.lang.ClassLoader) $r2;

        return $r3;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public static java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r1, $r3, $r11;
        java.lang.ClassLoader $r2;
        java.lang.reflect.InvocationTargetException $r4;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.Thread $r6;

        r0 := @parameter0: java.lang.String;

        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        if $z0 != 0 goto label1;

        $z1 = <org.apache.log4j.helpers.Loader: boolean ignoreTCL>;

        if $z1 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = $r5 instanceof java.lang.InterruptedException;

        if $z2 != 0 goto label5;

        $r7 = virtualinvoke $r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z3 = $r7 instanceof java.io.InterruptedIOException;

        if $z3 == 0 goto label7;

     label5:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void interrupt()>();

        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        $r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r11;

        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }
}
