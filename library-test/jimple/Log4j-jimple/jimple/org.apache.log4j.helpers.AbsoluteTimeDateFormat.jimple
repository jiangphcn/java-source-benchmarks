public class org.apache.log4j.helpers.AbsoluteTimeDateFormat extends java.text.DateFormat
{
    private static final long serialVersionUID;
    public static final java.lang.String ABS_TIME_DATE_FORMAT;
    public static final java.lang.String DATE_AND_TIME_DATE_FORMAT;
    public static final java.lang.String ISO8601_DATE_FORMAT;
    private static long previousTime;
    private static char[] previousTimeWithoutMillis;

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String ISO8601_DATE_FORMAT> = "ISO8601";

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String DATE_AND_TIME_DATE_FORMAT> = "DATE";

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String ABS_TIME_DATE_FORMAT> = "ABSOLUTE";

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: long serialVersionUID> = -388856345976723342L;

        $r0 = newarray (char)[9];

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: char[] previousTimeWithoutMillis> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.log4j.helpers.AbsoluteTimeDateFormat r0;
        java.util.Calendar $r1;

        r0 := @this: org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        specialinvoke r0.<java.text.DateFormat: void <init>()>();

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void setCalendar(java.util.Calendar)>($r1);

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        org.apache.log4j.helpers.AbsoluteTimeDateFormat r0;
        java.util.TimeZone r1;
        java.util.Calendar $r2;

        r0 := @this: org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        r1 := @parameter0: java.util.TimeZone;

        specialinvoke r0.<java.text.DateFormat: void <init>()>();

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1);

        virtualinvoke r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void setCalendar(java.util.Calendar)>($r2);

        return;
    }

    public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.log4j.helpers.AbsoluteTimeDateFormat r0;
        java.util.Date r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        long l0, $l6, $l7, $l8, $l9, $l12, $l13;
        int i1, i2, i3, i4, i5, $i11;
        byte $b10;
        java.util.Calendar $r4, $r5, $r8, $r11;
        char[] $r14, $r21, $r22;
        char $c14;

        r0 := @this: org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l6 = l0 % 1000L;

        i1 = (int) $l6;

        $l7 = (long) i1;

        $l9 = l0 - $l7;

        $l8 = <org.apache.log4j.helpers.AbsoluteTimeDateFormat: long previousTime>;

        $b10 = $l9 cmp $l8;

        if $b10 != 0 goto label1;

        $r21 = <org.apache.log4j.helpers.AbsoluteTimeDateFormat: char[] previousTimeWithoutMillis>;

        $c14 = $r21[0];

        if $c14 != 0 goto label5;

     label1:
        $r4 = r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.util.Calendar calendar>;

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        i2 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        $r5 = r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.util.Calendar calendar>;

        i3 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(11);

        if i3 >= 10 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r8 = r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.util.Calendar calendar>;

        i4 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(12);

        if i4 >= 10 goto label3;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label3:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r11 = r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.util.Calendar calendar>;

        i5 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(13);

        if i5 >= 10 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label4:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $i11 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        $r14 = <org.apache.log4j.helpers.AbsoluteTimeDateFormat: char[] previousTimeWithoutMillis>;

        virtualinvoke r2.<java.lang.StringBuffer: void getChars(int,int,char[],int)>(i2, $i11, $r14, 0);

        $l12 = (long) i1;

        $l13 = l0 - $l12;

        <org.apache.log4j.helpers.AbsoluteTimeDateFormat: long previousTime> = $l13;

        goto label6;

     label5:
        $r22 = <org.apache.log4j.helpers.AbsoluteTimeDateFormat: char[] previousTimeWithoutMillis>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r22);

     label6:
        if i1 >= 100 goto label7;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label7:
        if i1 >= 10 goto label8;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label8:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        return r2;
    }

    public java.util.Date parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.log4j.helpers.AbsoluteTimeDateFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;

        r0 := @this: org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        return null;
    }
}
