public final class org.apache.log4j.helpers.MDCKeySetExtractor extends java.lang.Object
{
    private final java.lang.reflect.Method getKeySetMethod;
    public static final org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE;

    static void <clinit>()
    {
        org.apache.log4j.helpers.MDCKeySetExtractor $r0;

        $r0 = new org.apache.log4j.helpers.MDCKeySetExtractor;

        specialinvoke $r0.<org.apache.log4j.helpers.MDCKeySetExtractor: void <init>()>();

        <org.apache.log4j.helpers.MDCKeySetExtractor: org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.log4j.helpers.MDCKeySetExtractor r0;
        java.lang.Class $r1;
        java.lang.Exception $r2;
        java.lang.reflect.Method r3;

        r0 := @this: org.apache.log4j.helpers.MDCKeySetExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = class "org/apache/log4j/spi/LoggingEvent";

        r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPropertyKeySet", null);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r3 = null;

     label4:
        r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod> = r3;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.util.Set getPropertyKeySet(org.apache.log4j.spi.LoggingEvent) throws java.lang.Exception
    {
        org.apache.log4j.helpers.MDCKeySetExtractor r0;
        org.apache.log4j.spi.LoggingEvent r1;
        byte[] r4;
        java.lang.String r5;
        java.lang.Object r7, $r16;
        java.lang.reflect.Method $r8, $r15;
        java.io.ByteArrayOutputStream $r9;
        java.io.ObjectOutputStream $r10;
        java.lang.Class $r11;
        byte $b0, $b4, $b5;
        int $i1, $i2, $i6, i7;
        char $c3;
        java.io.ByteArrayInputStream $r12;
        java.io.ObjectInputStream $r13;
        boolean $z0;
        org.apache.log4j.pattern.LogEvent $r14;
        java.util.Set r17;

        r0 := @this: org.apache.log4j.helpers.MDCKeySetExtractor;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r17 = null;

        $r8 = r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod>;

        if $r8 == null goto label1;

        $r15 = r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod>;

        $r16 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, null);

        r17 = (java.util.Set) $r16;

        goto label6;

     label1:
        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        $r10 = new java.io.ObjectOutputStream;

        specialinvoke $r10.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r9);

        virtualinvoke $r10.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke $r10.<java.io.ObjectOutputStream: void close()>();

        r4 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r11 = class "org/apache/log4j/pattern/LogEvent";

        r5 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $b0 = r4[6];

        if $b0 == 0 goto label2;

        $b5 = r4[7];

        $i6 = virtualinvoke r5.<java.lang.String: int length()>();

        if $b5 != $i6 goto label6;

     label2:
        i7 = 0;

        goto label4;

     label3:
        $i2 = 8 + i7;

        $c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i7);

        $b4 = (byte) $c3;

        r4[$i2] = $b4;

        i7 = i7 + 1;

     label4:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if i7 < $i1 goto label3;

        $r12 = new java.io.ByteArrayInputStream;

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        $r13 = new java.io.ObjectInputStream;

        specialinvoke $r13.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r12);

        r7 = virtualinvoke $r13.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $z0 = r7 instanceof org.apache.log4j.pattern.LogEvent;

        if $z0 == 0 goto label5;

        $r14 = (org.apache.log4j.pattern.LogEvent) r7;

        r17 = virtualinvoke $r14.<org.apache.log4j.pattern.LogEvent: java.util.Set getPropertyKeySet()>();

     label5:
        virtualinvoke $r13.<java.io.ObjectInputStream: void close()>();

     label6:
        return r17;
    }
}
