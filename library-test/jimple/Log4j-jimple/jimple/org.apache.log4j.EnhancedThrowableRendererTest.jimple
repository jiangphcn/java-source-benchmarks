public class org.apache.log4j.EnhancedThrowableRendererTest extends junit.framework.TestCase
{

    public void <init>(java.lang.String)
    {
        org.apache.log4j.EnhancedThrowableRendererTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.EnhancedThrowableRendererTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    public void testEnhancedRender()
    {
        org.apache.log4j.EnhancedThrowableRendererTest r0;
        java.lang.String[] r3;
        org.apache.log4j.EnhancedThrowableRenderer $r4;
        java.lang.Exception $r5;
        int $i0, $i1, i2;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.EnhancedThrowableRendererTest;

        $r4 = new org.apache.log4j.EnhancedThrowableRenderer;

        specialinvoke $r4.<org.apache.log4j.EnhancedThrowableRenderer: void <init>()>();

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>()>();

        r3 = interfaceinvoke $r4.<org.apache.log4j.spi.ThrowableRenderer: java.lang.String[] doRender(java.lang.Throwable)>($r5);

        staticinvoke <org.apache.log4j.EnhancedThrowableRendererTest: void assertNotNull(java.lang.Object)>(r3);

        $i0 = lengthof r3;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.log4j.EnhancedThrowableRendererTest: void assertTrue(boolean)>($z0);

        i2 = 0;

        goto label4;

     label3:
        $r6 = r3[i2];

        staticinvoke <org.apache.log4j.EnhancedThrowableRendererTest: void assertNotNull(java.lang.Object)>($r6);

        i2 = i2 + 1;

     label4:
        $i1 = lengthof r3;

        if i2 < $i1 goto label3;

        return;
    }
}
