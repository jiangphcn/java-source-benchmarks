public class org.apache.log4j.VectorAppender extends org.apache.log4j.AppenderSkeleton
{
    public java.util.Vector vector;

    public void <init>()
    {
        org.apache.log4j.VectorAppender r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.log4j.VectorAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.VectorAppender: java.util.Vector vector> = $r1;

        return;
    }

    public void activateOptions()
    {
        org.apache.log4j.VectorAppender r0;

        r0 := @this: org.apache.log4j.VectorAppender;

        return;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.VectorAppender r0;
        org.apache.log4j.spi.LoggingEvent r1;
        java.util.Vector $r3;
        java.lang.Exception $r4;

        r0 := @this: org.apache.log4j.VectorAppender;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r3 = r0.<org.apache.log4j.VectorAppender: java.util.Vector vector>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.util.Vector getVector()
    {
        org.apache.log4j.VectorAppender r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.log4j.VectorAppender;

        $r1 = r0.<org.apache.log4j.VectorAppender: java.util.Vector vector>;

        return $r1;
    }

    public synchronized void close()
    {
        org.apache.log4j.VectorAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.VectorAppender;

        $z0 = r0.<org.apache.log4j.VectorAppender: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.apache.log4j.VectorAppender: boolean closed> = 1;

        return;
    }

    public boolean isClosed()
    {
        org.apache.log4j.VectorAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.VectorAppender;

        $z0 = r0.<org.apache.log4j.VectorAppender: boolean closed>;

        return $z0;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.VectorAppender r0;

        r0 := @this: org.apache.log4j.VectorAppender;

        return 0;
    }
}
