public class org.apache.log4j.CategoryTest extends junit.framework.TestCase
{

    public void <init>(java.lang.String)
    {
        org.apache.log4j.CategoryTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.CategoryTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    public void testForcedLog()
    {
        org.apache.log4j.CategoryTest r0;
        org.apache.log4j.CategoryTest$MockCategory $r2;
        org.apache.log4j.VectorAppender $r3;

        r0 := @this: org.apache.log4j.CategoryTest;

        $r2 = new org.apache.log4j.CategoryTest$MockCategory;

        specialinvoke $r2.<org.apache.log4j.CategoryTest$MockCategory: void <init>(java.lang.String)>("org.example.foo");

        virtualinvoke $r2.<org.apache.log4j.CategoryTest$MockCategory: void setAdditivity(boolean)>(0);

        $r3 = new org.apache.log4j.VectorAppender;

        specialinvoke $r3.<org.apache.log4j.VectorAppender: void <init>()>();

        virtualinvoke $r2.<org.apache.log4j.CategoryTest$MockCategory: void addAppender(org.apache.log4j.Appender)>($r3);

        virtualinvoke $r2.<org.apache.log4j.CategoryTest$MockCategory: void info(java.lang.String)>("Hello, World");

        return;
    }

    public void testGetChainedPriorityReturnType() throws java.lang.Exception
    {
        org.apache.log4j.CategoryTest r0;
        java.lang.reflect.Method r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.log4j.CategoryTest;

        $r2 = class "org/apache/log4j/Category";

        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getChainedPriority", null);

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r3 != class "org/apache/log4j/Priority" goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.log4j.CategoryTest: void assertTrue(boolean)>($z0);

        return;
    }

    public void testL7dlog()
    {
        org.apache.log4j.CategoryTest r0;
        org.apache.log4j.Logger r1;
        org.apache.log4j.Level r2, $r3;

        r0 := @this: org.apache.log4j.CategoryTest;

        r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("org.example.foo");

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke r1.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r3);

        r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        virtualinvoke r1.<org.apache.log4j.Logger: void l7dlog(org.apache.log4j.Priority,java.lang.String,java.lang.Throwable)>(r2, "Hello, World", null);

        return;
    }

    public void testL7dlog4Param()
    {
        org.apache.log4j.CategoryTest r0;
        org.apache.log4j.Logger r1;
        org.apache.log4j.Level r2, $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.log4j.CategoryTest;

        r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("org.example.foo");

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke r1.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r3);

        r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<org.apache.log4j.Logger: void l7dlog(org.apache.log4j.Priority,java.lang.String,java.lang.Object[],java.lang.Throwable)>(r2, "Hello, World", $r4, null);

        return;
    }

    public void testSetPriority()
    {
        org.apache.log4j.CategoryTest r0;
        org.apache.log4j.Logger r1;
        org.apache.log4j.Level r2;

        r0 := @this: org.apache.log4j.CategoryTest;

        r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("org.example.foo");

        r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        virtualinvoke r1.<org.apache.log4j.Logger: void setPriority(org.apache.log4j.Priority)>(r2);

        return;
    }
}
