public class org.apache.log4j.spi.LocationInfoTest extends junit.framework.TestCase
{

    public void <init>()
    {
        org.apache.log4j.spi.LocationInfoTest r0;

        r0 := @this: org.apache.log4j.spi.LocationInfoTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void testFourParamConstructor()
    {
        org.apache.log4j.spi.LocationInfoTest r0;
        java.lang.String r1, $r8, $r9, $r10, $r11, $r13, $r21, $r22;
        java.lang.Class $r6;
        org.apache.log4j.spi.LocationInfo $r7;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: org.apache.log4j.spi.LocationInfoTest;

        $r6 = class "org/apache/log4j/spi/LocationInfoTest";

        r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r7 = new org.apache.log4j.spi.LocationInfo;

        specialinvoke $r7.<org.apache.log4j.spi.LocationInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("LocationInfoTest.java", r1, "testFourParamConstructor", "41");

        $r8 = virtualinvoke $r7.<org.apache.log4j.spi.LocationInfo: java.lang.String getClassName()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>(r1, $r8);

        $r9 = virtualinvoke $r7.<org.apache.log4j.spi.LocationInfo: java.lang.String getMethodName()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>("testFourParamConstructor", $r9);

        $r10 = virtualinvoke $r7.<org.apache.log4j.spi.LocationInfo: java.lang.String getFileName()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>("LocationInfoTest.java", $r10);

        $r11 = virtualinvoke $r7.<org.apache.log4j.spi.LocationInfo: java.lang.String getLineNumber()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>("41", $r11);

        $r12 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testFourParamConstructor");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocationInfoTest.java");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("41");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = $r7.<org.apache.log4j.spi.LocationInfo: java.lang.String fullInfo>;

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>($r21, $r22);

        return;
    }

    public void testLocationInfo()
    {
        org.apache.log4j.spi.LocationInfoTest r0;
        org.apache.log4j.spi.LocationInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.apache.log4j.spi.LocationInfoTest;

        r1 = staticinvoke <org.apache.log4j.spi.LocationInfoTest$NameSubstringCaller: org.apache.log4j.spi.LocationInfo getInfo()>();

        $r2 = class "org/apache/log4j/spi/LocationInfoTest$NameSubstringCaller";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<org.apache.log4j.spi.LocationInfo: java.lang.String getClassName()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>($r3, $r4);

        $r5 = virtualinvoke r1.<org.apache.log4j.spi.LocationInfo: java.lang.String getMethodName()>();

        staticinvoke <org.apache.log4j.spi.LocationInfoTest: void assertEquals(java.lang.String,java.lang.String)>("getInfo", $r5);

        return;
    }
}
