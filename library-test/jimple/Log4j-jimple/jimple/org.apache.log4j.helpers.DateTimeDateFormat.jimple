public class org.apache.log4j.helpers.DateTimeDateFormat extends org.apache.log4j.helpers.AbsoluteTimeDateFormat
{
    private static final long serialVersionUID;
    java.lang.String[] shortMonths;

    public void <init>()
    {
        org.apache.log4j.helpers.DateTimeDateFormat r0;
        java.text.DateFormatSymbols $r1;
        java.lang.String[] $r2;

        r0 := @this: org.apache.log4j.helpers.DateTimeDateFormat;

        specialinvoke r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void <init>()>();

        $r1 = new java.text.DateFormatSymbols;

        specialinvoke $r1.<java.text.DateFormatSymbols: void <init>()>();

        $r2 = virtualinvoke $r1.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.lang.String[] shortMonths> = $r2;

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        org.apache.log4j.helpers.DateTimeDateFormat r0;
        java.util.TimeZone r1;
        java.util.Calendar $r2;

        r0 := @this: org.apache.log4j.helpers.DateTimeDateFormat;

        r1 := @parameter0: java.util.TimeZone;

        specialinvoke r0.<org.apache.log4j.helpers.DateTimeDateFormat: void <init>()>();

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1);

        virtualinvoke r0.<org.apache.log4j.helpers.DateTimeDateFormat: void setCalendar(java.util.Calendar)>($r2);

        return;
    }

    public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.log4j.helpers.DateTimeDateFormat r0;
        java.util.Date r1;
        java.lang.StringBuffer r2, $r16;
        java.text.FieldPosition r3;
        int i0, i1, $i2;
        java.util.Calendar $r4, $r5, $r8, $r13;
        java.lang.String[] $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.log4j.helpers.DateTimeDateFormat;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $r4 = r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.util.Calendar calendar>;

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r5 = r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.util.Calendar calendar>;

        i0 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(5);

        if i0 >= 10 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label1:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r9 = r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.lang.String[] shortMonths>;

        $r8 = r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.util.Calendar calendar>;

        $i2 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(2);

        $r10 = $r9[$i2];

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r13 = r0.<org.apache.log4j.helpers.DateTimeDateFormat: java.util.Calendar calendar>;

        i1 = virtualinvoke $r13.<java.util.Calendar: int get(int)>(1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r16 = specialinvoke r0.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>(r1, r2, r3);

        return $r16;
    }

    public java.util.Date parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.log4j.helpers.DateTimeDateFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;

        r0 := @this: org.apache.log4j.helpers.DateTimeDateFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        return null;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.helpers.DateTimeDateFormat: long serialVersionUID> = 5547637772208514971L;

        return;
    }
}
