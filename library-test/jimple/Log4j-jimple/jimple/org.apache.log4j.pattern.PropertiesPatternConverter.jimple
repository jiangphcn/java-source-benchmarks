public final class org.apache.log4j.pattern.PropertiesPatternConverter extends org.apache.log4j.pattern.LoggingEventPatternConverter
{
    private final java.lang.String option;

    private void <init>(java.lang.String[])
    {
        org.apache.log4j.pattern.PropertiesPatternConverter r0;
        java.lang.String[] r1;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r8;
        java.lang.StringBuilder $r3, $r5, $r6;

        r0 := @this: org.apache.log4j.pattern.PropertiesPatternConverter;

        r1 := @parameter0: java.lang.String[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Property{");

        $r4 = r1[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r8 = "Properties";

     label2:
        specialinvoke r0.<org.apache.log4j.pattern.LoggingEventPatternConverter: void <init>(java.lang.String,java.lang.String)>($r8, "property");

        if r1 == null goto label3;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label3;

        $r2 = r1[0];

        r0.<org.apache.log4j.pattern.PropertiesPatternConverter: java.lang.String option> = $r2;

        goto label4;

     label3:
        r0.<org.apache.log4j.pattern.PropertiesPatternConverter: java.lang.String option> = null;

     label4:
        return;
    }

    public static org.apache.log4j.pattern.PropertiesPatternConverter newInstance(java.lang.String[])
    {
        java.lang.String[] r0;
        org.apache.log4j.pattern.PropertiesPatternConverter $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new org.apache.log4j.pattern.PropertiesPatternConverter;

        specialinvoke $r1.<org.apache.log4j.pattern.PropertiesPatternConverter: void <init>(java.lang.String[])>(r0);

        return $r1;
    }

    public void format(org.apache.log4j.spi.LoggingEvent, java.lang.StringBuffer)
    {
        org.apache.log4j.pattern.PropertiesPatternConverter r0;
        org.apache.log4j.spi.LoggingEvent r1;
        java.lang.StringBuffer r2, $r13, $r14, $r15, $r16;
        java.util.Iterator r3;
        java.lang.Object r4, r5, r21;
        java.lang.String $r6, $r7, $r12;
        org.apache.log4j.helpers.MDCKeySetExtractor $r10;
        boolean $z0;
        java.lang.Exception $r18;
        java.util.Set r19;

        r0 := @this: org.apache.log4j.pattern.PropertiesPatternConverter;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r2 := @parameter1: java.lang.StringBuffer;

        $r6 = r0.<org.apache.log4j.pattern.PropertiesPatternConverter: java.lang.String option>;

        if $r6 != null goto label7;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

     label1:
        $r10 = <org.apache.log4j.helpers.MDCKeySetExtractor: org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE>;

        r19 = virtualinvoke $r10.<org.apache.log4j.helpers.MDCKeySetExtractor: java.util.Set getPropertyKeySet(org.apache.log4j.spi.LoggingEvent)>(r1);

        if r19 == null goto label6;

        r3 = interfaceinvoke r19.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label2:
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        r5 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMDC(java.lang.String)>($r12);

        $r13 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception while extracting MDC keys", $r18);

     label6:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        goto label8;

     label7:
        $r7 = r0.<org.apache.log4j.pattern.PropertiesPatternConverter: java.lang.String option>;

        r21 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMDC(java.lang.String)>($r7);

        if r21 == null goto label8;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r21);

     label8:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }
}
