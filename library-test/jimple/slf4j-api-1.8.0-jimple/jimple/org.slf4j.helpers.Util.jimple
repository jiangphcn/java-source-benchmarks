public final class org.slf4j.helpers.Util extends java.lang.Object
{
    private static org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER;
    private static boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED;

    static void <clinit>()
    {
        <org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED> = 0;

        return;
    }

    private void <init>()
    {
        org.slf4j.helpers.Util r0;

        r0 := @this: org.slf4j.helpers.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String safeGetSystemProperty(java.lang.String)
    {
        java.lang.String r0, r4;
        java.lang.IllegalArgumentException $r2;
        java.lang.SecurityException $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null input");

        throw $r2;

     label1:
        r4 = null;

     label2:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return r4;

        catch java.lang.SecurityException from label2 to label3 with label4;
    }

    public static boolean safeGetBooleanSystemProperty(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)>(r0);

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        return $z0;
    }

    private static org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()
    {
        org.slf4j.helpers.Util$ClassContextSecurityManager $r0, $r1, $r2, $r3;
        boolean $z0;

        $r0 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;

        if $r0 == null goto label1;

        $r3 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;

        return $r3;

     label1:
        $z0 = <org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED>;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r1 = staticinvoke <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()>();

        <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER> = $r1;

        <org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED> = 1;

        $r2 = <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER>;

        return $r2;
    }

    private static org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()
    {
        org.slf4j.helpers.Util$ClassContextSecurityManager $r1;
        java.lang.SecurityException $r2;

     label1:
        $r1 = new org.slf4j.helpers.Util$ClassContextSecurityManager;

        specialinvoke $r1.<org.slf4j.helpers.Util$ClassContextSecurityManager: void <init>(org.slf4j.helpers.Util$ClassContextSecurityManager)>(null);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static java.lang.Class getCallingClass()
    {
        org.slf4j.helpers.Util$ClassContextSecurityManager r0;
        java.lang.Class[] r1;
        java.lang.String r2, $r5;
        java.lang.Class $r3, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0;
        java.lang.IllegalStateException $r6;

        r0 = staticinvoke <org.slf4j.helpers.Util: org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()>();

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<org.slf4j.helpers.Util$ClassContextSecurityManager: java.lang.Class[] getClassContext()>();

        $r3 = class "org/slf4j/helpers/Util";

        r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        i5 = 0;

        goto label4;

     label2:
        $r4 = r1[i5];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        goto label5;

     label3:
        i5 = i5 + 1;

     label4:
        $i0 = lengthof r1;

        if i5 < $i0 goto label2;

     label5:
        $i1 = lengthof r1;

        if i5 >= $i1 goto label6;

        $i3 = i5 + 2;

        $i2 = lengthof r1;

        if $i3 < $i2 goto label7;

     label6:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find org.slf4j.helpers.Util or its caller in the stack; this should not happen");

        throw $r6;

     label7:
        $i4 = i5 + 2;

        $r7 = r1[$i4];

        return $r7;
    }

    public static final void report(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;
        java.io.PrintStream $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(r0);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Reported exception:");

        virtualinvoke r1.<java.lang.Throwable: void printStackTrace()>();

        return;
    }

    public static final void report(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r3;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("SLF4J: ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }
}
