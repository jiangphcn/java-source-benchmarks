public class org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase extends junit.framework.TestCase
{

    public void <init>()
    {
        org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase r0;

        r0 := @this: org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public static junit.framework.Test suite() throws java.lang.Exception
    {
        java.lang.Class r0, r8, $r10, $r19;
        java.lang.String r2, $r13, $r14, $r15, $r23;
        java.net.URL r3, $r21;
        org.apache.commons.logging.PathableClassLoader $r9, $r17, $r18, $r22;
        java.lang.ClassLoader $r11, $r20;
        java.lang.StringBuilder $r12, $r16;
        org.apache.commons.logging.PathableTestSuite $r24;

        r0 = class "org/apache/commons/logging/tccl/logfactory/TcclEnabledTestCase";

        $r9 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r9.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>(null);

        $r10 = class "junit/framework/Test";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r9.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>("junit.", $r11);

        virtualinvoke $r9.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("testclasses");

        virtualinvoke $r9.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("commons-logging");

        $r12 = new java.lang.StringBuilder;

        $r13 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke $r9.<org.apache.commons.logging.PathableClassLoader: java.net.URL findResource(java.lang.String)>(r2);

        $r17 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r17.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>(null);

        $r18 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>(null);

        $r19 = class "junit/framework/Test";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>("junit.", $r20);

        virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("commons-logging");

        virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("testclasses");

        virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>("org.apache.commons.logging.tccl.custom.", $r17);

        $r21 = new java.net.URL;

        specialinvoke $r21.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r3, "props_enable_tccl/");

        virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: void addURL(java.net.URL)>($r21);

        $r22 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r22.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>($r18);

        virtualinvoke $r22.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("testclasses");

        $r23 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        r8 = virtualinvoke $r18.<org.apache.commons.logging.PathableClassLoader: java.lang.Class loadClass(java.lang.String)>($r23);

        $r24 = new org.apache.commons.logging.PathableTestSuite;

        specialinvoke $r24.<org.apache.commons.logging.PathableTestSuite: void <init>(java.lang.Class,java.lang.ClassLoader)>(r8, $r22);

        return $r24;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase r0;

        r0 := @this: org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase;

        staticinvoke <org.apache.commons.logging.LogFactory: void releaseAll()>();

        return;
    }

    public void tearDown()
    {
        org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase r0;

        r0 := @this: org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase;

        staticinvoke <org.apache.commons.logging.LogFactory: void releaseAll()>();

        return;
    }

    public void testLoader() throws java.lang.Exception
    {
        org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase r0;
        java.lang.ClassLoader r1, r2;
        java.lang.Class $r3, r7, r9;
        java.lang.Thread $r4;
        java.lang.ClassNotFoundException $r5, $r6;

        r0 := @this: org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r2 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>("tccl not same as test classloader", r1, r2);

     label1:
        r7 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.apache.commons.logging.tccl.custom.MyLogFactoryImpl");

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void fail(java.lang.String)>("Unexpectedly able to load MyLogFactoryImpl via test class classloader");

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void assertNotNull(java.lang.Object)>(r7);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        r9 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.apache.commons.logging.tccl.custom.MyLogFactoryImpl");

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void assertNotNull(java.lang.Object)>(r9);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void fail(java.lang.String)>("Unexpectedly unable to load MyLogFactoryImpl via tccl classloader");

     label7:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
    }

    public void testTcclLoading() throws java.lang.Exception
    {
        org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase r0;
        org.apache.commons.logging.LogFactory r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase;

        r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <org.apache.commons.logging.tccl.logfactory.TcclEnabledTestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Correct LogFactory loaded", "org.apache.commons.logging.tccl.custom.MyLogFactoryImpl", $r3);

        return;
    }
}
