public class org.apache.commons.logging.simple.CustomConfigTestCase extends org.apache.commons.logging.simple.DefaultConfigTestCase
{
    protected java.util.List expected;
    protected java.lang.String[] testMessages;

    public void <init>()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        specialinvoke r0.<org.apache.commons.logging.simple.DefaultConfigTestCase: void <init>()>();

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "debug";

        $r1[1] = "info";

        $r1[2] = "warn";

        $r1[3] = "error";

        $r1[4] = "fatal";

        r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.lang.String[] testMessages> = $r1;

        return;
    }

    public void setProperties()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.Log", "org.apache.commons.logging.simple.DecoratedSimpleLog");

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.simplelog.defaultlog", "debug");

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        staticinvoke <org.apache.commons.logging.LogFactory: void releaseAll()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void setProperties()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected> = $r1;

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void setUpFactory()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void setUpLog(java.lang.String)>("DecoratedLogger");

        return;
    }

    public static junit.framework.Test suite() throws java.lang.Exception
    {
        java.lang.Class r0, r2, $r4;
        org.apache.commons.logging.PathableClassLoader $r3;
        java.lang.ClassLoader $r5;
        java.lang.String $r6;
        org.apache.commons.logging.PathableTestSuite $r7;

        r0 = class "org/apache/commons/logging/simple/CustomConfigTestCase";

        $r3 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>(null);

        $r4 = class "junit/framework/Test";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>("junit.", $r5);

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("testclasses");

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("commons-logging");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        r2 = virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

        $r7 = new org.apache.commons.logging.PathableTestSuite;

        specialinvoke $r7.<org.apache.commons.logging.PathableTestSuite: void <init>(java.lang.Class,java.lang.ClassLoader)>(r2, $r3);

        return $r7;
    }

    public void tearDown()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        specialinvoke r0.<org.apache.commons.logging.simple.DefaultConfigTestCase: void tearDown()>();

        r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected> = null;

        return;
    }

    public void testExceptionMessages() throws java.lang.Exception
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: void clearCache()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void logExceptionMessages()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkExpected()>();

        return;
    }

    public void testPlainMessages() throws java.lang.Exception
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: void clearCache()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void logPlainMessages()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkExpected()>();

        return;
    }

    public void testSerializable() throws java.lang.Exception
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: void clearCache()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void logPlainMessages()>();

        specialinvoke r0.<org.apache.commons.logging.simple.DefaultConfigTestCase: void testSerializable()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void logExceptionMessages()>();

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkExpected()>();

        return;
    }

    protected void checkDecorated()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r16;
        java.lang.Class $r3;
        java.lang.String $r4, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.commons.logging.impl.SimpleLog $r12;
        int $i0;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r14, $r17;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertNotNull(java.lang.String,java.lang.Object)>("Log exists", $r1);

        $r2 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Log class", "org.apache.commons.logging.simple.DecoratedSimpleLog", $r4);

        $r5 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z0);

        $r6 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z1);

        $r7 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isFatalEnabled()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z2);

        $r8 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z3);

        $r9 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z4 == 0 goto label1;

        $z7 = 0;

        goto label2;

     label1:
        $z7 = 1;

     label2:
        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z7);

        $r10 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z5);

        $r11 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r12 = (org.apache.commons.logging.impl.SimpleLog) $r11;

        $i0 = virtualinvoke $r12.<org.apache.commons.logging.impl.SimpleLog: int getLevel()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(int,int)>(2, $i0);

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkDecoratedDateTime()>();

        $r13 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r14 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r13;

        $r15 = virtualinvoke $r14.<org.apache.commons.logging.simple.DecoratedSimpleLog: java.lang.String getLogName()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,java.lang.String)>("DecoratedLogger", $r15);

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkShowDateTime()>();

        $r16 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r17 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r16;

        $z6 = virtualinvoke $r17.<org.apache.commons.logging.simple.DecoratedSimpleLog: boolean getShowShortName()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z6);

        return;
    }

    protected void checkShowDateTime()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        $z0 = virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: boolean getShowDateTime()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertTrue(boolean)>($z1);

        return;
    }

    protected void checkDecoratedDateTime()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        $r3 = virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: java.lang.String getDateTimeFormat()>();

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,java.lang.String)>("yyyy/MM/dd HH:mm:ss:SSS zzz", $r3);

        return;
    }

    protected void checkExpected()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        java.util.List r1, $r7;
        java.util.Iterator r2;
        org.apache.commons.logging.simple.LogRecord r3, r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r6;
        boolean $z0;
        java.lang.Object $r8, $r9, $r18, $r19;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15, $r16, $r20, $r21, $r22;
        java.lang.String $r13, $r17, $r23;
        java.lang.Throwable $r24, $r25;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r5 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r6 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r5;

        r1 = virtualinvoke $r6.<org.apache.commons.logging.simple.DecoratedSimpleLog: java.util.List getCache()>();

        $r7 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        i3 = 0;

        goto label2;

     label1:
        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.logging.simple.LogRecord) $r8;

        $i0 = i3;

        i3 = i3 + 1;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        r4 = (org.apache.commons.logging.simple.LogRecord) $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Row ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r3.<org.apache.commons.logging.simple.LogRecord: int type>;

        $i1 = r4.<org.apache.commons.logging.simple.LogRecord: int type>;

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,int,int)>($r13, $i2, $i1);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Row ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = r3.<org.apache.commons.logging.simple.LogRecord: java.lang.Object message>;

        $r18 = r4.<org.apache.commons.logging.simple.LogRecord: java.lang.Object message>;

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r17, $r19, $r18);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Row ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" throwable");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r3.<org.apache.commons.logging.simple.LogRecord: java.lang.Throwable t>;

        $r24 = r4.<org.apache.commons.logging.simple.LogRecord: java.lang.Throwable t>;

        staticinvoke <org.apache.commons.logging.simple.CustomConfigTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r23, $r25, $r24);

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    protected void checkStandard()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        virtualinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void checkDecorated()>();

        return;
    }

    protected void logExceptionMessages()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.DummyException $r2;
        org.apache.commons.logging.Log $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.commons.logging.simple.LogRecord $r9, $r11, $r13, $r15, $r17;
        java.util.List $r10, $r12, $r14, $r16, $r18;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r2 = new org.apache.commons.logging.DummyException;

        specialinvoke $r2.<org.apache.commons.logging.DummyException: void <init>()>();

        $r3 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("trace", $r2);

        $r4 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("debug", $r2);

        $r5 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>("info", $r2);

        $r6 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("warn", $r2);

        $r7 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error", $r2);

        $r8 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void fatal(java.lang.Object,java.lang.Throwable)>("fatal", $r2);

        $r10 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r9 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r9.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(2, "debug", $r2);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r12 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r11 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r11.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(3, "info", $r2);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r14 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r13 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r13.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(4, "warn", $r2);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r16 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r15 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r15.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(5, "error", $r2);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r18 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r17 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r17.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(6, "fatal", $r2);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r17);

        return;
    }

    protected void logPlainMessages()
    {
        org.apache.commons.logging.simple.CustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.commons.logging.simple.LogRecord $r7, $r9, $r11, $r13, $r15;
        java.util.List $r8, $r10, $r12, $r14, $r16;

        r0 := @this: org.apache.commons.logging.simple.CustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("trace");

        $r2 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("debug");

        $r3 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void info(java.lang.Object)>("info");

        $r4 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("warn");

        $r5 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>("error");

        $r6 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void fatal(java.lang.Object)>("fatal");

        $r8 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r7 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r7.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(2, "debug", null);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r10 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r9 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r9.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(3, "info", null);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r12 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r11 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r11.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(4, "warn", null);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r14 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r13 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r13.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(5, "error", null);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r16 = r0.<org.apache.commons.logging.simple.CustomConfigTestCase: java.util.List expected>;

        $r15 = new org.apache.commons.logging.simple.LogRecord;

        specialinvoke $r15.<org.apache.commons.logging.simple.LogRecord: void <init>(int,java.lang.Object,java.lang.Throwable)>(6, "fatal", null);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }
}
