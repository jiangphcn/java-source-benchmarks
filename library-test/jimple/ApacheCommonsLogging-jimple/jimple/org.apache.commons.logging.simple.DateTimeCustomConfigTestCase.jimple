public class org.apache.commons.logging.simple.DateTimeCustomConfigTestCase extends org.apache.commons.logging.simple.CustomConfigTestCase
{

    public void <init>()
    {
        org.apache.commons.logging.simple.DateTimeCustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.DateTimeCustomConfigTestCase;

        specialinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void <init>()>();

        return;
    }

    public static junit.framework.Test suite() throws java.lang.Exception
    {
        java.lang.Class r0, r2, $r4;
        org.apache.commons.logging.PathableClassLoader $r3;
        java.lang.ClassLoader $r5;
        java.lang.String $r6;
        org.apache.commons.logging.PathableTestSuite $r7;

        r0 = class "org/apache/commons/logging/simple/DateTimeCustomConfigTestCase";

        $r3 = new org.apache.commons.logging.PathableClassLoader;

        specialinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void <init>(java.lang.ClassLoader)>(null);

        $r4 = class "junit/framework/Test";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void useExplicitLoader(java.lang.String,java.lang.ClassLoader)>("junit.", $r5);

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("testclasses");

        virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: void addLogicalLib(java.lang.String)>("commons-logging");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        r2 = virtualinvoke $r3.<org.apache.commons.logging.PathableClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

        $r7 = new org.apache.commons.logging.PathableTestSuite;

        specialinvoke $r7.<org.apache.commons.logging.PathableTestSuite: void <init>(java.lang.Class,java.lang.ClassLoader)>(r2, $r3);

        return $r7;
    }

    public void setProperties()
    {
        org.apache.commons.logging.simple.DateTimeCustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.DateTimeCustomConfigTestCase;

        specialinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void setProperties()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.simplelog.dateTimeFormat", "dd.mm.yyyy");

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.simplelog.showdatetime", "true");

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        org.apache.commons.logging.simple.DateTimeCustomConfigTestCase r0;

        r0 := @this: org.apache.commons.logging.simple.DateTimeCustomConfigTestCase;

        specialinvoke r0.<org.apache.commons.logging.simple.CustomConfigTestCase: void setUp()>();

        return;
    }

    protected void checkDecoratedDateTime()
    {
        org.apache.commons.logging.simple.DateTimeCustomConfigTestCase r0;
        java.text.DateFormat r2;
        org.apache.commons.logging.Log $r4, $r8;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r5, $r9;
        java.lang.String $r6, $r11, $r12;
        java.util.Date $r7;
        java.text.SimpleDateFormat $r10;

        r0 := @this: org.apache.commons.logging.simple.DateTimeCustomConfigTestCase;

        $r4 = r0.<org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r5 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.logging.simple.DecoratedSimpleLog: java.lang.String getDateTimeFormat()>();

        staticinvoke <org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Expected date format to be set", "dd.mm.yyyy", $r6);

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        $r8 = r0.<org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r9 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r8;

        r2 = virtualinvoke $r9.<org.apache.commons.logging.simple.DecoratedSimpleLog: java.text.DateFormat getDateTimeFormatter()>();

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd.mm.yyyy");

        $r11 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        $r12 = virtualinvoke r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r7);

        staticinvoke <org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Date should be formatters to pattern dd.mm.yyyy", $r11, $r12);

        return;
    }

    protected void checkShowDateTime()
    {
        org.apache.commons.logging.simple.DateTimeCustomConfigTestCase r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.logging.simple.DecoratedSimpleLog $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.simple.DateTimeCustomConfigTestCase;

        $r1 = r0.<org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: org.apache.commons.logging.Log log>;

        $r2 = (org.apache.commons.logging.simple.DecoratedSimpleLog) $r1;

        $z0 = virtualinvoke $r2.<org.apache.commons.logging.simple.DecoratedSimpleLog: boolean getShowDateTime()>();

        staticinvoke <org.apache.commons.logging.simple.DateTimeCustomConfigTestCase: void assertTrue(boolean)>($z0);

        return;
    }
}
