class org.apache.commons.io.LineIteratorTestCase$2 extends org.apache.commons.io.LineIterator
{
    final org.apache.commons.io.LineIteratorTestCase this$0;

    void <init>(org.apache.commons.io.LineIteratorTestCase, java.io.Reader) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.io.LineIteratorTestCase$2 r0;
        org.apache.commons.io.LineIteratorTestCase r1;
        java.io.Reader $r2;

        r0 := @this: org.apache.commons.io.LineIteratorTestCase$2;

        r1 := @parameter0: org.apache.commons.io.LineIteratorTestCase;

        $r2 := @parameter1: java.io.Reader;

        r0.<org.apache.commons.io.LineIteratorTestCase$2: org.apache.commons.io.LineIteratorTestCase this$0> = r1;

        specialinvoke r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>($r2);

        return;
    }

    protected boolean isValidLine(java.lang.String)
    {
        org.apache.commons.io.LineIteratorTestCase$2 r0;
        java.lang.String r1;
        char c0;
        int $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.io.LineIteratorTestCase$2;

        r1 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i3 = c0 - 48;

        $i4 = $i3 % 3;

        if $i4 == 1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
