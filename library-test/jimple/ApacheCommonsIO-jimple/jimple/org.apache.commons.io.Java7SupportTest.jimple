public class org.apache.commons.io.Java7SupportTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.io.Java7SupportTest r0;

        r0 := @this: org.apache.commons.io.Java7SupportTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testIsSymLink() throws java.lang.Exception
    {
        org.apache.commons.io.Java7SupportTest r0;
        java.io.File $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.Java7SupportTest;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(".");

        $z0 = staticinvoke <org.apache.commons.io.Java7Support: boolean isAtLeastJava7()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.io.Java7Support: boolean isSymLink(java.io.File)>($r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

     label1:
        return;
    }

    public void createAndReadSymlink() throws java.lang.Exception
    {
        org.apache.commons.io.Java7SupportTest r0;
        java.io.File r2, $r6, $r7;
        java.lang.String $r3, $r5, $r9;
        java.util.Locale $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.Java7SupportTest;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("windows");

        staticinvoke <org.junit.Assume: void assumeFalse(boolean)>($z0);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>("target/fzz");

        $z1 = staticinvoke <org.apache.commons.io.Java7Support: boolean isAtLeastJava7()>();

        if $z1 == 0 goto label1;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>("../target");

        staticinvoke <org.apache.commons.io.Java7Support: java.io.File createSymbolicLink(java.io.File,java.io.File)>($r6, $r7);

        r2 = staticinvoke <org.apache.commons.io.Java7Support: java.io.File readSymbolicLink(java.io.File)>($r6);

        $r9 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("target", $r9);

        staticinvoke <org.apache.commons.io.Java7Support: void delete(java.io.File)>($r6);

     label1:
        return;
    }
}
