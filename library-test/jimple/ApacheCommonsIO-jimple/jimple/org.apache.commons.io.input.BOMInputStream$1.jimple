class org.apache.commons.io.input.BOMInputStream$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.apache.commons.io.input.BOMInputStream$1 r0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.commons.io.ByteOrderMark, org.apache.commons.io.ByteOrderMark)
    {
        org.apache.commons.io.input.BOMInputStream$1 r0;
        org.apache.commons.io.ByteOrderMark r1, r2;
        int i0, i1;

        r0 := @this: org.apache.commons.io.input.BOMInputStream$1;

        r1 := @parameter0: org.apache.commons.io.ByteOrderMark;

        r2 := @parameter1: org.apache.commons.io.ByteOrderMark;

        i0 = virtualinvoke r1.<org.apache.commons.io.ByteOrderMark: int length()>();

        i1 = virtualinvoke r2.<org.apache.commons.io.ByteOrderMark: int length()>();

        if i0 <= i1 goto label1;

        return -1;

     label1:
        if i1 <= i0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.input.BOMInputStream$1 r0;
        java.lang.Object r1, r2;
        org.apache.commons.io.ByteOrderMark $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.io.input.BOMInputStream$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.io.ByteOrderMark) r1;

        $r3 = (org.apache.commons.io.ByteOrderMark) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.input.BOMInputStream$1: int compare(org.apache.commons.io.ByteOrderMark,org.apache.commons.io.ByteOrderMark)>($r4, $r3);

        return $i0;
    }
}
