public class org.apache.commons.io.input.ClassLoaderObjectInputStreamTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testExpected() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        java.lang.Boolean r3;
        java.lang.Object r6;
        java.io.ByteArrayOutputStream $r7;
        java.io.ObjectOutputStream $r8;
        java.io.ByteArrayInputStream $r9;
        byte[] $r10;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r11;
        java.lang.Class $r12;
        java.lang.ClassLoader $r13;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r7);

        r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

        $r9 = new java.io.ByteArrayInputStream;

        $r10 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10);

        $r11 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r13, $r9);

        r6 = virtualinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: java.lang.Object readObject()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r6);

        virtualinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }

    public void testLong() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        java.lang.Long r3;
        java.lang.Object r6;
        java.io.ByteArrayOutputStream $r7;
        java.io.ObjectOutputStream $r8;
        java.io.ByteArrayInputStream $r9;
        byte[] $r10;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r11;
        java.lang.Class $r12;
        java.lang.ClassLoader $r13;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r7);

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(123L);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

        $r9 = new java.io.ByteArrayInputStream;

        $r10 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10);

        $r11 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r13, $r9);

        r6 = virtualinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: java.lang.Object readObject()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r6);

        virtualinvoke $r11.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }

    public void testPrimitiveLong() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        long l1;
        java.io.ByteArrayOutputStream $r5;
        java.io.ObjectOutputStream $r6;
        java.io.ByteArrayInputStream $r7;
        byte[] $r8;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r9;
        java.lang.Class $r10;
        java.lang.ClassLoader $r11;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = new java.io.ObjectOutputStream;

        specialinvoke $r6.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r5);

        virtualinvoke $r6.<java.io.ObjectOutputStream: void writeLong(long)>(12345L);

        virtualinvoke $r6.<java.io.ObjectOutputStream: void close()>();

        $r7 = new java.io.ByteArrayInputStream;

        $r8 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        $r9 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r9.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r11, $r7);

        l1 = virtualinvoke $r9.<org.apache.commons.io.input.ClassLoaderObjectInputStream: long readLong()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(12345L, l1);

        virtualinvoke $r9.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }

    public void testObject1() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        java.lang.Object r6;
        java.io.ByteArrayOutputStream $r7;
        java.io.ObjectOutputStream $r8;
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test $r9;
        java.io.ByteArrayInputStream $r10;
        byte[] $r11;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r12;
        java.lang.Class $r13;
        java.lang.ClassLoader $r14;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r7);

        $r9 = new org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test;

        specialinvoke $r9.<org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test: void <init>(int,java.lang.Object)>(123, null);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void close()>();

        $r10 = new java.io.ByteArrayInputStream;

        $r11 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        $r12 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r14, $r10);

        r6 = virtualinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: java.lang.Object readObject()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r6);

        virtualinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }

    public void testObject2() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        java.lang.Object r6;
        java.io.ByteArrayOutputStream $r7;
        java.io.ObjectOutputStream $r8;
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test $r9;
        java.lang.Integer $r10;
        java.io.ByteArrayInputStream $r11;
        byte[] $r12;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r13;
        java.lang.Class $r14;
        java.lang.ClassLoader $r15;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r7);

        $r9 = new org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r9.<org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test: void <init>(int,java.lang.Object)>(123, $r10);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        virtualinvoke $r8.<java.io.ObjectOutputStream: void close()>();

        $r11 = new java.io.ByteArrayInputStream;

        $r12 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r12);

        $r13 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r13.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r15, $r11);

        r6 = virtualinvoke $r13.<org.apache.commons.io.input.ClassLoaderObjectInputStream: java.lang.Object readObject()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r6);

        virtualinvoke $r13.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }

    public void testResolveProxyClass() throws java.lang.Exception
    {
        org.apache.commons.io.input.ClassLoaderObjectInputStreamTest r0;
        java.lang.Class r6, $r13, $r16, $r18;
        java.io.ByteArrayOutputStream $r7;
        java.io.ObjectOutputStream $r8;
        java.lang.Boolean $r9;
        java.io.ByteArrayInputStream $r10;
        byte[] $r11;
        org.apache.commons.io.input.ClassLoaderObjectInputStream $r12;
        java.lang.ClassLoader $r14;
        java.lang.String[] $r15;
        java.lang.String $r17;
        boolean $z0;

        r0 := @this: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r7);

        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        $r10 = new java.io.ByteArrayInputStream;

        $r11 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        $r12 = new org.apache.commons.io.input.ClassLoaderObjectInputStream;

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void <init>(java.lang.ClassLoader,java.io.InputStream)>($r14, $r10);

        $r15 = newarray (java.lang.String)[1];

        $r16 = class "java/lang/Comparable";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r15[0] = $r17;

        r6 = virtualinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>($r15);

        $r18 = class "java/lang/Comparable";

        $z0 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r6);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Assignable", $z0);

        virtualinvoke $r12.<org.apache.commons.io.input.ClassLoaderObjectInputStream: void close()>();

        return;
    }
}
