final class org.apache.commons.io.serialization.FullClassNameMatcher extends java.lang.Object implements org.apache.commons.io.serialization.ClassNameMatcher
{
    private final java.util.Set classesSet;

    public transient void <init>(java.lang.String[])
    {
        org.apache.commons.io.serialization.FullClassNameMatcher r0;
        java.lang.String[] r1;
        java.util.HashSet $r2;
        java.util.List $r3;
        java.util.Set $r4;

        r0 := @this: org.apache.commons.io.serialization.FullClassNameMatcher;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        r0.<org.apache.commons.io.serialization.FullClassNameMatcher: java.util.Set classesSet> = $r4;

        return;
    }

    public boolean matches(java.lang.String)
    {
        org.apache.commons.io.serialization.FullClassNameMatcher r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.serialization.FullClassNameMatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.io.serialization.FullClassNameMatcher: java.util.Set classesSet>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }
}
