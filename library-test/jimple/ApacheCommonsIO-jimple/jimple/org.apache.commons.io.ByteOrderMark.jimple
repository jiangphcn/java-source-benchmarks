public class org.apache.commons.io.ByteOrderMark extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.apache.commons.io.ByteOrderMark UTF_8;
    public static final org.apache.commons.io.ByteOrderMark UTF_16BE;
    public static final org.apache.commons.io.ByteOrderMark UTF_16LE;
    public static final org.apache.commons.io.ByteOrderMark UTF_32BE;
    public static final org.apache.commons.io.ByteOrderMark UTF_32LE;
    public static final char UTF_BOM;
    private final java.lang.String charsetName;
    private final int[] bytes;

    static void <clinit>()
    {
        org.apache.commons.io.ByteOrderMark $r0, $r2, $r4, $r6, $r8;
        int[] $r1, $r3, $r5, $r7, $r9;

        <org.apache.commons.io.ByteOrderMark: char UTF_BOM> = 65279;

        <org.apache.commons.io.ByteOrderMark: long serialVersionUID> = 1L;

        $r0 = new org.apache.commons.io.ByteOrderMark;

        $r1 = newarray (int)[3];

        $r1[0] = 239;

        $r1[1] = 187;

        $r1[2] = 191;

        specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-8", $r1);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8> = $r0;

        $r2 = new org.apache.commons.io.ByteOrderMark;

        $r3 = newarray (int)[2];

        $r3[0] = 254;

        $r3[1] = 255;

        specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16BE", $r3);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16BE> = $r2;

        $r4 = new org.apache.commons.io.ByteOrderMark;

        $r5 = newarray (int)[2];

        $r5[0] = 255;

        $r5[1] = 254;

        specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16LE", $r5);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16LE> = $r4;

        $r6 = new org.apache.commons.io.ByteOrderMark;

        $r7 = newarray (int)[4];

        $r7[0] = 0;

        $r7[1] = 0;

        $r7[2] = 254;

        $r7[3] = 255;

        specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32BE", $r7);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32BE> = $r6;

        $r8 = new org.apache.commons.io.ByteOrderMark;

        $r9 = newarray (int)[4];

        $r9[0] = 255;

        $r9[1] = 254;

        $r9[2] = 0;

        $r9[3] = 0;

        specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32LE", $r9);

        <org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32LE> = $r8;

        return;
    }

    public transient void <init>(java.lang.String, int[])
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.String r1;
        int[] r2, $r5, $r6;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No charsetName specified");

        throw $r3;

     label2:
        if r2 == null goto label3;

        $i0 = lengthof r2;

        if $i0 != 0 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No bytes specified");

        throw $r4;

     label4:
        r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName> = r1;

        $i1 = lengthof r2;

        $r5 = newarray (int)[$i1];

        r0.<org.apache.commons.io.ByteOrderMark: int[] bytes> = $r5;

        $r6 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, $i2);

        return;
    }

    public java.lang.String getCharsetName()
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r1 = r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;

        return $r1;
    }

    public int length()
    {
        org.apache.commons.io.ByteOrderMark r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r1 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int get(int)
    {
        org.apache.commons.io.ByteOrderMark r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = $r1[i0];

        return $i1;
    }

    public byte[] getBytes()
    {
        org.apache.commons.io.ByteOrderMark r0;
        byte[] r1;
        int[] $r2, $r3, $r4;
        int $i0, $i1, $i2, i4;
        byte $b3;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r2 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r2;

        r1 = newarray (byte)[$i0];

        i4 = 0;

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i2 = $r4[i4];

        $b3 = (byte) $i2;

        r1[i4] = $b3;

        i4 = i4 + 1;

     label2:
        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i1 = lengthof $r3;

        if i4 < $i1 goto label1;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.io.ByteOrderMark r0, r2;
        java.lang.Object r1;
        boolean $z0;
        int[] $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.io.ByteOrderMark;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.commons.io.ByteOrderMark) r1;

        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = lengthof $r3;

        $i1 = virtualinvoke r2.<org.apache.commons.io.ByteOrderMark: int length()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        i5 = 0;

        goto label5;

     label3:
        $r5 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i3 = $r5[i5];

        $i4 = virtualinvoke r2.<org.apache.commons.io.ByteOrderMark: int get(int)>(i5);

        if $i3 == $i4 goto label4;

        return 0;

     label4:
        i5 = i5 + 1;

     label5:
        $r4 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i2 = lengthof $r4;

        if i5 < $i2 goto label3;

        return 1;
    }

    public int hashCode()
    {
        org.apache.commons.io.ByteOrderMark r0;
        int i0, i1, i2, i3;
        java.lang.Class $r2;
        int[] $r3;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $r3 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        i1 = lengthof $r3;

        i3 = 0;

        goto label2;

     label1:
        i0 = $r3[i3];

        i2 = i2 + i0;

        i3 = i3 + 1;

     label2:
        if i3 < i1 goto label1;

        return i2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.ByteOrderMark r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r12, $r13, $r17;
        int[] $r11, $r18;
        int $i0, $i1, i2, $i3;

        r0 := @this: org.apache.commons.io.ByteOrderMark;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r7 = r0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        i2 = 0;

        goto label3;

     label1:
        if i2 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r11 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i0 = $r11[i2];

        $i1 = 255 & $i0;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i2 = i2 + 1;

     label3:
        $r18 = r0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;

        $i3 = lengthof $r18;

        if i2 < $i3 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }
}
