public final class org.apache.log4j.LogSF extends org.apache.log4j.LogXF
{
    private static final java.lang.String FQCN;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "org/apache/log4j/LogSF";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <org.apache.log4j.LogSF: java.lang.String FQCN> = $r1;

        return;
    }

    private void <init>()
    {
        org.apache.log4j.LogSF r0;

        r0 := @this: org.apache.log4j.LogSF;

        specialinvoke r0.<org.apache.log4j.LogXF: void <init>()>();

        return;
    }

    private static java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3, $r4, $r7, $r10, $r13, $r17, $r18, $r22, $r23, $r25, r26, r27;
        java.lang.Object[] r1;
        java.lang.StringBuilder $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r15, $r16, $r19, $r20, $r21, $r24;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, i9, i10, i11;
        char $c3, $c7;
        java.lang.Object $r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        if r0 == null goto label9;

        r26 = "";

        i9 = 0;

        i10 = 0;

        i11 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("{");

        goto label8;

     label1:
        if i11 == 0 goto label2;

        $i6 = i11 - 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        if $c7 == 92 goto label6;

     label2:
        $r2 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i11);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r27 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = i11 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $i2 = i11 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 125 goto label5;

        if r1 == null goto label3;

        $i4 = lengthof r1;

        if i9 >= $i4 goto label3;

        $r12 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r27);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $i5 = i9;

        i9 = i9 + 1;

        $r14 = r1[$i5];

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        r26 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r27);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{}");

        r26 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i10 = i11 + 2;

        goto label7;

     label5:
        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r27);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        r26 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        i10 = i11 + 1;

        goto label7;

     label6:
        $r16 = new java.lang.StringBuilder;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $i8 = i11 - 1;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, $i8);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        i10 = i11 + 1;

     label7:
        i11 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("{", i10);

     label8:
        if i11 >= 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);

        $r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i10);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label9:
        return null;
    }

    private static java.lang.String format(java.lang.String, java.lang.Object)
    {
        java.lang.String r0, $r3, $r4, $r6, $r8, $r10;
        java.lang.Object r1;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.lang.Object[] $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\\{");

        if $i1 < 0 goto label1;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        $r10 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r9);

        return $r10;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("{}");

        if i0 < 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $i2 = i0 + 2;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label2:
        return r0;
    }

    private static java.lang.String format(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, r5, $r7;
        java.lang.Object[] r2;
        java.lang.Exception $r3;
        java.util.ResourceBundle r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if r0 == null goto label4;

     label1:
        r4 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0);

        r5 = virtualinvoke r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r1);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r5 = r1;

        goto label5;

     label4:
        r5 = r1;

     label5:
        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, r2);

        return $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void forcedLog(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r4;
        org.apache.log4j.spi.LoggingEvent $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        $r3 = new org.apache.log4j.spi.LoggingEvent;

        $r4 = <org.apache.log4j.LogSF: java.lang.String FQCN>;

        specialinvoke $r3.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, r0, r1, r2, null);

        virtualinvoke r0.<org.apache.log4j.Logger: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r3);

        return;
    }

    private static void forcedLog(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Throwable)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.log4j.spi.LoggingEvent $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Throwable;

        $r4 = new org.apache.log4j.spi.LoggingEvent;

        $r5 = <org.apache.log4j.LogSF: java.lang.String FQCN>;

        specialinvoke $r4.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, r0, r1, r2, r3);

        virtualinvoke r0.<org.apache.log4j.Logger: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r4);

        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object[] r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        boolean $z0;
        org.apache.log4j.Level $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        boolean $z0;
        org.apache.log4j.Level $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r4);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object[] r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void error(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object[] r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void fatal(org.apache.log4j.Logger, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object[] r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r6;
        java.lang.Object[] r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r5, $r6, r1);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        boolean $z0;
        org.apache.log4j.Level $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r4, $r5, r1);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        boolean $z0;
        org.apache.log4j.Level $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r4, $r5, r1);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r6;
        java.lang.Object[] r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r5, $r6, r1);

     label1:
        return;
    }

    public static void error(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r6;
        java.lang.Object[] r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r5, $r6, r1);

     label1:
        return;
    }

    public static void fatal(org.apache.log4j.Logger, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r6;
        java.lang.Object[] r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, $r5, $r6, r1);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        boolean z0, $z1;
        org.apache.log4j.Level $r2, $r3;
        java.lang.Boolean $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z1 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        char c0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Character $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        byte b0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Byte $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        b0 := @parameter2: byte;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        short s0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Short $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        int i0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        long l0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Long $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        float f0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Float $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        double d0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Double $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $r2 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r3 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r5, $r7);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4;
        org.apache.log4j.Level $r5, $r6;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r5 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r5);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r6, $r8);

     label1:
        return;
    }

    public static void trace(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5;
        org.apache.log4j.Level $r6, $r7;
        boolean $z0;
        java.lang.Object[] $r8;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r6 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r6);

        if $z0 == 0 goto label1;

        $r7 = <org.apache.log4j.LogSF: org.apache.log4j.Level TRACE>;

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5);

        $r9 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r8);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r7, $r9);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        boolean z0, $z1;
        org.apache.log4j.Level $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        char c0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Character $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        byte b0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Byte $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        b0 := @parameter2: byte;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        short s0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Short $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        int i0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        long l0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Long $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        float f0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Float $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        double d0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Double $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        boolean $z0;
        org.apache.log4j.Level $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r4);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3;
        boolean $z0;
        org.apache.log4j.Level $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r2, r3);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r6);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4;
        boolean $z0;
        org.apache.log4j.Level $r5;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r5, $r7);

     label1:
        return;
    }

    public static void debug(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5;
        boolean $z0;
        org.apache.log4j.Level $r6;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r6, $r8);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        boolean z0, $z1;
        org.apache.log4j.Level $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z1 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        char c0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Character $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        byte b0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Byte $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        b0 := @parameter2: byte;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        short s0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Short $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        int i0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        long l0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Long $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        float f0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Float $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        double d0;
        boolean $z0;
        org.apache.log4j.Level $r2;
        java.lang.Double $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r2, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        boolean $z0;
        org.apache.log4j.Level $r3;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r4);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3;
        boolean $z0;
        org.apache.log4j.Level $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r2, r3);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r6);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4;
        boolean $z0;
        org.apache.log4j.Level $r5;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r5, $r7);

     label1:
        return;
    }

    public static void info(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5;
        boolean $z0;
        org.apache.log4j.Level $r6;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r6, $r8);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        boolean z0, $z1;
        org.apache.log4j.Level $r2, $r3;
        java.lang.Boolean $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z1 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        char c0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Character $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        byte b0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Byte $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        b0 := @parameter2: byte;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        short s0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Short $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        int i0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        long l0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Long $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        float f0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Float $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        double d0;
        org.apache.log4j.Level $r2, $r3;
        boolean $z0;
        java.lang.Double $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r3, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2;
        org.apache.log4j.Level $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object)>(r1, r2);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r4, $r5);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3;
        org.apache.log4j.Level $r4, $r5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r5, $r7);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4;
        org.apache.log4j.Level $r5, $r6;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r5);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r6, $r8);

     label1:
        return;
    }

    public static void warn(org.apache.log4j.Logger, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5;
        org.apache.log4j.Level $r6, $r7;
        boolean $z0;
        java.lang.Object[] $r8;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r6 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r6);

        if $z0 == 0 goto label1;

        $r7 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5);

        $r9 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r8);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, $r7, $r9);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r4;
        java.lang.Object[] r3;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r4);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.Throwable r2;
        java.lang.String r3, $r5;
        java.lang.Object[] r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.Throwable;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, r1, $r5, r2);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        boolean $z0;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>(r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        boolean z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z1 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        byte b0;
        boolean $z0;
        java.lang.Byte $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        b0 := @parameter3: byte;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        char c0;
        boolean $z0;
        java.lang.Character $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        c0 := @parameter3: char;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        short s0;
        boolean $z0;
        java.lang.Short $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        s0 := @parameter3: short;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        int i0;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        long l0;
        boolean $z0;
        java.lang.Long $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        float f0;
        boolean $z0;
        java.lang.Float $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        f0 := @parameter3: float;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r5;
        double d0;
        boolean $z0;
        java.lang.Double $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        d0 := @parameter3: double;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r3);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        boolean $z0;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r3, r4, r5);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r7);

     label1:
        return;
    }

    public static void log(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r3, r4, r5, r6);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r8);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r5;
        java.lang.Object[] r4;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, r4);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r5);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.Throwable, java.lang.String, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.Throwable r2;
        java.lang.String r3, r4, $r6;
        java.lang.Object[] r5;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.Throwable;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r3, r4, r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>(r0, r1, $r6, r2);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        java.lang.Object r4;
        boolean $z0;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>(r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, boolean)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        boolean z0, $z1;
        java.lang.Boolean $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $z1 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z1 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Boolean valueOf(boolean)>(z0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, char)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        char c0;
        boolean $z0;
        java.lang.Character $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        c0 := @parameter4: char;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Character valueOf(char)>(c0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, byte)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        byte b0;
        boolean $z0;
        java.lang.Byte $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        b0 := @parameter4: byte;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Byte valueOf(byte)>(b0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, short)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        short s0;
        boolean $z0;
        java.lang.Short $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        s0 := @parameter4: short;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Short valueOf(short)>(s0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, int)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        int i0;
        boolean $z0;
        java.lang.Integer $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Integer valueOf(int)>(i0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, long)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        long l0;
        boolean $z0;
        java.lang.Long $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Long valueOf(long)>(l0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, float)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        float f0;
        boolean $z0;
        java.lang.Float $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        f0 := @parameter4: float;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Float valueOf(float)>(f0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, double)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r6;
        double d0;
        boolean $z0;
        java.lang.Double $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        d0 := @parameter4: double;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.log4j.LogSF: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object)>($r4);

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r5);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r6);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r7;
        java.lang.Object r4, r5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>(r4, r5);

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r6);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r7);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r8;
        java.lang.Object r4, r5, r6;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6);

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r7);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r8);

     label1:
        return;
    }

    public static void logrb(org.apache.log4j.Logger, org.apache.log4j.Level, java.lang.String, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level r1;
        java.lang.String r2, r3, $r9;
        java.lang.Object r4, r5, r6, r7;
        boolean $z0;
        java.lang.Object[] $r8;

        r0 := @parameter0: org.apache.log4j.Logger;

        r1 := @parameter1: org.apache.log4j.Level;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>(r1);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <org.apache.log4j.LogSF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7);

        $r9 = staticinvoke <org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>(r2, r3, $r8);

        staticinvoke <org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>(r0, r1, $r9);

     label1:
        return;
    }
}
