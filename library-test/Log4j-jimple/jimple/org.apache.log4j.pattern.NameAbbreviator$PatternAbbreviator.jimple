class org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator extends org.apache.log4j.pattern.NameAbbreviator
{
    private final org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments;

    public void <init>(java.util.List)
    {
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator r0;
        java.util.List r1;
        int $i0, $i1;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] $r2, $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.log4j.pattern.NameAbbreviator: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fragments must have at least one element");

        throw $r5;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = newarray (org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment)[$i1];

        r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments> = $r2;

        $r3 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        return;
    }

    public void abbreviate(int, java.lang.StringBuffer)
    {
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.StringBuffer r1;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] $r2, $r3, $r4, $r5;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment $r6, r7;

        r0 := @this: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        i7 = i0;

        i8 = 0;

        goto label2;

     label1:
        $r5 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $r6 = $r5[i8];

        i7 = virtualinvoke $r6.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment: int abbreviate(java.lang.StringBuffer,int)>(r1, i7);

        i8 = i8 + 1;

     label2:
        $r2 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        if i8 >= $i2 goto label3;

        $i6 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i7 < $i6 goto label1;

     label3:
        $r4 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $r3 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $i3 = lengthof $r3;

        $i4 = $i3 - 1;

        r7 = $r4[$i4];

        goto label5;

     label4:
        i7 = virtualinvoke r7.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment: int abbreviate(java.lang.StringBuffer,int)>(r1, i7);

     label5:
        $i5 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i7 >= $i5 goto label6;

        if i7 >= 0 goto label4;

     label6:
        return;
    }
}
