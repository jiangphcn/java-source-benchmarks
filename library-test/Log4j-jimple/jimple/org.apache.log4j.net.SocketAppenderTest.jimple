public class org.apache.log4j.net.SocketAppenderTest extends junit.framework.TestCase
{
    private static org.apache.log4j.Logger logger;
    private static org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender secondary;

    public void <init>(java.lang.String)
    {
        org.apache.log4j.net.SocketAppenderTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.net.SocketAppenderTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void setUp()
    {
        org.apache.log4j.net.SocketAppenderTest r0;
        org.apache.log4j.Logger $r1, $r2;
        org.apache.log4j.Appender $r3;
        org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender $r4;

        r0 := @this: org.apache.log4j.net.SocketAppenderTest;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>("input/xml/SocketAppenderTestConfig.xml");

        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "org/apache/log4j/net/SocketAppenderTest");

        <org.apache.log4j.net.SocketAppenderTest: org.apache.log4j.Logger logger> = $r1;

        $r2 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("org.apache.log4j.net.SocketAppenderTestDummy");

        $r3 = virtualinvoke $r2.<org.apache.log4j.Logger: org.apache.log4j.Appender getAppender(java.lang.String)>("lastOnly");

        $r4 = (org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender) $r3;

        <org.apache.log4j.net.SocketAppenderTest: org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender secondary> = $r4;

        return;
    }

    protected void tearDown()
    {
        org.apache.log4j.net.SocketAppenderTest r0;

        r0 := @this: org.apache.log4j.net.SocketAppenderTest;

        return;
    }

    public void testFallbackErrorHandlerWhenStarting()
    {
        org.apache.log4j.net.SocketAppenderTest r0;
        org.apache.log4j.Logger $r2;
        org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.log4j.net.SocketAppenderTest;

        $r2 = <org.apache.log4j.net.SocketAppenderTest: org.apache.log4j.Logger logger>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void debug(java.lang.Object)>("testFallbackErrorHandlerWhenStarting");

        $r3 = <org.apache.log4j.net.SocketAppenderTest: org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender secondary>;

        $r4 = virtualinvoke $r3.<org.apache.log4j.net.SocketAppenderTest$LastOnlyAppender: java.lang.String getLastMessage()>();

        staticinvoke <org.apache.log4j.net.SocketAppenderTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("SocketAppender with FallbackErrorHandler", "testFallbackErrorHandlerWhenStarting", $r4);

        return;
    }
}
