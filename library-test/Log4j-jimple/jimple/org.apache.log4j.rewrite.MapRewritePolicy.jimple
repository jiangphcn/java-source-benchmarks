public class org.apache.log4j.rewrite.MapRewritePolicy extends java.lang.Object implements org.apache.log4j.rewrite.RewritePolicy
{

    public void <init>()
    {
        org.apache.log4j.rewrite.MapRewritePolicy r0;

        r0 := @this: org.apache.log4j.rewrite.MapRewritePolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.log4j.spi.LoggingEvent rewrite(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.rewrite.MapRewritePolicy r0;
        org.apache.log4j.spi.LoggingEvent r1, $r16;
        java.lang.Object r2, $r10, $r12, $r13, $r14, r25;
        java.util.Map r4, $r8;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r7;
        java.util.Set $r9;
        java.lang.String $r11, $r17, $r19, $r21, $r23;
        org.apache.log4j.Category $r18, $r26;
        long $l0;
        org.apache.log4j.Level $r20;
        org.apache.log4j.spi.ThrowableInformation $r22;
        org.apache.log4j.spi.LocationInfo $r24;

        r0 := @this: org.apache.log4j.rewrite.MapRewritePolicy;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r2 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMessage()>();

        $z0 = r2 instanceof java.util.Map;

        if $z0 == 0 goto label6;

        $r7 = new java.util.HashMap;

        $r8 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.util.Map getProperties()>();

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8);

        r4 = (java.util.Map) r2;

        r25 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("message");

        if r25 != null goto label1;

        r25 = r2;

     label1:
        $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r10;

        $r11 = "message";

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label3;

        $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $r16 = new org.apache.log4j.spi.LoggingEvent;

        $r17 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getFQNOfLoggerClass()>();

        $r18 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Category getLogger()>();

        if $r18 == null goto label4;

        $r26 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Category getLogger()>();

        goto label5;

     label4:
        $r19 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getLoggerName()>();

        $r26 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>($r19);

     label5:
        $l0 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: long getTimeStamp()>();

        $r20 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $r21 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getThreadName()>();

        $r22 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.ThrowableInformation getThrowableInformation()>();

        $r23 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String getNDC()>();

        $r24 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

        specialinvoke $r16.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,long,org.apache.log4j.Level,java.lang.Object,java.lang.String,org.apache.log4j.spi.ThrowableInformation,java.lang.String,org.apache.log4j.spi.LocationInfo,java.util.Map)>($r17, $r26, $l0, $r20, r25, $r21, $r22, $r23, $r24, $r7);

        return $r16;

     label6:
        return r1;
    }
}
