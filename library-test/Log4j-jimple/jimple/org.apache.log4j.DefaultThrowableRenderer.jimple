public final class org.apache.log4j.DefaultThrowableRenderer extends java.lang.Object implements org.apache.log4j.spi.ThrowableRenderer
{

    public void <init>()
    {
        org.apache.log4j.DefaultThrowableRenderer r0;

        r0 := @this: org.apache.log4j.DefaultThrowableRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String[] doRender(java.lang.Throwable)
    {
        org.apache.log4j.DefaultThrowableRenderer r0;
        java.lang.Throwable r1;
        java.lang.String[] $r2;

        r0 := @this: org.apache.log4j.DefaultThrowableRenderer;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = staticinvoke <org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>(r1);

        return $r2;
    }

    public static java.lang.String[] render(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.io.StringWriter $r4;
        java.io.PrintWriter $r5;
        java.io.LineNumberReader $r6;
        java.io.StringReader $r7;
        java.lang.String $r8, $r12, r17;
        java.util.ArrayList $r9;
        java.io.IOException $r11;
        boolean $z1;
        java.lang.Thread $r13;
        java.lang.RuntimeException $r14;
        int $i0;
        java.lang.String[] r19;

        r0 := @parameter0: java.lang.Throwable;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

     label01:
        virtualinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r5);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

     label04:
        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

        $r6 = new java.io.LineNumberReader;

        $r7 = new java.io.StringReader;

        $r8 = virtualinvoke $r4.<java.io.StringWriter: java.lang.String toString()>();

        specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r8);

        specialinvoke $r6.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r7);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label05:
        r17 = virtualinvoke $r6.<java.io.LineNumberReader: java.lang.String readLine()>();

        goto label07;

     label06:
        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

        r17 = virtualinvoke $r6.<java.io.LineNumberReader: java.lang.String readLine()>();

     label07:
        if r17 != null goto label06;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        $z1 = $r11 instanceof java.io.InterruptedIOException;

        if $z1 == 0 goto label10;

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r13.<java.lang.Thread: void interrupt()>();

     label10:
        $r12 = virtualinvoke $r11.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label11:
        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        r19 = newarray (java.lang.String)[$i0];

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r19);

        return r19;

        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label08 with label09;
    }
}
