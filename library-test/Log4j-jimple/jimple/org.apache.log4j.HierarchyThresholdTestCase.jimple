public class org.apache.log4j.HierarchyThresholdTestCase extends junit.framework.TestCase
{
    static java.lang.String TEMP;
    static org.apache.log4j.Logger logger;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP> = "output/temp";

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "org/apache/log4j/HierarchyThresholdTestCase");

        <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    public void setUp()
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        return;
    }

    public void tearDown()
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.io.PrintStream $r1;
        org.apache.log4j.Logger $r2;
        org.apache.log4j.spi.LoggerRepository $r3;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Tearing down test case.");

        $r2 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.Logger: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>();

        interfaceinvoke $r3.<org.apache.log4j.spi.LoggerRepository: void resetConfiguration()>();

        return;
    }

    public void test1() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold1.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.1");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test2() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold2.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.2");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test3() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold3.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.3");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test4() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold4.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.4");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test5() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold5.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.5");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test6() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold6.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.6");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test7() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold7.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.7");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test8() throws java.lang.Exception
    {
        org.apache.log4j.HierarchyThresholdTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.HierarchyThresholdTestCase;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>("input/hierarchyThreshold8.properties");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void common()>();

        $r1 = <org.apache.log4j.HierarchyThresholdTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/hierarchyThreshold.8");

        staticinvoke <org.apache.log4j.HierarchyThresholdTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    static void common()
    {
        java.lang.String r0;
        java.lang.Thread $r1, $r2, $r10;
        org.apache.log4j.xml.XLevel $r3;
        org.apache.log4j.Logger $r4, $r5, $r6, $r7, $r8, $r9;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<java.lang.Thread: void setName(java.lang.String)>("main");

        $r4 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        $r3 = <org.apache.log4j.xml.XLevel: org.apache.log4j.xml.XLevel TRACE>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r3, "m0");

        $r5 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void debug(java.lang.Object)>("m1");

        $r6 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        virtualinvoke $r6.<org.apache.log4j.Logger: void info(java.lang.Object)>("m2");

        $r7 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void warn(java.lang.Object)>("m3");

        $r8 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        virtualinvoke $r8.<org.apache.log4j.Logger: void error(java.lang.Object)>("m4");

        $r9 = <org.apache.log4j.HierarchyThresholdTestCase: org.apache.log4j.Logger logger>;

        virtualinvoke $r9.<org.apache.log4j.Logger: void fatal(java.lang.Object)>("m5");

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r10.<java.lang.Thread: void setName(java.lang.String)>(r0);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r1;
        org.apache.log4j.HierarchyThresholdTestCase $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r1 = new junit.framework.TestSuite;

        specialinvoke $r1.<junit.framework.TestSuite: void <init>()>();

        $r2 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r2.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test1");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r2);

        $r3 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r3.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test2");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r3);

        $r4 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r4.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test3");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r4);

        $r5 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r5.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test4");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r5);

        $r6 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r6.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test5");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r6);

        $r7 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r7.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test6");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r7);

        $r8 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r8.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test7");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r8);

        $r9 = new org.apache.log4j.HierarchyThresholdTestCase;

        specialinvoke $r9.<org.apache.log4j.HierarchyThresholdTestCase: void <init>(java.lang.String)>("test8");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r9);

        return $r1;
    }
}
