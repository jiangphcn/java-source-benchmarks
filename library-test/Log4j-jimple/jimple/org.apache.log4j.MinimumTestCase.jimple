public class org.apache.log4j.MinimumTestCase extends junit.framework.TestCase
{
    static java.lang.String FILTERED;
    static java.lang.String EXCEPTION1;
    static java.lang.String EXCEPTION2;
    static java.lang.String EXCEPTION3;
    static java.lang.String EXCEPTION4;
    static java.lang.String EXCEPTION5;
    static java.lang.String TTCC_PAT;
    static java.lang.String TTCC2_PAT;
    org.apache.log4j.Logger root;
    org.apache.log4j.Logger logger;

    static void <clinit>()
    {
        <org.apache.log4j.MinimumTestCase: java.lang.String FILTERED> = "output/filtered";

        <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION1> = "java.lang.Exception: Just testing";

        <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION2> = "\\s*at .*\\(.*\\)";

        <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION3> = "\\s*at .*\\(Native Method\\)";

        <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION4> = "\\s*at .*\\(.*Compiled Code\\)";

        <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION5> = "\\s*at .*\\(.*libgcj.*\\)";

        <org.apache.log4j.MinimumTestCase: java.lang.String TTCC_PAT> = "^\\d{1,2} .{2,6}\\.? 2\\d{3} \\d{2}:\\d{2}:\\d{2},\\d{3} \\[main]\\ (TRACE|DEBUG|INFO|WARN|ERROR|FATAL) .* - Message \\d{1,2}";

        <org.apache.log4j.MinimumTestCase: java.lang.String TTCC2_PAT> = "^\\d{1,2} .{2,6}\\.? 2\\d{3} \\d{2}:\\d{2}:\\d{2},\\d{3} \\[main]\\ (TRACE|DEBUG|INFO|WARN|ERROR|FATAL) .* - Messages should bear numbers 0 through 29\\.";

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.log4j.MinimumTestCase r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    public void setUp()
    {
        org.apache.log4j.MinimumTestCase r0;
        org.apache.log4j.Logger $r1, $r2;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>();

        r0.<org.apache.log4j.MinimumTestCase: org.apache.log4j.Logger root> = $r1;

        $r2 = r0.<org.apache.log4j.MinimumTestCase: org.apache.log4j.Logger root>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void removeAllAppenders()>();

        return;
    }

    public void tearDown()
    {
        org.apache.log4j.MinimumTestCase r0;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.spi.LoggerRepository $r2;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        $r1 = r0.<org.apache.log4j.MinimumTestCase: org.apache.log4j.Logger root>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.Logger: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>();

        interfaceinvoke $r2.<org.apache.log4j.spi.LoggerRepository: void resetConfiguration()>();

        return;
    }

    public void simple() throws java.lang.Exception
    {
        org.apache.log4j.MinimumTestCase r0;
        org.apache.log4j.SimpleLayout $r3;
        org.apache.log4j.FileAppender $r4;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.util.Filter[] $r6;
        org.apache.log4j.util.LineNumberFilter $r7;
        java.lang.String $r8, $r11;
        org.apache.log4j.util.SunReflectFilter $r9;
        org.apache.log4j.util.JunitTestRunnerFilter $r10;
        boolean $z0;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        $r3 = new org.apache.log4j.SimpleLayout;

        specialinvoke $r3.<org.apache.log4j.SimpleLayout: void <init>()>();

        $r4 = new org.apache.log4j.FileAppender;

        specialinvoke $r4.<org.apache.log4j.FileAppender: void <init>(org.apache.log4j.Layout,java.lang.String,boolean)>($r3, "output/simple", 0);

        $r5 = r0.<org.apache.log4j.MinimumTestCase: org.apache.log4j.Logger root>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void addAppender(org.apache.log4j.Appender)>($r4);

        virtualinvoke r0.<org.apache.log4j.MinimumTestCase: void common()>();

        $r8 = <org.apache.log4j.MinimumTestCase: java.lang.String FILTERED>;

        $r6 = newarray (org.apache.log4j.util.Filter)[3];

        $r7 = new org.apache.log4j.util.LineNumberFilter;

        specialinvoke $r7.<org.apache.log4j.util.LineNumberFilter: void <init>()>();

        $r6[0] = $r7;

        $r9 = new org.apache.log4j.util.SunReflectFilter;

        specialinvoke $r9.<org.apache.log4j.util.SunReflectFilter: void <init>()>();

        $r6[1] = $r9;

        $r10 = new org.apache.log4j.util.JunitTestRunnerFilter;

        specialinvoke $r10.<org.apache.log4j.util.JunitTestRunnerFilter: void <init>()>();

        $r6[2] = $r10;

        staticinvoke <org.apache.log4j.util.Transformer: void transform(java.lang.String,java.lang.String,org.apache.log4j.util.Filter[])>("output/simple", $r8, $r6);

        $r11 = <org.apache.log4j.MinimumTestCase: java.lang.String FILTERED>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r11, "witness/simple");

        staticinvoke <org.apache.log4j.MinimumTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void ttcc() throws java.lang.Exception
    {
        org.apache.log4j.MinimumTestCase r0;
        java.lang.String r3, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r26;
        org.apache.log4j.TTCCLayout $r5;
        org.apache.log4j.FileAppender $r6;
        org.apache.log4j.Logger $r7;
        java.lang.Thread $r8, $r9, $r10;
        org.apache.log4j.util.ControlFilter $r11;
        java.lang.String[] $r12;
        org.apache.log4j.util.Filter[] $r20;
        org.apache.log4j.util.LineNumberFilter $r21;
        org.apache.log4j.util.AbsoluteDateAndTimeFilter $r23;
        org.apache.log4j.util.SunReflectFilter $r24;
        org.apache.log4j.util.JunitTestRunnerFilter $r25;
        boolean $z0;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        $r5 = new org.apache.log4j.TTCCLayout;

        specialinvoke $r5.<org.apache.log4j.TTCCLayout: void <init>(java.lang.String)>("DATE");

        $r6 = new org.apache.log4j.FileAppender;

        specialinvoke $r6.<org.apache.log4j.FileAppender: void <init>(org.apache.log4j.Layout,java.lang.String,boolean)>($r5, "output/ttcc", 0);

        $r7 = r0.<org.apache.log4j.MinimumTestCase: org.apache.log4j.Logger root>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void addAppender(org.apache.log4j.Appender)>($r6);

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r3 = virtualinvoke $r8.<java.lang.Thread: java.lang.String getName()>();

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void setName(java.lang.String)>("main");

        virtualinvoke r0.<org.apache.log4j.MinimumTestCase: void common()>();

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r10.<java.lang.Thread: void setName(java.lang.String)>(r3);

        $r11 = new org.apache.log4j.util.ControlFilter;

        $r12 = newarray (java.lang.String)[7];

        $r13 = <org.apache.log4j.MinimumTestCase: java.lang.String TTCC_PAT>;

        $r12[0] = $r13;

        $r14 = <org.apache.log4j.MinimumTestCase: java.lang.String TTCC2_PAT>;

        $r12[1] = $r14;

        $r15 = <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION1>;

        $r12[2] = $r15;

        $r16 = <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION2>;

        $r12[3] = $r16;

        $r17 = <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION3>;

        $r12[4] = $r17;

        $r18 = <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION4>;

        $r12[5] = $r18;

        $r19 = <org.apache.log4j.MinimumTestCase: java.lang.String EXCEPTION5>;

        $r12[6] = $r19;

        specialinvoke $r11.<org.apache.log4j.util.ControlFilter: void <init>(java.lang.String[])>($r12);

        $r22 = <org.apache.log4j.MinimumTestCase: java.lang.String FILTERED>;

        $r20 = newarray (org.apache.log4j.util.Filter)[5];

        $r20[0] = $r11;

        $r21 = new org.apache.log4j.util.LineNumberFilter;

        specialinvoke $r21.<org.apache.log4j.util.LineNumberFilter: void <init>()>();

        $r20[1] = $r21;

        $r23 = new org.apache.log4j.util.AbsoluteDateAndTimeFilter;

        specialinvoke $r23.<org.apache.log4j.util.AbsoluteDateAndTimeFilter: void <init>()>();

        $r20[2] = $r23;

        $r24 = new org.apache.log4j.util.SunReflectFilter;

        specialinvoke $r24.<org.apache.log4j.util.SunReflectFilter: void <init>()>();

        $r20[3] = $r24;

        $r25 = new org.apache.log4j.util.JunitTestRunnerFilter;

        specialinvoke $r25.<org.apache.log4j.util.JunitTestRunnerFilter: void <init>()>();

        $r20[4] = $r25;

        staticinvoke <org.apache.log4j.util.Transformer: void transform(java.lang.String,java.lang.String,org.apache.log4j.util.Filter[])>("output/ttcc", $r22, $r20);

        $r26 = <org.apache.log4j.MinimumTestCase: java.lang.String FILTERED>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r26, "witness/ttcc");

        staticinvoke <org.apache.log4j.MinimumTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    void common()
    {
        org.apache.log4j.MinimumTestCase r0;
        org.apache.log4j.Logger r1, r2, r3, r4, r5, r6, r7, r8;
        org.apache.log4j.Level $r9, $r10, $r11, $r12, $r13, $r15, $r22, $r35, $r48, $r55, $r62, $r78, $r97;
        java.lang.StringBuilder $r14, $r16, $r18, $r19, $r21, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r49, $r51, $r52, $r54, $r56, $r58, $r59, $r61, $r63, $r65, $r66, $r68, $r69, $r71, $r72, $r74, $r75, $r77, $r79, $r81, $r82, $r84, $r85, $r87, $r88, $r90, $r91, $r93, $r94, $r96, $r98, $r100, $r101, $r103, $r104, $r106, $r107, $r109, $r110, $r113, $r114, $r116, $r117, $r119, $r120, $r122, $r123, $r125, $r126, $r128, $r129, $r131, $r132, $r134, $r135, $r137, $r138, $r140, $r141, $r143, $r144, $r146, $r147, $r150, $r151, $r152;
        java.lang.String $r17, $r20, $r24, $r27, $r30, $r33, $r37, $r40, $r43, $r46, $r50, $r53, $r57, $r60, $r64, $r67, $r70, $r73, $r76, $r80, $r83, $r86, $r89, $r92, $r95, $r99, $r102, $r105, $r108, $r111, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r148, $r153;
        java.lang.Exception $r112, $r149;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42;

        r0 := @this: org.apache.log4j.MinimumTestCase;

        r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("ERR");

        $r9 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke r1.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r9);

        r2 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("INF");

        $r10 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        virtualinvoke r2.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r10);

        r3 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("INF.ERR");

        $r11 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke r3.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r11);

        r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("DEB");

        $r12 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        virtualinvoke r4.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r12);

        r5 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("TRC");

        $r13 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        virtualinvoke r5.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r13);

        r6 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("INF.UNDEF");

        r7 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("INF.ERR.UNDEF");

        r8 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>("UNDEF");

        $r15 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r15, $r17);

        i2 = 0 + 1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.log4j.Logger: void error(java.lang.Object)>($r20);

        i3 = i2 + 1;

        $r22 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r22, $r24);

        i4 = i3 + 1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void error(java.lang.Object)>($r27);

        i5 = i4 + 1;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r30);

        i6 = i5 + 1;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void info(java.lang.Object)>($r33);

        i7 = i6 + 1;

        $r35 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r35, $r37);

        i8 = i7 + 1;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.log4j.Logger: void error(java.lang.Object)>($r40);

        i9 = i8 + 1;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r43);

        i10 = i9 + 1;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.log4j.Logger: void info(java.lang.Object)>($r46);

        i11 = i10 + 1;

        $r48 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r48, $r50);

        i12 = i11 + 1;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.log4j.Logger: void error(java.lang.Object)>($r53);

        i13 = i12 + 1;

        $r55 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r55, $r57);

        i14 = i13 + 1;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.log4j.Logger: void error(java.lang.Object)>($r60);

        i15 = i14 + 1;

        $r62 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r62, $r64);

        i16 = i15 + 1;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r67);

        i17 = i16 + 1;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r70);

        i18 = i17 + 1;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.log4j.Logger: void info(java.lang.Object)>($r73);

        i19 = i18 + 1;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r76);

        i20 = i19 + 1;

        $r78 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r78, $r80);

        i21 = i20 + 1;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void error(java.lang.Object)>($r83);

        i22 = i21 + 1;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r86);

        i23 = i22 + 1;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r89);

        i24 = i23 + 1;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r92);

        i25 = i24 + 1;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.log4j.Logger: void trace(java.lang.Object)>($r95);

        i26 = i25 + 1;

        $r97 = <org.apache.log4j.Level: org.apache.log4j.Level FATAL>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r97, $r99);

        i27 = i26 + 1;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.log4j.Logger: void error(java.lang.Object)>($r102);

        i28 = i27 + 1;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r105);

        i29 = i28 + 1;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.log4j.Logger: void info(java.lang.Object)>($r108);

        i30 = i29 + 1;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        $r112 = new java.lang.Exception;

        specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>("Just testing.");

        virtualinvoke r8.<org.apache.log4j.Logger: void debug(java.lang.Object,java.lang.Throwable)>($r111, $r112);

        i31 = i30 + 1;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r115);

        i32 = i31 + 1;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.log4j.Logger: void info(java.lang.Object)>($r118);

        i33 = i32 + 1;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r121);

        i34 = i33 + 1;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i34);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r124);

        i35 = i34 + 1;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r127);

        i36 = i35 + 1;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r130);

        i37 = i36 + 1;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i37);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.log4j.Logger: void info(java.lang.Object)>($r133);

        i38 = i37 + 1;

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i38);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r136);

        i39 = i38 + 1;

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i39);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r139);

        i40 = i39 + 1;

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.log4j.Logger: void info(java.lang.Object)>($r142);

        i41 = i40 + 1;

        $r143 = new java.lang.StringBuilder;

        specialinvoke $r143.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r145);

        i42 = i41 + 1;

        $r146 = new java.lang.StringBuilder;

        specialinvoke $r146.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i42);

        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        $r149 = new java.lang.Exception;

        specialinvoke $r149.<java.lang.Exception: void <init>(java.lang.String)>("Just testing.");

        virtualinvoke r8.<org.apache.log4j.Logger: void trace(java.lang.Object,java.lang.Throwable)>($r148, $r149);

        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>(java.lang.String)>("Messages should bear numbers 0 through ");

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.log4j.Logger: void info(java.lang.Object)>($r153);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r1;
        org.apache.log4j.MinimumTestCase $r2, $r3;

        $r1 = new junit.framework.TestSuite;

        specialinvoke $r1.<junit.framework.TestSuite: void <init>()>();

        $r2 = new org.apache.log4j.MinimumTestCase;

        specialinvoke $r2.<org.apache.log4j.MinimumTestCase: void <init>(java.lang.String)>("simple");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r2);

        $r3 = new org.apache.log4j.MinimumTestCase;

        specialinvoke $r3.<org.apache.log4j.MinimumTestCase: void <init>(java.lang.String)>("ttcc");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r3);

        return $r1;
    }
}
