public class org.apache.log4j.util.Compare extends java.lang.Object
{
    static final int B1_NULL;
    static final int B2_NULL;

    public void <init>()
    {
        org.apache.log4j.util.Compare r0;

        r0 := @this: org.apache.log4j.util.Compare;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean compare(java.lang.String, java.lang.String) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.lang.String r0, r1, r5, $r10, $r18, $r23, $r28, $r35;
        java.io.BufferedReader $r6, $r8;
        java.io.FileReader $r7, $r9;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r32, $r33, $r34;
        java.io.PrintStream $r12, $r20, $r25, $r30;
        int $i0, i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.FileReader;

        specialinvoke $r7.<java.io.FileReader: void <init>(java.lang.String)>(r0);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.FileReader;

        specialinvoke $r9.<java.io.FileReader: void <init>(java.lang.String)>(r1);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        i1 = 0;

        goto label2;

     label1:
        i1 = i1 + 1;

        r5 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Files [");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] differ on line ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("One reads:  [");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Other reads:[");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

        return 0;

     label2:
        $r10 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r10 != null goto label1;

        $i0 = virtualinvoke $r8.<java.io.BufferedReader: int read()>();

        if $i0 == -1 goto label3;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("File [");

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] longer than file [");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return 0;

     label3:
        return 1;
    }

    private static final java.io.InputStream open(java.lang.Class, java.lang.String) throws java.io.IOException
    {
        java.lang.Class r0;
        java.lang.String r1, $r8, r10;
        boolean $z0, $z1;
        java.io.File $r3;
        java.io.FileNotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.io.FileInputStream $r9;
        int $i0, $i1;
        java.io.InputStream r11;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r10 = r1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("witness/");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        $i1 = $i0 + 1;

        r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        r11 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r10);

        if r11 != null goto label3;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        r11 = $r9;

        goto label3;

     label2:
        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Resource ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        return r11;
    }

    public static boolean compare(java.lang.Class, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Class r0;
        java.lang.String r1, r2;
        boolean z0;
        java.io.BufferedReader $r6, $r8;
        java.io.FileReader $r7;
        java.io.InputStreamReader $r9;
        java.io.InputStream $r10;
        java.lang.Throwable $r11;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.FileReader;

        specialinvoke $r7.<java.io.FileReader: void <init>(java.lang.String)>(r1);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        $r10 = staticinvoke <org.apache.log4j.util.Compare: java.io.InputStream open(java.lang.Class,java.lang.String)>(r0, r2);

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label1:
        z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.Class,java.lang.String,java.lang.String,java.io.BufferedReader,java.io.BufferedReader)>(r0, r1, r2, $r6, $r8);

     label2:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        return z0;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean compare(java.lang.Class, java.lang.String, java.lang.String, java.io.BufferedReader, java.io.BufferedReader) throws java.io.IOException
    {
        java.lang.Class r0;
        java.lang.String r1, r2, r6, $r7, $r15, $r20, $r25, $r32;
        java.io.BufferedReader r3, r4;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r28, $r29, $r30, $r31;
        java.io.PrintStream $r9, $r17, $r22, $r27;
        int $i0, i1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.io.BufferedReader;

        r4 := @parameter4: java.io.BufferedReader;

        i1 = 0;

        goto label2;

     label1:
        i1 = i1 + 1;

        r6 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label2;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Files [");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and [");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] differ on line ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("One reads:  [");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Other reads:[");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

        staticinvoke <org.apache.log4j.util.Compare: void outputFile(java.lang.Class,java.lang.String)>(r0, r1);

        staticinvoke <org.apache.log4j.util.Compare: void outputFile(java.lang.Class,java.lang.String)>(r0, r2);

        return 0;

     label2:
        $r7 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r7 != null goto label1;

        $i0 = virtualinvoke r4.<java.io.BufferedReader: int read()>();

        if $i0 == -1 goto label3;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("File [");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] longer than file [");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32);

        staticinvoke <org.apache.log4j.util.Compare: void outputFile(java.lang.Class,java.lang.String)>(r0, r1);

        staticinvoke <org.apache.log4j.util.Compare: void outputFile(java.lang.Class,java.lang.String)>(r0, r2);

        return 0;

     label3:
        return 1;
    }

    private static void outputFile(java.lang.Class, java.lang.String) throws java.io.IOException
    {
        java.lang.Class r0;
        java.lang.String r1, $r12, $r19;
        java.io.InputStream r2;
        java.io.BufferedReader $r5;
        java.io.InputStreamReader $r6;
        java.io.PrintStream $r7, $r9, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.StringBuilder $r8, $r10, $r11;
        int i0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <org.apache.log4j.util.Compare: java.io.InputStream open(java.lang.Class,java.lang.String)>(r0, r1);

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        i0 = 0;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("--------------------------------");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Contents of ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        goto label6;

     label1:
        i0 = i0 + 1;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void print(int)>(i0);

        if i0 >= 10 goto label2;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void print(java.lang.String)>("   : ");

        goto label5;

     label2:
        if i0 >= 100 goto label3;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>("  : ");

        goto label5;

     label3:
        if i0 >= 1000 goto label4;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>(" : ");

        goto label5;

     label4:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>(": ");

     label5:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label6:
        $r19 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r19 != null goto label1;

        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.util.Compare: int B2_NULL> = -2;

        <org.apache.log4j.util.Compare: int B1_NULL> = -1;

        return;
    }
}
