class org.apache.log4j.net.SocketHubAppender$ServerMonitor extends java.lang.Object implements java.lang.Runnable
{
    private int port;
    private java.util.Vector oosList;
    private boolean keepRunning;
    private java.lang.Thread monitorThread;
    final org.apache.log4j.net.SocketHubAppender this$0;

    public void <init>(org.apache.log4j.net.SocketHubAppender, int, java.util.Vector)
    {
        org.apache.log4j.net.SocketHubAppender$ServerMonitor r0;
        org.apache.log4j.net.SocketHubAppender r1;
        int i0, $i1;
        java.util.Vector r2;
        java.lang.Thread $r3, $r4, $r6, $r9;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.log4j.net.SocketHubAppender$ServerMonitor;

        r1 := @parameter0: org.apache.log4j.net.SocketHubAppender;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Vector;

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: int port> = i0;

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.util.Vector oosList> = r2;

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning> = 1;

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread> = $r3;

        $r4 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread>;

        virtualinvoke $r4.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r6 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("SocketHubAppender-Monitor-");

        $i1 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: int port>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.Thread: void setName(java.lang.String)>($r8);

        $r9 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread>;

        virtualinvoke $r9.<java.lang.Thread: void start()>();

        return;
    }

    public synchronized void stopMonitor()
    {
        org.apache.log4j.net.SocketHubAppender$ServerMonitor r0;
        boolean $z0;
        org.apache.log4j.net.SocketHubAppender $r1, $r3, $r5;
        java.net.ServerSocket $r2, $r4;
        java.lang.InterruptedException $r6;
        java.lang.Thread $r7, $r10;
        java.io.IOException $r8;

        r0 := @this: org.apache.log4j.net.SocketHubAppender$ServerMonitor;

        $z0 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning>;

        if $z0 == 0 goto label8;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("server monitor thread shutting down");

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning> = 0;

     label1:
        $r1 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r2 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r1);

        if $r2 == null goto label4;

        $r3 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r4 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r3);

        virtualinvoke $r4.<java.net.ServerSocket: void close()>();

        $r5 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        staticinvoke <org.apache.log4j.net.SocketHubAppender: void access$1(org.apache.log4j.net.SocketHubAppender,java.net.ServerSocket)>($r5, null);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r10 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread>;

        virtualinvoke $r10.<java.lang.Thread: void join()>();

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

     label7:
        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.lang.Thread monitorThread> = null;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("server monitor thread shut down");

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    private void sendCachedEvents(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.log4j.net.SocketHubAppender$ServerMonitor r0;
        java.io.ObjectOutputStream r1;
        org.apache.log4j.net.SocketHubAppender $r2, $r4, $r6;
        org.apache.log4j.helpers.CyclicBuffer $r3, $r5, $r7;
        int $i0, i1;
        org.apache.log4j.spi.LoggingEvent $r8;

        r0 := @this: org.apache.log4j.net.SocketHubAppender$ServerMonitor;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r3 = staticinvoke <org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$2(org.apache.log4j.net.SocketHubAppender)>($r2);

        if $r3 == null goto label3;

        i1 = 0;

        goto label2;

     label1:
        $r6 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r7 = staticinvoke <org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$2(org.apache.log4j.net.SocketHubAppender)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.log4j.helpers.CyclicBuffer: org.apache.log4j.spi.LoggingEvent get(int)>(i1);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);

        i1 = i1 + 1;

     label2:
        $r4 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r5 = staticinvoke <org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$2(org.apache.log4j.net.SocketHubAppender)>($r4);

        $i0 = virtualinvoke $r5.<org.apache.log4j.helpers.CyclicBuffer: int length()>();

        if i1 < $i0 goto label1;

        virtualinvoke r1.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void reset()>();

     label3:
        return;
    }

    public void run()
    {
        org.apache.log4j.net.SocketHubAppender$ServerMonitor r0;
        org.apache.log4j.net.SocketHubAppender $r3, $r4, $r5, $r7, $r9, $r11, $r23, $r25, $r27, $r43, $r47;
        int $i0, $i1;
        java.net.ServerSocket $r6, $r8, $r10, $r12, $r28, $r44, $r48;
        java.lang.StringBuilder $r13, $r15, $r16, $r18, $r19;
        java.lang.String $r14, $r17, $r20;
        java.io.ObjectOutputStream $r21;
        java.io.OutputStream $r22;
        org.apache.log4j.helpers.CyclicBuffer $r24, $r26;
        java.io.IOException $r29, $r30, $r36, $r41, $r49;
        java.io.InterruptedIOException $r31, $r33, $r34, $r37;
        java.lang.Thread $r32, $r35, $r38, $r40, $r50;
        java.lang.Exception $r39;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r42;
        java.net.SocketException $r45, $r46;
        java.net.Socket r55;
        java.net.InetAddress r59;
        java.util.Vector $r60;

        r0 := @this: org.apache.log4j.net.SocketHubAppender$ServerMonitor;

        $r3 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        staticinvoke <org.apache.log4j.net.SocketHubAppender: void access$1(org.apache.log4j.net.SocketHubAppender,java.net.ServerSocket)>($r3, null);

     label01:
        $r5 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r4 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $i0 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: int port>;

        $r6 = virtualinvoke $r4.<org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket createServerSocket(int)>($i0);

        staticinvoke <org.apache.log4j.net.SocketHubAppender: void access$1(org.apache.log4j.net.SocketHubAppender,java.net.ServerSocket)>($r5, $r6);

        $r7 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r8 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r7);

        virtualinvoke $r8.<java.net.ServerSocket: void setSoTimeout(int)>(1000);

     label02:
        goto label06;

     label03:
        $r39 := @caughtexception;

        $z0 = $r39 instanceof java.io.InterruptedIOException;

        if $z0 != 0 goto label04;

        $z1 = $r39 instanceof java.lang.InterruptedException;

        if $z1 == 0 goto label05;

     label04:
        $r40 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r40.<java.lang.Thread: void interrupt()>();

     label05:
        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("exception setting timeout, shutting down server socket.", $r39);

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning> = 0;

        return;

     label06:
        $r9 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r10 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r9);

        virtualinvoke $r10.<java.net.ServerSocket: void setSoTimeout(int)>(1000);

     label07:
        goto label26;

     label08:
        $r46 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("exception setting timeout, shutting down server socket.", $r46);

     label09:
        $r47 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r48 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r47);

        virtualinvoke $r48.<java.net.ServerSocket: void close()>();

     label10:
        goto label13;

     label11:
        $r34 := @caughtexception;

        $r35 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r35.<java.lang.Thread: void interrupt()>();

        goto label13;

     label12:
        $r30 := @caughtexception;

     label13:
        return;

     label14:
        r55 = null;

     label15:
        $r11 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r12 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r11);

        r55 = virtualinvoke $r12.<java.net.ServerSocket: java.net.Socket accept()>();

     label16:
        goto label20;

     label17:
        $r33 := @caughtexception;

        goto label20;

     label18:
        $r45 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("exception accepting socket, shutting down server socket.", $r45);

        r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning> = 0;

        goto label20;

     label19:
        $r29 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("exception accepting socket.", $r29);

     label20:
        if r55 == null goto label26;

     label21:
        r59 = virtualinvoke r55.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("accepting connection from ");

        $r14 = virtualinvoke r59.<java.net.InetAddress: java.lang.String getHostName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = virtualinvoke r59.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r20);

        $r21 = new java.io.ObjectOutputStream;

        $r22 = virtualinvoke r55.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r21.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r22);

        $r23 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r24 = staticinvoke <org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$2(org.apache.log4j.net.SocketHubAppender)>($r23);

        if $r24 == null goto label22;

        $r25 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r26 = staticinvoke <org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$2(org.apache.log4j.net.SocketHubAppender)>($r25);

        $i1 = virtualinvoke $r26.<org.apache.log4j.helpers.CyclicBuffer: int length()>();

        if $i1 <= 0 goto label22;

        specialinvoke r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: void sendCachedEvents(java.io.ObjectOutputStream)>($r21);

     label22:
        $r60 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: java.util.Vector oosList>;

        virtualinvoke $r60.<java.util.Vector: void addElement(java.lang.Object)>($r21);

     label23:
        goto label26;

     label24:
        $r49 := @caughtexception;

        $z2 = $r49 instanceof java.io.InterruptedIOException;

        if $z2 == 0 goto label25;

        $r50 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r50.<java.lang.Thread: void interrupt()>();

     label25:
        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("exception creating output stream on socket.", $r49);

     label26:
        $z3 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: boolean keepRunning>;

        if $z3 != 0 goto label14;

        goto label33;

     label27:
        $r42 := @caughtexception;

     label28:
        $r43 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r44 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r43);

        virtualinvoke $r44.<java.net.ServerSocket: void close()>();

     label29:
        goto label32;

     label30:
        $r31 := @caughtexception;

        $r32 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r32.<java.lang.Thread: void interrupt()>();

        goto label32;

     label31:
        $r41 := @caughtexception;

     label32:
        throw $r42;

     label33:
        $r27 = r0.<org.apache.log4j.net.SocketHubAppender$ServerMonitor: org.apache.log4j.net.SocketHubAppender this$0>;

        $r28 = staticinvoke <org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$0(org.apache.log4j.net.SocketHubAppender)>($r27);

        virtualinvoke $r28.<java.net.ServerSocket: void close()>();

     label34:
        goto label37;

     label35:
        $r37 := @caughtexception;

        $r38 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r38.<java.lang.Thread: void interrupt()>();

        goto label37;

     label36:
        $r36 := @caughtexception;

     label37:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.net.SocketException from label06 to label07 with label08;
        catch java.io.InterruptedIOException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.io.InterruptedIOException from label15 to label16 with label17;
        catch java.net.SocketException from label15 to label16 with label18;
        catch java.io.IOException from label15 to label16 with label19;
        catch java.io.IOException from label21 to label23 with label24;
        catch java.lang.Throwable from label06 to label09 with label27;
        catch java.lang.Throwable from label14 to label27 with label27;
        catch java.io.InterruptedIOException from label28 to label29 with label30;
        catch java.io.IOException from label28 to label29 with label31;
        catch java.io.InterruptedIOException from label33 to label34 with label35;
        catch java.io.IOException from label33 to label34 with label36;
    }
}
