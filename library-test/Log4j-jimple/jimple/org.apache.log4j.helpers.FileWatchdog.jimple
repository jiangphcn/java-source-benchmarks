public abstract class org.apache.log4j.helpers.FileWatchdog extends java.lang.Thread
{
    public static final long DEFAULT_DELAY;
    protected java.lang.String filename;
    protected long delay;
    java.io.File file;
    long lastModif;
    boolean warnedAlready;
    boolean interrupted;

    protected void <init>(java.lang.String)
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("FileWatchdog");

        r0.<org.apache.log4j.helpers.FileWatchdog: long delay> = 60000L;

        r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif> = 0L;

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 0;

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted> = 0;

        r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename> = r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file> = $r2;

        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void setDaemon(boolean)>(1);

        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void checkAndConfigure()>();

        return;
    }

    public void setDelay(long)
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        long l0;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

        l0 := @parameter0: long;

        r0.<org.apache.log4j.helpers.FileWatchdog: long delay> = l0;

        return;
    }

    protected abstract void doOnChange();

    protected void checkAndConfigure()
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        boolean z0, $z1;
        java.io.File $r1, $r7;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r11, $r12;
        java.lang.String $r3, $r6, $r10, $r13;
        long $l0, l2;
        byte $b1;
        java.lang.SecurityException $r8;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

     label1:
        $r1 = r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file>;

        z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Was not allowed to read check file existance, file:[");

        $r10 = r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r13);

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted> = 1;

        return;

     label4:
        if z0 == 0 goto label5;

        $r7 = r0.<org.apache.log4j.helpers.FileWatchdog: java.io.File file>;

        l2 = virtualinvoke $r7.<java.io.File: long lastModified()>();

        $l0 = r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif>;

        $b1 = l2 cmp $l0;

        if $b1 <= 0 goto label6;

        r0.<org.apache.log4j.helpers.FileWatchdog: long lastModif> = l2;

        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void doOnChange()>();

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 0;

        goto label6;

     label5:
        $z1 = r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready>;

        if $z1 != 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        $r3 = r0.<org.apache.log4j.helpers.FileWatchdog: java.lang.String filename>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not exist.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        r0.<org.apache.log4j.helpers.FileWatchdog: boolean warnedAlready> = 1;

     label6:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void run()
    {
        org.apache.log4j.helpers.FileWatchdog r0;
        long $l0;
        java.lang.InterruptedException $r2;
        boolean $z0;

        r0 := @this: org.apache.log4j.helpers.FileWatchdog;

        goto label5;

     label1:
        $l0 = r0.<org.apache.log4j.helpers.FileWatchdog: long delay>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.log4j.helpers.FileWatchdog: void checkAndConfigure()>();

     label5:
        $z0 = r0.<org.apache.log4j.helpers.FileWatchdog: boolean interrupted>;

        if $z0 == 0 goto label1;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.helpers.FileWatchdog: long DEFAULT_DELAY> = 60000L;

        return;
    }
}
