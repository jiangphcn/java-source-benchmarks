public class org.apache.log4j.net.TelnetAppender$SocketHandler extends java.lang.Thread
{
    private java.util.Vector writers;
    private java.util.Vector connections;
    private java.net.ServerSocket serverSocket;
    private int MAX_CONNECTIONS;
    final org.apache.log4j.net.TelnetAppender this$0;

    public void finalize()
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler r0;

        r0 := @this: org.apache.log4j.net.TelnetAppender$SocketHandler;

        virtualinvoke r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: void close()>();

        return;
    }

    public void close()
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler r0;
        java.util.Enumeration r1;
        java.util.Vector $r3;
        java.lang.Object $r4;
        java.net.Socket $r5;
        java.net.ServerSocket $r6;
        java.io.IOException $r7, $r9;
        java.lang.RuntimeException $r8, $r11;
        java.lang.Throwable $r10;
        java.io.InterruptedIOException $r12, $r14;
        java.lang.Thread $r13, $r15;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.TelnetAppender$SocketHandler;

        entermonitor r0;

     label01:
        $r3 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections>;

        r1 = virtualinvoke $r3.<java.util.Vector: java.util.Enumeration elements()>();

        goto label07;

     label02:
        $r4 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.net.Socket) $r4;

        virtualinvoke $r5.<java.net.Socket: void close()>();

     label03:
        goto label07;

     label04:
        $r12 := @caughtexception;

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r13.<java.lang.Thread: void interrupt()>();

        goto label07;

     label05:
        $r9 := @caughtexception;

        goto label07;

     label06:
        $r11 := @caughtexception;

     label07:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label02;

        exitmonitor r0;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r10;

     label11:
        $r6 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket>;

        virtualinvoke $r6.<java.net.ServerSocket: void close()>();

     label12:
        goto label16;

     label13:
        $r14 := @caughtexception;

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r15.<java.lang.Thread: void interrupt()>();

        goto label16;

     label14:
        $r7 := @caughtexception;

        goto label16;

     label15:
        $r8 := @caughtexception;

     label16:
        return;

        catch java.io.InterruptedIOException from label02 to label03 with label04;
        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.RuntimeException from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.io.InterruptedIOException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.lang.RuntimeException from label11 to label12 with label15;
    }

    public synchronized void send(java.lang.String)
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler r0;
        java.lang.String r1;
        java.util.Iterator r2, r3;
        java.io.PrintWriter r4;
        java.util.Vector $r5, $r6;
        java.lang.Object $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.net.TelnetAppender$SocketHandler;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections>;

        r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>();

        $r6 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector writers>;

        r3 = virtualinvoke $r6.<java.util.Vector: java.util.Iterator iterator()>();

        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.io.PrintWriter) $r8;

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $z0 = virtualinvoke r4.<java.io.PrintWriter: boolean checkError()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    public void run()
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler r0;
        java.net.ServerSocket $r3, $r25, $r26, $r27;
        java.io.PrintWriter $r4;
        java.io.OutputStream $r5;
        java.util.Vector $r6, $r8, $r9, $r11;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        java.lang.Throwable $r17;
        java.io.InterruptedIOException $r18;
        java.lang.Thread $r19, $r21;
        java.lang.Exception $r20;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r22;
        java.net.Socket r23;

        r0 := @this: org.apache.log4j.net.TelnetAppender$SocketHandler;

        goto label11;

     label01:
        $r3 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket>;

        r23 = virtualinvoke $r3.<java.net.ServerSocket: java.net.Socket accept()>();

        $r4 = new java.io.PrintWriter;

        $r5 = virtualinvoke r23.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r5);

        $r6 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections>;

        $i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        $i1 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: int MAX_CONNECTIONS>;

        if $i0 >= $i1 goto label06;

        entermonitor r0;

     label02:
        $r8 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections>;

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>(r23);

        $r9 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector writers>;

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("TelnetAppender v1.0 (");

        $r11 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections>;

        $i2 = virtualinvoke $r11.<java.util.Vector: int size()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" active connections)");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label03:
        goto label11;

     label04:
        $r17 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r17;

     label06:
        virtualinvoke $r4.<java.io.PrintWriter: void print(java.lang.String)>("Too many connections.\r\n");

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        virtualinvoke r23.<java.net.Socket: void close()>();

     label07:
        goto label11;

     label08:
        $r20 := @caughtexception;

        $z0 = $r20 instanceof java.io.InterruptedIOException;

        if $z0 != 0 goto label09;

        $z1 = $r20 instanceof java.lang.InterruptedException;

        if $z1 == 0 goto label10;

     label09:
        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r21.<java.lang.Thread: void interrupt()>();

     label10:
        $r25 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket>;

        $z2 = virtualinvoke $r25.<java.net.ServerSocket: boolean isClosed()>();

        if $z2 != 0 goto label12;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Encountered error while in SocketHandler loop.", $r20);

        goto label12;

     label11:
        $r26 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket>;

        $z3 = virtualinvoke $r26.<java.net.ServerSocket: boolean isClosed()>();

        if $z3 == 0 goto label01;

     label12:
        $r27 = r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket>;

        virtualinvoke $r27.<java.net.ServerSocket: void close()>();

     label13:
        goto label16;

     label14:
        $r18 := @caughtexception;

        $r19 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r19.<java.lang.Thread: void interrupt()>();

        goto label16;

     label15:
        $r22 := @caughtexception;

     label16:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Exception from label01 to label07 with label08;
        catch java.io.InterruptedIOException from label12 to label13 with label14;
        catch java.io.IOException from label12 to label13 with label15;
    }

    public void <init>(org.apache.log4j.net.TelnetAppender, int) throws java.io.IOException
    {
        org.apache.log4j.net.TelnetAppender$SocketHandler r0;
        org.apache.log4j.net.TelnetAppender r1;
        int i0;
        java.util.Vector $r2, $r3;
        java.net.ServerSocket $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        r0 := @this: org.apache.log4j.net.TelnetAppender$SocketHandler;

        r1 := @parameter0: org.apache.log4j.net.TelnetAppender;

        i0 := @parameter1: int;

        r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: org.apache.log4j.net.TelnetAppender this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector writers> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.util.Vector connections> = $r3;

        r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: int MAX_CONNECTIONS> = 20;

        $r4 = new java.net.ServerSocket;

        specialinvoke $r4.<java.net.ServerSocket: void <init>(int)>(i0);

        r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.net.ServerSocket serverSocket> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("TelnetAppender-");

        $r6 = virtualinvoke r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.log4j.net.TelnetAppender$SocketHandler: void setName(java.lang.String)>($r10);

        return;
    }
}
