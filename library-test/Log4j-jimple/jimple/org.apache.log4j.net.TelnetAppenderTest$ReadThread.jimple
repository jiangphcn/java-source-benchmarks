public class org.apache.log4j.net.TelnetAppenderTest$ReadThread extends java.lang.Thread
{
    final org.apache.log4j.net.TelnetAppenderTest this$0;

    public void <init>(org.apache.log4j.net.TelnetAppenderTest)
    {
        org.apache.log4j.net.TelnetAppenderTest$ReadThread r0;
        org.apache.log4j.net.TelnetAppenderTest r1;

        r0 := @this: org.apache.log4j.net.TelnetAppenderTest$ReadThread;

        r1 := @parameter0: org.apache.log4j.net.TelnetAppenderTest;

        r0.<org.apache.log4j.net.TelnetAppenderTest$ReadThread: org.apache.log4j.net.TelnetAppenderTest this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.log4j.net.TelnetAppenderTest$ReadThread r0;
        java.io.InputStream r1;
        int i0, $i1;
        java.net.Socket $r2;
        org.apache.log4j.net.TelnetAppenderTest $r3, $r4;
        boolean $z0;
        java.io.ByteArrayOutputStream $r5;
        java.io.IOException $r6;

        r0 := @this: org.apache.log4j.net.TelnetAppenderTest$ReadThread;

     label1:
        $r2 = new java.net.Socket;

        $r3 = r0.<org.apache.log4j.net.TelnetAppenderTest$ReadThread: org.apache.log4j.net.TelnetAppenderTest this$0>;

        $i1 = $r3.<org.apache.log4j.net.TelnetAppenderTest: int port>;

        specialinvoke $r2.<java.net.Socket: void <init>(java.lang.String,int)>("localhost", $i1);

        r1 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        goto label4;

     label2:
        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if i0 != -1 goto label3;

        goto label5;

     label3:
        $r4 = r0.<org.apache.log4j.net.TelnetAppenderTest$ReadThread: org.apache.log4j.net.TelnetAppenderTest this$0>;

        $r5 = $r4.<org.apache.log4j.net.TelnetAppenderTest: java.io.ByteArrayOutputStream bo>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(int)>(i0);

     label4:
        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label2;

     label5:
        virtualinvoke $r2.<java.net.Socket: void close()>();

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label8:
        return;

        catch java.io.IOException from label1 to label6 with label7;
    }
}
