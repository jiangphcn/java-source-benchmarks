public class org.apache.log4j.rewrite.RewriteAppender extends org.apache.log4j.AppenderSkeleton implements org.apache.log4j.spi.AppenderAttachable, org.apache.log4j.xml.UnrecognizedElementHandler
{
    private org.apache.log4j.rewrite.RewritePolicy policy;
    private final org.apache.log4j.helpers.AppenderAttachableImpl appenders;

    public void <init>()
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.helpers.AppenderAttachableImpl $r1;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        $r1 = new org.apache.log4j.helpers.AppenderAttachableImpl;

        specialinvoke $r1.<org.apache.log4j.helpers.AppenderAttachableImpl: void <init>()>();

        r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders> = $r1;

        return;
    }

    protected void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.spi.LoggingEvent r1, r8;
        org.apache.log4j.rewrite.RewritePolicy $r3, $r6;
        org.apache.log4j.helpers.AppenderAttachableImpl $r4, $r5;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r8 = r1;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.rewrite.RewritePolicy policy>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.rewrite.RewritePolicy policy>;

        r8 = interfaceinvoke $r6.<org.apache.log4j.rewrite.RewritePolicy: org.apache.log4j.spi.LoggingEvent rewrite(org.apache.log4j.spi.LoggingEvent)>(r1);

     label1:
        if r8 == null goto label6;

        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r4;

     label2:
        $r5 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        virtualinvoke $r5.<org.apache.log4j.helpers.AppenderAttachableImpl: int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)>(r8);

        exitmonitor $r4;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void addAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.Appender r1;
        org.apache.log4j.helpers.AppenderAttachableImpl $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.apache.log4j.Appender;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        virtualinvoke $r4.<org.apache.log4j.helpers.AppenderAttachableImpl: void addAppender(org.apache.log4j.Appender)>(r1);

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Enumeration getAllAppenders()
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.helpers.AppenderAttachableImpl $r2, $r3;
        java.util.Enumeration $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        $r2 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        $r4 = virtualinvoke $r3.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Enumeration getAllAppenders()>();

        exitmonitor $r2;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.log4j.Appender getAppender(java.lang.String)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        java.lang.String r1;
        org.apache.log4j.helpers.AppenderAttachableImpl $r3, $r4;
        org.apache.log4j.Appender $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        $r5 = virtualinvoke $r4.<org.apache.log4j.helpers.AppenderAttachableImpl: org.apache.log4j.Appender getAppender(java.lang.String)>(r1);

        exitmonitor $r3;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        java.util.Enumeration r2;
        java.lang.Object r3;
        org.apache.log4j.helpers.AppenderAttachableImpl $r4, $r5;
        boolean $z0, $z1;
        org.apache.log4j.Appender $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r0.<org.apache.log4j.rewrite.RewriteAppender: boolean closed> = 1;

        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        r2 = virtualinvoke $r5.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Enumeration getAllAppenders()>();

        if r2 == null goto label4;

        goto label3;

     label2:
        r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $z0 = r3 instanceof org.apache.log4j.Appender;

        if $z0 == 0 goto label3;

        $r6 = (org.apache.log4j.Appender) r3;

        interfaceinvoke $r6.<org.apache.log4j.Appender: void close()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label2;

     label4:
        exitmonitor $r4;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label7:
        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isAttached(org.apache.log4j.Appender)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.Appender r1;
        org.apache.log4j.helpers.AppenderAttachableImpl $r3, $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.apache.log4j.Appender;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        $z0 = virtualinvoke $r4.<org.apache.log4j.helpers.AppenderAttachableImpl: boolean isAttached(org.apache.log4j.Appender)>(r1);

        exitmonitor $r3;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.rewrite.RewriteAppender r0;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        return 0;
    }

    public void removeAllAppenders()
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.helpers.AppenderAttachableImpl $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        $r2 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        virtualinvoke $r3.<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAllAppenders()>();

        exitmonitor $r2;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.Appender r1;
        org.apache.log4j.helpers.AppenderAttachableImpl $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.apache.log4j.Appender;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        virtualinvoke $r4.<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAppender(org.apache.log4j.Appender)>(r1);

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAppender(java.lang.String)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        java.lang.String r1;
        org.apache.log4j.helpers.AppenderAttachableImpl $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.helpers.AppenderAttachableImpl appenders>;

        virtualinvoke $r4.<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAppender(java.lang.String)>(r1);

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setRewritePolicy(org.apache.log4j.rewrite.RewritePolicy)
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.apache.log4j.rewrite.RewritePolicy r1;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.apache.log4j.rewrite.RewritePolicy;

        r0.<org.apache.log4j.rewrite.RewriteAppender: org.apache.log4j.rewrite.RewritePolicy policy> = r1;

        return;
    }

    public boolean parseUnrecognizedElement(org.w3c.dom.Element, java.util.Properties) throws java.lang.Exception
    {
        org.apache.log4j.rewrite.RewriteAppender r0;
        org.w3c.dom.Element r1;
        java.util.Properties r2;
        java.lang.String r3, $r5;
        java.lang.Object r4;
        boolean $z0, $z1;
        org.apache.log4j.rewrite.RewritePolicy $r6;
        org.apache.log4j.spi.OptionHandler $r7;

        r0 := @this: org.apache.log4j.rewrite.RewriteAppender;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.util.Properties;

        r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r5 = "rewritePolicy";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        r4 = staticinvoke <org.apache.log4j.xml.DOMConfigurator: java.lang.Object parseElement(org.w3c.dom.Element,java.util.Properties,java.lang.Class)>(r1, r2, class "org/apache/log4j/rewrite/RewritePolicy");

        if r4 == null goto label2;

        $z1 = r4 instanceof org.apache.log4j.spi.OptionHandler;

        if $z1 == 0 goto label1;

        $r7 = (org.apache.log4j.spi.OptionHandler) r4;

        interfaceinvoke $r7.<org.apache.log4j.spi.OptionHandler: void activateOptions()>();

     label1:
        $r6 = (org.apache.log4j.rewrite.RewritePolicy) r4;

        virtualinvoke r0.<org.apache.log4j.rewrite.RewriteAppender: void setRewritePolicy(org.apache.log4j.rewrite.RewritePolicy)>($r6);

     label2:
        return 1;

     label3:
        return 0;
    }
}
