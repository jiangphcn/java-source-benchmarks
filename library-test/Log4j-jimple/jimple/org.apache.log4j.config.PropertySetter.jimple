public class org.apache.log4j.config.PropertySetter extends java.lang.Object
{
    protected java.lang.Object obj;
    protected java.beans.PropertyDescriptor[] props;

    public void <init>(java.lang.Object)
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj> = r1;

        return;
    }

    protected void introspect()
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.Object $r1, $r6;
        java.lang.Class $r2;
        java.beans.PropertyDescriptor[] $r3, $r12;
        java.beans.IntrospectionException $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        java.beans.BeanInfo r13;

        r0 := @this: org.apache.log4j.config.PropertySetter;

     label1:
        $r1 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r13 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r2);

        $r3 = interfaceinvoke r13.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to introspect ");

        $r6 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r4.<java.beans.IntrospectionException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r11);

        $r12 = newarray (java.beans.PropertyDescriptor)[0];

        r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props> = $r12;

     label4:
        return;

        catch java.beans.IntrospectionException from label1 to label2 with label3;
    }

    public static void setProperties(java.lang.Object, java.util.Properties, java.lang.String)
    {
        java.lang.Object r0;
        java.util.Properties r1;
        java.lang.String r2;
        org.apache.log4j.config.PropertySetter $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Properties;

        r2 := @parameter2: java.lang.String;

        $r3 = new org.apache.log4j.config.PropertySetter;

        specialinvoke $r3.<org.apache.log4j.config.PropertySetter: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r3.<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>(r1, r2);

        return;
    }

    public void setProperties(java.util.Properties, java.lang.String)
    {
        org.apache.log4j.config.PropertySetter r0, $r21;
        java.util.Properties r1;
        java.lang.String r2, r4, $r9, $r11, $r16, $r18, $r23, $r26, $r31, $r42, $r49, r50, r51, $r59;
        int i0, $i1, $i2;
        java.util.Enumeration r3;
        java.beans.PropertyDescriptor r5;
        org.apache.log4j.spi.OptionHandler r6;
        java.lang.Object $r8, $r10, $r20, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Class $r12, $r13, $r19;
        java.lang.reflect.Method $r14, $r27;
        java.lang.StringBuilder $r15, $r17, $r22, $r24, $r25, $r37, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r47, $r48, $r54, $r55, $r56, $r57, $r58;
        java.lang.Object[] $r28;
        java.lang.reflect.InvocationTargetException $r32;
        java.lang.Throwable $r33, $r35;
        java.lang.Thread $r34;
        java.lang.IllegalAccessException $r36;
        java.lang.RuntimeException $r43;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r1 := @parameter0: java.util.Properties;

        r2 := @parameter1: java.lang.String;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r3 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

        goto label13;

     label01:
        $r8 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r50 = (java.lang.String) $r8;

        $z0 = virtualinvoke r50.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label13;

        $i1 = i0 + 1;

        $i2 = virtualinvoke r50.<java.lang.String: int indexOf(int,int)>(46, $i1);

        if $i2 <= 0 goto label02;

        goto label13;

     label02:
        r4 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(r50, r1);

        r51 = virtualinvoke r50.<java.lang.String: java.lang.String substring(int)>(i0);

        $r9 = "layout";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z1 != 0 goto label03;

        $r31 = "errorhandler";

        $z4 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z4 == 0 goto label04;

     label03:
        $r10 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $z2 = $r10 instanceof org.apache.log4j.Appender;

        if $z2 == 0 goto label04;

        goto label13;

     label04:
        $r11 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>(r51);

        r5 = virtualinvoke r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>($r11);

        if r5 == null goto label12;

        $r12 = class "org/apache/log4j/spi/OptionHandler";

        $r13 = virtualinvoke r5.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        $z3 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13);

        if $z3 == 0 goto label12;

        $r14 = virtualinvoke r5.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if $r14 == null goto label12;

        $r15 = new java.lang.StringBuilder;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke r5.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        $r20 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>(r1, $r18, $r19, null);

        r6 = (org.apache.log4j.spi.OptionHandler) $r20;

        $r21 = new org.apache.log4j.config.PropertySetter;

        specialinvoke $r21.<org.apache.log4j.config.PropertySetter: void <init>(java.lang.Object)>(r6);

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>(r1, $r26);

     label05:
        $r27 = virtualinvoke r5.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r29 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r6;

        virtualinvoke $r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r29, $r28);

     label06:
        goto label13;

     label07:
        $r36 := @caughtexception;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to set property [");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to value \"");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r42, $r36);

        goto label13;

     label08:
        $r32 := @caughtexception;

        $r33 = virtualinvoke $r32.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z5 = $r33 instanceof java.lang.InterruptedException;

        if $z5 != 0 goto label09;

        $r35 = virtualinvoke $r32.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z6 = $r35 instanceof java.io.InterruptedIOException;

        if $z6 == 0 goto label10;

     label09:
        $r34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r34.<java.lang.Thread: void interrupt()>();

     label10:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to set property [");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to value \"");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r59, $r32);

        goto label13;

     label11:
        $r43 := @caughtexception;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to set property [");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to value \"");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r49, $r43);

        goto label13;

     label12:
        virtualinvoke r0.<org.apache.log4j.config.PropertySetter: void setProperty(java.lang.String,java.lang.String)>(r51, r4);

     label13:
        $z7 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 != 0 goto label01;

        virtualinvoke r0.<org.apache.log4j.config.PropertySetter: void activate()>();

        return;

        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label08;
        catch java.lang.RuntimeException from label05 to label06 with label11;
    }

    public void setProperty(java.lang.String, java.lang.String)
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.String r1, $r9, $r12, $r19, r21, r22;
        java.beans.PropertyDescriptor r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object $r7;
        java.lang.Class $r8;
        org.apache.log4j.config.PropertySetterException $r13;
        java.lang.Throwable $r20;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r21 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        r22 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>(r21);

        r2 = virtualinvoke r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>(r22);

        if r2 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("No such property [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] in ");

        $r7 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r12);

        goto label5;

     label2:
        virtualinvoke r0.<org.apache.log4j.config.PropertySetter: void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)>(r2, r22, r1);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to set property [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to value \"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = $r13.<org.apache.log4j.config.PropertySetterException: java.lang.Throwable rootCause>;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r19, $r20);

     label5:
        return;

        catch org.apache.log4j.config.PropertySetterException from label2 to label3 with label4;
    }

    public void setProperty(java.beans.PropertyDescriptor, java.lang.String, java.lang.String) throws org.apache.log4j.config.PropertySetterException
    {
        org.apache.log4j.config.PropertySetter r0;
        java.beans.PropertyDescriptor r1;
        java.lang.String r2, r3, $r13, $r22, $r28, $r44;
        java.lang.reflect.Method r4;
        java.lang.Class[] r5;
        java.lang.Object r6, $r15;
        int $i0;
        java.lang.Class $r7, $r19, $r40;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r18, $r20, $r21, $r25, $r26, $r27, $r39, $r41, $r42, $r43;
        java.lang.Object[] $r14;
        org.apache.log4j.config.PropertySetterException $r17, $r23, $r24, $r30, $r36, $r38, $r48;
        java.lang.IllegalAccessException $r29;
        java.lang.reflect.InvocationTargetException $r31;
        java.lang.Throwable $r32, $r34, $r37;
        boolean $z0, $z1;
        java.lang.Thread $r33;
        java.lang.RuntimeException $r35;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r1 := @parameter0: java.beans.PropertyDescriptor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        if r4 != null goto label01;

        $r24 = new org.apache.log4j.config.PropertySetterException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("No setter for property [");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label01:
        r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof r5;

        if $i0 == 1 goto label02;

        $r23 = new org.apache.log4j.config.PropertySetterException;

        specialinvoke $r23.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.String)>("#params for setter != 1");

        throw $r23;

     label02:
        $r7 = r5[0];

        r6 = virtualinvoke r0.<org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)>(r3, $r7);

     label03:
        goto label05;

     label04:
        $r37 := @caughtexception;

        $r38 = new org.apache.log4j.config.PropertySetterException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("Conversion to type [");

        $r40 = r5[0];

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed. Reason: ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.String)>($r44);

        throw $r38;

     label05:
        if r6 != null goto label06;

        $r17 = new org.apache.log4j.config.PropertySetterException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Conversion to type [");

        $r19 = r5[0];

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Setting property [");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r13);

     label07:
        $r15 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r6;

        virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r15, $r14);

     label08:
        goto label14;

     label09:
        $r29 := @caughtexception;

        $r30 = new org.apache.log4j.config.PropertySetterException;

        specialinvoke $r30.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.Throwable)>($r29);

        throw $r30;

     label10:
        $r31 := @caughtexception;

        $r32 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z0 = $r32 instanceof java.lang.InterruptedException;

        if $z0 != 0 goto label11;

        $r34 = virtualinvoke $r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z1 = $r34 instanceof java.io.InterruptedIOException;

        if $z1 == 0 goto label12;

     label11:
        $r33 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r33.<java.lang.Thread: void interrupt()>();

     label12:
        $r48 = new org.apache.log4j.config.PropertySetterException;

        specialinvoke $r48.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.Throwable)>($r31);

        throw $r48;

     label13:
        $r35 := @caughtexception;

        $r36 = new org.apache.log4j.config.PropertySetterException;

        specialinvoke $r36.<org.apache.log4j.config.PropertySetterException: void <init>(java.lang.Throwable)>($r35);

        throw $r36;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label13;
    }

    protected java.lang.Object convertArg(java.lang.String, java.lang.Class)
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.String r1, r3, $r13, $r14;
        java.lang.Class r2, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r10;
        org.apache.log4j.Level $r11, $r12;
        java.lang.Boolean $r15, $r16;
        java.lang.Long $r17;
        java.lang.Integer $r18;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $r4 = class "java/lang/String";

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label2;

        return r1;

     label2:
        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 == 0 goto label3;

        $r18 = new java.lang.Integer;

        specialinvoke $r18.<java.lang.Integer: void <init>(java.lang.String)>(r3);

        return $r18;

     label3:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 == 0 goto label4;

        $r17 = new java.lang.Long;

        specialinvoke $r17.<java.lang.Long: void <init>(java.lang.String)>(r3);

        return $r17;

     label4:
        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z3 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z3 == 0 goto label6;

        $r13 = "true";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z6 == 0 goto label5;

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r16;

     label5:
        $r14 = "false";

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z7 == 0 goto label8;

        $r15 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r15;

     label6:
        $r8 = class "org/apache/log4j/Priority";

        $z4 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z4 == 0 goto label7;

        $r11 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r12 = staticinvoke <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(r3, $r11);

        return $r12;

     label7:
        $r9 = class "org/apache/log4j/spi/ErrorHandler";

        $z5 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z5 == 0 goto label8;

        $r10 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>(r3, class "org/apache/log4j/spi/ErrorHandler", null);

        return $r10;

     label8:
        return null;
    }

    protected java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.String r1, $r6;
        java.beans.PropertyDescriptor[] $r2, $r3, $r4, $r7;
        int $i0, i1;
        java.beans.PropertyDescriptor $r5, $r8;
        boolean $z0;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props>;

        if $r2 != null goto label1;

        virtualinvoke r0.<org.apache.log4j.config.PropertySetter: void introspect()>();

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r4 = r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props>;

        $r5 = $r4[i1];

        $r6 = virtualinvoke $r5.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r7 = r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props>;

        $r8 = $r7[i1];

        return $r8;

     label3:
        i1 = i1 + 1;

     label4:
        $r3 = r0.<org.apache.log4j.config.PropertySetter: java.beans.PropertyDescriptor[] props>;

        $i0 = lengthof $r3;

        if i1 < $i0 goto label2;

        return null;
    }

    public void activate()
    {
        org.apache.log4j.config.PropertySetter r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        org.apache.log4j.spi.OptionHandler $r3;

        r0 := @this: org.apache.log4j.config.PropertySetter;

        $r1 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $z0 = $r1 instanceof org.apache.log4j.spi.OptionHandler;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.log4j.config.PropertySetter: java.lang.Object obj>;

        $r3 = (org.apache.log4j.spi.OptionHandler) $r2;

        interfaceinvoke $r3.<org.apache.log4j.spi.OptionHandler: void activateOptions()>();

     label1:
        return;
    }
}
