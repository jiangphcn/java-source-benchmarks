public class org.apache.log4j.pattern.RelativeTimePatternConverter extends org.apache.log4j.pattern.LoggingEventPatternConverter
{
    private org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp lastTimestamp;

    public void <init>()
    {
        org.apache.log4j.pattern.RelativeTimePatternConverter r0;
        org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp $r1;

        r0 := @this: org.apache.log4j.pattern.RelativeTimePatternConverter;

        specialinvoke r0.<org.apache.log4j.pattern.LoggingEventPatternConverter: void <init>(java.lang.String,java.lang.String)>("Time", "time");

        $r1 = new org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp;

        specialinvoke $r1.<org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp: void <init>(long,java.lang.String)>(0L, "");

        r0.<org.apache.log4j.pattern.RelativeTimePatternConverter: org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp lastTimestamp> = $r1;

        return;
    }

    public static org.apache.log4j.pattern.RelativeTimePatternConverter newInstance(java.lang.String[])
    {
        java.lang.String[] r0;
        org.apache.log4j.pattern.RelativeTimePatternConverter $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new org.apache.log4j.pattern.RelativeTimePatternConverter;

        specialinvoke $r1.<org.apache.log4j.pattern.RelativeTimePatternConverter: void <init>()>();

        return $r1;
    }

    public void format(org.apache.log4j.spi.LoggingEvent, java.lang.StringBuffer)
    {
        org.apache.log4j.pattern.RelativeTimePatternConverter r0;
        org.apache.log4j.spi.LoggingEvent r1;
        java.lang.StringBuffer r2;
        long l0, $l1, $l2;
        java.lang.String r3;
        org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.pattern.RelativeTimePatternConverter;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r2 := @parameter1: java.lang.StringBuffer;

        l0 = r1.<org.apache.log4j.spi.LoggingEvent: long timeStamp>;

        $r4 = r0.<org.apache.log4j.pattern.RelativeTimePatternConverter: org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp lastTimestamp>;

        $z0 = virtualinvoke $r4.<org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp: boolean format(long,java.lang.StringBuffer)>(l0, r2);

        if $z0 != 0 goto label1;

        $l1 = staticinvoke <org.apache.log4j.spi.LoggingEvent: long getStartTime()>();

        $l2 = l0 - $l1;

        r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r6 = new org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp;

        specialinvoke $r6.<org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp: void <init>(long,java.lang.String)>(l0, r3);

        r0.<org.apache.log4j.pattern.RelativeTimePatternConverter: org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp lastTimestamp> = $r6;

     label1:
        return;
    }
}
