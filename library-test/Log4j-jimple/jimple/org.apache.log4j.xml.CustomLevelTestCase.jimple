public class org.apache.log4j.xml.CustomLevelTestCase extends junit.framework.TestCase
{
    static java.lang.String TEMP;
    org.apache.log4j.Logger root;
    org.apache.log4j.Logger logger;

    static void <clinit>()
    {
        <org.apache.log4j.xml.CustomLevelTestCase: java.lang.String TEMP> = "output/temp";

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);

        return;
    }

    public void setUp()
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        org.apache.log4j.Logger $r1, $r2;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>();

        r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger root> = $r1;

        $r2 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "org/apache/log4j/xml/CustomLevelTestCase");

        r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger> = $r2;

        return;
    }

    public void tearDown()
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.spi.LoggerRepository $r2;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        $r1 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger root>;

        $r2 = virtualinvoke $r1.<org.apache.log4j.Logger: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>();

        interfaceinvoke $r2.<org.apache.log4j.spi.LoggerRepository: void resetConfiguration()>();

        return;
    }

    public void test1() throws java.lang.Exception
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>("input/xml/customLevel1.xml");

        virtualinvoke r0.<org.apache.log4j.xml.CustomLevelTestCase: void common()>();

        $r1 = <org.apache.log4j.xml.CustomLevelTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/customLevel.1");

        staticinvoke <org.apache.log4j.xml.CustomLevelTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test2() throws java.lang.Exception
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>("input/xml/customLevel2.xml");

        virtualinvoke r0.<org.apache.log4j.xml.CustomLevelTestCase: void common()>();

        $r1 = <org.apache.log4j.xml.CustomLevelTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/customLevel.2");

        staticinvoke <org.apache.log4j.xml.CustomLevelTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test3() throws java.lang.Exception
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>("input/xml/customLevel3.xml");

        virtualinvoke r0.<org.apache.log4j.xml.CustomLevelTestCase: void common()>();

        $r1 = <org.apache.log4j.xml.CustomLevelTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/customLevel.3");

        staticinvoke <org.apache.log4j.xml.CustomLevelTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    public void test4() throws java.lang.Exception
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>("input/xml/customLevel4.xml");

        virtualinvoke r0.<org.apache.log4j.xml.CustomLevelTestCase: void common()>();

        $r1 = <org.apache.log4j.xml.CustomLevelTestCase: java.lang.String TEMP>;

        $z0 = staticinvoke <org.apache.log4j.util.Compare: boolean compare(java.lang.String,java.lang.String)>($r1, "witness/customLevel.4");

        staticinvoke <org.apache.log4j.xml.CustomLevelTestCase: void assertTrue(boolean)>($z0);

        return;
    }

    void common()
    {
        org.apache.log4j.xml.CustomLevelTestCase r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r20;
        org.apache.log4j.Logger $r2, $r6, $r10, $r14, $r18;
        java.lang.String $r4, $r8, $r12, $r16, $r21;
        org.apache.log4j.xml.XLevel $r19;
        int i1, i2, i3, i4, i5;

        r0 := @this: org.apache.log4j.xml.CustomLevelTestCase;

        $r2 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        i1 = 0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        i2 = i1 + 1;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void info(java.lang.Object)>($r8);

        $r10 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        i3 = i2 + 1;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r12);

        $r14 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        i4 = i3 + 1;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.log4j.Logger: void error(java.lang.Object)>($r16);

        $r18 = r0.<org.apache.log4j.xml.CustomLevelTestCase: org.apache.log4j.Logger logger>;

        $r19 = <org.apache.log4j.xml.XLevel: org.apache.log4j.xml.XLevel TRACE>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Message ");

        i5 = i4 + 1;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.log4j.Logger: void log(org.apache.log4j.Priority,java.lang.Object)>($r19, $r21);

        return;
    }

    public static junit.framework.Test suite()
    {
        junit.framework.TestSuite $r1;
        org.apache.log4j.xml.CustomLevelTestCase $r2, $r3, $r4, $r5;

        $r1 = new junit.framework.TestSuite;

        specialinvoke $r1.<junit.framework.TestSuite: void <init>()>();

        $r2 = new org.apache.log4j.xml.CustomLevelTestCase;

        specialinvoke $r2.<org.apache.log4j.xml.CustomLevelTestCase: void <init>(java.lang.String)>("test1");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r2);

        $r3 = new org.apache.log4j.xml.CustomLevelTestCase;

        specialinvoke $r3.<org.apache.log4j.xml.CustomLevelTestCase: void <init>(java.lang.String)>("test2");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r3);

        $r4 = new org.apache.log4j.xml.CustomLevelTestCase;

        specialinvoke $r4.<org.apache.log4j.xml.CustomLevelTestCase: void <init>(java.lang.String)>("test3");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r4);

        $r5 = new org.apache.log4j.xml.CustomLevelTestCase;

        specialinvoke $r5.<org.apache.log4j.xml.CustomLevelTestCase: void <init>(java.lang.String)>("test4");

        virtualinvoke $r1.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r5);

        return $r1;
    }
}
