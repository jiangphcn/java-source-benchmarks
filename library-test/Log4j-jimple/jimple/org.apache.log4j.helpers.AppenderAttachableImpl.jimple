public class org.apache.log4j.helpers.AppenderAttachableImpl extends java.lang.Object implements org.apache.log4j.spi.AppenderAttachable
{
    protected java.util.Vector appenderList;

    public void <init>()
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        org.apache.log4j.Appender r1;
        java.util.Vector $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: org.apache.log4j.Appender;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r2 != null goto label2;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>(int)>(1);

        r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList> = $r5;

     label2:
        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r1);

     label3:
        return;
    }

    public int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.Appender r2;
        java.util.Vector $r3, $r4, $r5;
        java.lang.Object $r6;
        int i0, i1;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        i0 = 0;

        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r5 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.log4j.Appender) $r6;

        interfaceinvoke r2.<org.apache.log4j.Appender: void doAppend(org.apache.log4j.spi.LoggingEvent)>(r1);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return i0;
    }

    public java.util.Enumeration getAllAppenders()
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        java.util.Vector $r1, $r2;
        java.util.Enumeration $r3;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        $r1 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

        return $r3;
    }

    public org.apache.log4j.Appender getAppender(java.lang.String)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        java.lang.String r1, $r7;
        int i0, i1;
        org.apache.log4j.Appender r2;
        java.util.Vector $r3, $r4, $r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r3 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

        goto label5;

     label3:
        $r5 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.log4j.Appender) $r6;

        $r7 = interfaceinvoke r2.<org.apache.log4j.Appender: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        return r2;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

        return null;
    }

    public boolean isAttached(org.apache.log4j.Appender)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        org.apache.log4j.Appender r1, r2;
        int i0, i1;
        java.util.Vector $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: org.apache.log4j.Appender;

        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r3 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

        goto label5;

     label3:
        $r5 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.log4j.Appender) $r6;

        if r2 != r1 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

        return 0;
    }

    public void removeAllAppenders()
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        int i0, i1;
        org.apache.log4j.Appender r1;
        java.util.Vector $r2, $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        $r2 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r1 = (org.apache.log4j.Appender) $r5;

        interfaceinvoke r1.<org.apache.log4j.Appender: void close()>();

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        $r6 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        virtualinvoke $r6.<java.util.Vector: void removeAllElements()>();

        r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList> = null;

     label3:
        return;
    }

    public void removeAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        org.apache.log4j.Appender r1;
        java.util.Vector $r2, $r3;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: org.apache.log4j.Appender;

        if r1 == null goto label1;

        $r2 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>(r1);

        return;
    }

    public void removeAppender(java.lang.String)
    {
        org.apache.log4j.helpers.AppenderAttachableImpl r0;
        java.lang.String r1, $r7;
        int i0, i1;
        java.util.Vector $r2, $r3, $r4, $r8;
        java.lang.Object $r5;
        org.apache.log4j.Appender $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.helpers.AppenderAttachableImpl;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i1 = 0;

        goto label5;

     label3:
        $r4 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r6 = (org.apache.log4j.Appender) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.log4j.Appender: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r8 = r0.<org.apache.log4j.helpers.AppenderAttachableImpl: java.util.Vector appenderList>;

        virtualinvoke $r8.<java.util.Vector: void removeElementAt(int)>(i1);

        goto label6;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

     label6:
        return;
    }
}
